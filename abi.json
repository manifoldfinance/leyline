{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ExcessiveInputAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ExecuteNotAuthorized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Expired",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IdenticalAddresses",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientAAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientAllowance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientBAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientLiquidity",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientLiquidity",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientOutputAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidPath",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidPath",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoReceivers",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoTokens",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotPercent",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Overflow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TokenIsFeeOnTransfer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Unauthorized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroAmount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        }
      ],
      "name": "LoanError",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "MEV",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountADesired",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountBDesired",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountAMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountBMin",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "addLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountTokenDesired",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountTokenMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountETHMin",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "addLiquidityETH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountToken",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountETH",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancelOwnershipTransfer",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "assets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "premiums",
          "type": "uint256[]"
        },
        {
          "internalType": "address",
          "name": "initiator",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "params",
          "type": "bytes"
        }
      ],
      "name": "executeOperation",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reserveIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reserveOut",
          "type": "uint256"
        }
      ],
      "name": "getAmountIn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reserveIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reserveOut",
          "type": "uint256"
        }
      ],
      "name": "getAmountOut",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "path",
          "type": "address[]"
        }
      ],
      "name": "getAmountsIn",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "path",
          "type": "address[]"
        }
      ],
      "name": "getAmountsOut",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "percentage",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "receivers",
          "type": "address[]"
        }
      ],
      "name": "harvest",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onFlashLoan",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reserveA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reserveB",
          "type": "uint256"
        }
      ],
      "name": "quote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountAMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountBMin",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "removeLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountTokenMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountETHMin",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "removeLiquidityETH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountToken",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountETH",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountTokenMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountETHMin",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "removeLiquidityETHSupportingFeeOnTransferTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountETH",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountTokenMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountETHMin",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "approveMax",
          "type": "bool"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "removeLiquidityETHWithPermit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountToken",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountETH",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountTokenMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountETHMin",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "approveMax",
          "type": "bool"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountETH",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountAMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountBMin",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "approveMax",
          "type": "bool"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "removeLiquidityWithPermit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "path",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "swapETHForExactTokens",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountOutMin",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "path",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "swapExactETHForTokens",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountOutMin",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "path",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountOutMin",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "path",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "swapExactTokensForETH",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountOutMin",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "path",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountOutMin",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "path",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "swapExactTokensForTokens",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountOutMin",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "path",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountInMax",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "path",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "swapTokensForExactETH",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountInMax",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "path",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "swapTokensForExactTokens",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "updateAaveAsset",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "updateAllAaveAssets",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x608060409080825234620001cc57600080546001600160a01b031916329081178255909190827f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08184a36334651b6f60e21b815260049180828481737d2768de32b0b80b7a3454c06bdac94a69ddc7a95afa918215620001c0578192620000ef575b50815191815b8381106200009e57855161468e90816200020c8239f35b8151811015620000dc57600581901b82016020908101516001600160a01b0316845260029052858320805460ff191660019081179091550162000087565b634e487b7160e01b835260328552602483fd5b9091503d8083833e620001038183620001d1565b81016020908183820312620001bc5782516001600160401b0393848211620001a1570181601f82011215620001b8578051938411620001a5578360051b908751946200015285840187620001d1565b85528380860192820101928311620001a1578301905b8282106200017c5750505050903862000081565b81516001600160a01b03811681036200019d57815290830190830162000168565b8680fd5b8580fd5b634e487b7160e01b855260418652602485fd5b8480fd5b8380fd5b508351903d90823e3d90fd5b600080fd5b601f909101601f19168101906001600160401b03821190821017620001f557604052565b634e487b7160e01b600052604160045260246000fdfe60806040526004361015610018575b361561001657005b005b60003560e01c806302751cec14610298578063054d50d41461028f57806318cbafe5146102865780631f00ca741461027d5780632195995c1461027457806323452b9c1461026b57806323e30c8b1461026257806331e634591461025957806338ed1739146102505780634a25d94a146102475780635b0d59841461023e5780635c11d79514610235578063791ac9471461022c57806379ba5097146102235780637ff36ab51461021a57806385f8c259146102115780638803dbee146102085780638da5cb5b146101ff5780638f32d59b146101f6578063920f5c84146101ed578063ad615dec146101e4578063af2979eb146101db578063b4b0ce68146101d2578063b6f9de95146101c9578063baa2abde146101c0578063d06ca61f146101b7578063dc1efb41146101ae578063ded9382a146101a5578063e8e337001461019c578063f2fde38b14610193578063f305d7191461018a5763fb3bdb410361000e57610185611b69565b61000e565b50610185611a01565b506101856119a9565b50610185611898565b506101856117f6565b5061018561179f565b506101856116f1565b506101856116a1565b506101856115e4565b50610185611451565b50610185611431565b50610185611417565b50610185611368565b5061018561133f565b50610185611315565b5061018561124c565b50610185611232565b506101856110cf565b50610185611006565b50610185610eab565b50610185610cff565b50610185610c2d565b50610185610a6b565b5061018561098c565b506101856108a9565b506101856107d8565b50610185610784565b50610185610707565b50610185610648565b5061018561041e565b5061018561033d565b506101856102ef565b6001600160a01b038116036102b257565b600080fd5b60c09060031901126102b2576004356102cf816102a1565b906024359060443590606435906084356102e8816102a1565b9060a43590565b50346102b25761030d610301366102b7565b94939093929192612719565b60408051928352602083019190915290f35b0390f35b60609060031901126102b257600435906024359060443590565b50346102b257602061035761035136610323565b91612ed6565b604051908152f35b9181601f840112156102b2578235916001600160401b0383116102b2576020808501948460051b0101116102b257565b60a06003198201126102b2576004359160243591604435906001600160401b0382116102b2576103c19160040161035f565b90916064356103cf816102a1565b9060843590565b90815180825260208080930193019160005b8281106103f6575050505090565b8351855293810193928101926001016103e8565b90602061041b9281815201906103d6565b90565b50346102b25761043a6104303661038f565b9590939495612009565b60008051602061466283398151915294856001600160a01b0361046a61046560001986018688612a9f565b612ab7565b16036106035773c0aee478e3658e2610c5f7a4a2e1777ce9e4f2ac9161049a6104943683876129d4565b83612b60565b936104a785516000190190565b968060c06104b58a89612a5d565b510151106105a4575b506104d361046561050494936104df93612a7f565b6001600160a01b031690565b6104fc60806104ed87612a43565b5101516001600160a01b031690565b9033906142c7565b60c061051a6105138430612f9b565b9584612a5d565b51015194803b156102b25761031f956105729461056d9260006040518092632e1a7d4d60e01b825281838161055789600483019190602083019252565b03925af18015610597575b61057e575b506142b5565b613514565b6040519182918261040a565b8061058b61059192611d08565b80610779565b38610567565b61059f611d58565b610562565b9450925090735c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f926105d36105cd3685846129d4565b83612d70565b9460c06105e08988612a5d565b510151106105f157389291926104be565b6040516342301c2360e01b8152600490fd5b6040516320db826760e01b8152600490fd5b9060406003198301126102b25760043591602435906001600160401b0382116102b2576106449160040161035f565b9091565b50346102b25761066461065a36610615565b92919236916129d4565b90815191600283106106035761067983612f69565b916000198094019061068b8285612a5d565b52805b6106a0576040518061031f858261040a565b83908181016106ee6106e76106d66001600160a01b03806106c1868a612a5d565b5116906106ce878a612a5d565b5116906123f2565b906106e1868a612a5d565b516132d3565b9186612a5d565b52018061068e565b610104359060ff821682036102b257565b50346102b2576101603660031901126102b257600435610726816102a1565b60243590610733826102a1565b60a43590610740826102a1565b60e4359283151584036102b25761030d936107596106f6565b916101443594610124359460c43592608435916064359160443591612872565b60009103126102b257565b5060003660031901126102b2576107996143d7565b600180546001600160a01b0319169055005b9181601f840112156102b2578235916001600160401b0383116102b257602083818601950101116102b257565b50346102b25760a03660031901126102b2576004356107f6816102a1565b60243590610803826102a1565b604435906084356001600160401b0381116102b2576108269036906004016107ab565b9073f5bce5077908a1b7370b9ae04adc565ebd64396633036108975761087d928561086d61085a8794610873963691613d25565b601481015191603c602883015192015190565b91614030565b9160643590613347565b809111156105f157610016916001600160a01b0316614307565b6040516375c366a960e01b8152600490fd5b50600080600319360112610989576108bf6143d7565b6040516334651b6f60e21b81528181600481737d2768de32b0b80b7a3454c06bdac94a69ddc7a95afa90811561097c575b829161095a575b50805190825b82811061090a5783604051f35b8061095461094761092d61092060019587612a5d565b516001600160a01b031690565b6001600160a01b0316600090815260026020526040902090565b805460ff19166001179055565b016108fd565b61097691503d8084833e61096e8183611d28565b8101906141df565b386108f7565b610984611d58565b6108f0565b80fd5b50346102b2576109a961099e3661038f565b959095949294612009565b73c0aee478e3658e2610c5f7a4a2e1777ce9e4f2ac936109d36109cd3684846129d4565b84612b60565b936000198551018160c06109e78389612a5d565b51015110610a1c575b61031f8761057288610a16818d610a118c6104df6104d36104658f8f612a7f565b612f9b565b92613514565b939294509450735c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f9460c0610a58610a51610a4b3689876129d4565b86612d70565b9586612a5d565b510151106105f1573880949293946109f0565b50346102b257610a89610a7d3661038f565b95909392919495612009565b60008051602061466283398151915293846001600160a01b03610ab461046560001985018587612a9f565b16036106035773c0aee478e3658e2610c5f7a4a2e1777ce9e4f2ac91610ae4610ade3684846129d4565b88613066565b938060a0610af187612a43565b51015111610b76575b506104d3610465610b3293610b0e93612a7f565b610b1c60806104ed86612a43565b60a0610b2786612a43565b5101519133906142c7565b610b3c8230612f9b565b93803b156102b25761031f956105729461056d9260006040518092632e1a7d4d60e01b825281838161055789600483019190602083019252565b9350735c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f9250610ba3610b9d3684846129d4565b8861322c565b9360a0610baf86612a43565b51015111610bbd5738610afa565b60405163e1b0da4f60e01b8152600490fd5b6101409060031901126102b257600435610be8816102a1565b90602435906044359060643590608435610c01816102a1565b9060a4359060c43580151581036102b2579060e43560ff811681036102b2579061010435906101243590565b50346102b257610c3c36610bcf565b610c71610c64610c558c959b969c9a979a999899611de5565b6001600160a01b039291611e6a565b166001600160a01b031690565b9915610cf857600019985b8a3b156102b25761031f9a896000610cc89c610cb282966040519889978896879563d505accf60e01b8752303360048901612836565b03925af18015610ceb575b610cd8575b50612901565b6040519081529081906020820190565b8061058b610ce592611d08565b38610cc2565b610cf3611d58565b610cbd565b8398610c7c565b50346102b257610d57610e20610d24610d173661038f565b9792949195909397612009565b610d346104d36104658787612a7f565b6104fc610d446104658888612a7f565b610d516104658989612a90565b90611dd0565b6000198301610d6e6104d380610465848888612a9f565b6040516370a0823160e01b8082526001600160a01b038516600483015290956020959193929091908690889060249082905afa968715610e9e575b600097610e61575b506104d36104d36104658795899795610de095610ddb610e059b610dd63685856129d4565b613353565b612a9f565b6040519182526001600160a01b03909216600482015292839190829081906024820190565b03915afa918215610e54575b600092610e27575b5050612532565b106105f157005b610e469250803d10610e4d575b610e3e8183611d28565b810190611d49565b3880610e19565b503d610e34565b610e5c611d58565b610e11565b610de09197506104d3610465610e059795899795610e8e6104d3958a3d8c11610e4d57610e3e8183611d28565b9b95509597509597505050610db1565b610ea6611d58565b610da9565b50346102b257610ec8610ebd3661038f565b959093949295612009565b60008051602061466283398151915294856001600160a01b03610ef361046560001986018686612a9f565b160361060357610f2d610f9993610f106104d36104658686612a7f565b6104fc610f206104658787612a7f565b610d516104658888612a90565b6040516370a0823160e01b808252306004830152909260209283856024818c5afa948515610ff9575b600095610fd0575b5090610dd6610f7092309236916129d4565b60405190815230600482015281816024818a5afa918215610e5457600092610e27575050612532565b9182106105f157823b156102b257604051632e1a7d4d60e01b81526004810183905261001693600090829081838160248101610557565b610f7092919550610ff0610dd691863d8811610e4d57610e3e8183611d28565b95919250610f5e565b611001611d58565b610f56565b50346102b257600080600319360112610989576001546001600160a01b0390818116330361107a576bffffffffffffffffffffffff60a01b80911660015582549060405192339083167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08686a31633178255f35b6040516282b42960e81b8152600490fd5b9060806003198301126102b25760043591602435906001600160401b0382116102b2576110ba9160040161035f565b90916044356110c8816102a1565b9060643590565b506110e86110dc3661108b565b94909493919293612009565b60008051602061466283398151915291826001600160a01b0361110e6104658488612a7f565b16036106035773c0aee478e3658e2610c5f7a4a2e1777ce9e4f2ac9361113e6111383684846129d4565b34612b60565b9261114b84516000190190565b918160c06111598588612a5d565b510151106111e4575b50505050813b156102b257610a168161031f95600460006105729660405192838092630d0e30db60e41b825234905af180156111d7575b6111c4575b50610a116111b060806104ed85612a43565b60a06111bb85612a43565b51015190614355565b8061058b6111d192611d08565b3861119e565b6111df611d58565b611199565b6112219193965060c092945061121461121a91735c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f9836916129d4565b34612d70565b9384612a5d565b510151106105f15738808080611162565b50346102b257602061035761124636610323565b916132d3565b50346102b25761126761125e3661038f565b95909295612009565b73c0aee478e3658e2610c5f7a4a2e1777ce9e4f2ac9361129161128b3684896129d4565b82613066565b938060a061129e87612a43565b510151116112c8575b5050826105729392610a11610b0e6104d3610465610a169661031f9b612a7f565b92935093506112f7735c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f946112f13684896129d4565b9061322c565b9160a061130384612a43565b51015111610bbd5738809392936112a7565b50346102b25760003660031901126102b2576000546040516001600160a01b039091168152602090f35b50346102b25760003660031901126102b257602060018060a01b03600054163314604051908152f35b50346102b25760a03660031901126102b2576001600160401b036004358181116102b25761139a90369060040161035f565b6024929192358281116102b2576113b590369060040161035f565b6044949194358481116102b2576113d090369060040161035f565b90606435926113de846102a1565b6084359687116102b25761031f976113fd6114059836906004016107ab565b979096613f32565b60405190151581529081906020820190565b50346102b257602061035761142b36610323565b916124c4565b50346102b2576020610357611445366102b7565b94939093929192612901565b5060603660031901126102b25760048035906001600160401b036024358181116102b257611482903690840161035f565b9290916044359081116102b25761149c903690830161035f565b9190926114a76143d7565b6064861180156115dc575b6115cc5782156115bc5784156115ac5760005b8581106114ce57005b6114df6104d3610465838986612a9f565b6040516370a0823160e01b81523085820190815261153c9161152d918b91602091829082908190830103816001600160a01b038a165afa91821561159f575b600092611582575b5050612491565b6115368761241b565b906124a4565b908161154d575b50506001016114c5565b60005b868881831061156157505050611543565b84611576610465856001969561157c95612a9f565b8561439d565b01611550565b6115989250803d10610e4d57610e3e8183611d28565b3880611526565b6115a7611d58565b61151e565b5060405163df95788360e01b8152fd5b5060405163cfebf47b60e01b8152fd5b50604051630caf861d60e41b8152fd5b5085156114b2565b506115fd6115f13661108b565b94909394929192612009565b60008051602061466283398151915292836001600160a01b036116236104658686612a7f565b160361060357833b156102b25760046000610e209560405192838092630d0e30db60e41b825234905af18015611694575b611681575b50610d5761166a6104658585612a7f565b61167c3491610d516104658888612a90565b614355565b8061058b61168e92611d08565b38611659565b61169c611d58565b611654565b50346102b25760e03660031901126102b25761030d6004356116c2816102a1565b602435906116cf826102a1565b60a435906116dc826102a1565b60c43592608435916064359160443591612663565b50346102b25761170361065a36610615565b805190600282106106035761171782612f69565b92835115611792575b602084015260009160001901915b828110611743576040518061031f868261040a565b8061175361092060019385612a5d565b61178b6117846117738585019361176d610920868a612a5d565b906123f2565b9061177e868b612a5d565b51612ed6565b9187612a5d565b520161172e565b61179a612a2c565b611720565b5060403660031901126102b2576004358015158091036102b2576024356117c5816102a1565b6117cd6143d7565b60018060a01b0316600052600260205260406000209060ff801983541691161790556000604051f35b50346102b25761180536610bcf565b909161181e610c64610c558c969c9b979b9a989a611de5565b991561189157600019995b803b156102b25789600061030d9c61185b82966040519889978896879563d505accf60e01b8752303360048901612836565b03925af18015611884575b611871575b50612719565b8061058b61187e92611d08565b3861186b565b61188c611d58565b611866565b8499611829565b50346102b2576101003660031901126102b25760246004356118b9816102a1565b61031f82356118c7816102a1565b602060c435936118d6856102a1565b6118e160e435612009565b6118f760a43560843560643560443587866121f1565b9690956119328861191161190b8887611e3a565b90611e6a565b80976119298b8360018060a01b03998a3391166142c7565b863391166142c7565b60008360405196879586946335313c2160e11b8652166004850152165af190811561199c575b60009161197e575b50604051938493846040919493926060820195825260208201520152565b611996915060203d8111610e4d57610e3e8183611d28565b38611960565b6119a4611d58565b611958565b5060203660031901126102b2576004356119c2816102a1565b6119ca6143d7565b6001600160a01b031680156119ef57600180546001600160a01b031916919091179055005b60405163d92e233d60e01b8152600490fd5b50611a26611a1e611a11366102b7565b9694959096939193612009565b349085612038565b929091611a3281611ddd565b916001600160a01b0391611a4d9085908590339086166142c7565b600080516020614662833981519152803b156102b25761031f93602092876000611acb94600460405180948193630d0e30db60e41b83525af18015611b5c575b611b49575b50611a9d8883614355565b6040516335313c2160e11b81526001600160a01b039091166004820152938492839160009183906024820190565b0393165af1908115611b3c575b600091611b1e575b50833411611b06575b604051938493846040919493926060820195825260208201520152565b611b19611b138534612532565b336142b5565b611ae9565b611b36915060203d8111610e4d57610e3e8183611d28565b38611ae0565b611b44611d58565b611ad8565b8061058b611b5692611d08565b38611a92565b611b64611d58565b611a8d565b50611b81611b763661108b565b949092939194612009565b60008051602061466283398151915293846001600160a01b03611ba76104658488612a7f565b16036106035773c0aee478e3658e2610c5f7a4a2e1777ce9e4f2ac90611bd7611bd13683886129d4565b84613066565b9260a09586611be586612a43565b5101513410611cac575b50505083611bfc83612a43565b510151853b156102b2578261057294611c5292600061031f99600460405180948193630d0e30db60e41b83525af18015611c9f575b611c8c575b50610a11611c4860806104ed85612a43565b886111bb85612a43565b9380611c5d84612a43565b5101513411611c6d575b50613514565b611b13611c8691611c7d85612a43565b51015134612532565b38611c67565b8061058b611c9992611d08565b38611c36565b611ca7611d58565b611c31565b6112f191929450611cd59350735c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f9436916129d4565b903484611ce184612a43565b51015111610bbd57388080611bef565b50634e487b7160e01b600052604160045260246000fd5b6001600160401b038111611d1b57604052565b611d23611cf1565b604052565b90601f801991011681019081106001600160401b03821117611d1b57604052565b908160209103126102b2575190565b506040513d6000823e3d90fd5b600080516020614662833981519152906001600160a01b0381168214611dbe57736015551cd911ff4685072e2793f56c841e3ab66160611b606082901b1015611db957905b81156119ef5761041b91611e6a565b611daa565b604051630bd969eb60e41b8152600490fd5b61041b9161190b91611e3a565b61190b61041b915b60008051602061466283398151915291906001600160a01b0381168314611dbe57736015551cd911ff4685072e2793f56c841e3ab66160611b606082901b1015611e345791905b82156119ef57565b90611e2c565b9091906001600160a01b0380821690841614611dbe578260601b8160601b10600014611e3457919082156119ef57565b6055916040519160601b825260601b601482015260288120743ff02bb91e38d9638984317de928b85ddf3a793cab605a1b825260158201527fe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c630360358201522090565b6055916040519160601b825260601b60148201526028812074ff5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f60581b825260158201527f96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f60358201522090565b605592906001600160a01b031673c0aee478e3658e2610c5f7a4a2e1777ce9e4f2ac03611fc0577fe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303907fffc0aee478e3658e2610c5f7a4a2e1777ce9e4f2ac0000000000000000000000905b6040519360601b845260601b601484015260288320908352601583015260358201522090565b7f96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f907fff5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f000000000000000000000090611f9a565b421161201157565b604051630407b05b60e31b8152600490fd5b908160209103126102b2575161041b816102a1565b60405163e6a4390560e01b81526001600160a01b038216600482015260008051602061466283398151915260248201529194929392916120bb919060209073c0aee478e3658e2610c5f7a4a2e1777ce9e4f2ac908281604481855afa9081156121e4575b6000916121c7575b506001600160a01b031615612141575b5050612347565b9091821580612139575b156120d3575050505090915b565b6120de8284886124c4565b9085821115612117575050906120f491846124c4565b928311612105578210612105579091565b604051638dc525d160e01b8152600490fd5b9350935050508110612127579091565b60405163ef71d09160e01b8152600490fd5b5081156120c5565b6040516364e329cb60e11b81526001600160a01b03841660048201526000805160206146628339815191526024820152908290829060449082906000905af180156121ba575b156120b457816121ab92903d106121b3575b6121a38183611d28565b810190612023565b5038806120b4565b503d612199565b6121c2611d58565b612187565b6121de9150833d85116121b3576121a38183611d28565b386120a4565b6121ec611d58565b61209c565b60405163e6a4390560e01b81526001600160a01b038281166004830152831660248201529295939493926120bb92919060209073c0aee478e3658e2610c5f7a4a2e1777ce9e4f2ac908281604481855afa9081156122f0575b6000916122d3575b506001600160a01b031615612269575b50506123f2565b6040516364e329cb60e11b81526001600160a01b03848116600483015285166024820152908290829060449082906000905af180156122c6575b1561226257816122be92903d106121b3576121a38183611d28565b503880612262565b6122ce611d58565b6122a3565b6122ea9150833d85116121b3576121a38183611d28565b38612252565b6122f8611d58565b61224a565b51906001600160701b03821682036102b257565b908160609103126102b257612325816122fd565b916040612334602084016122fd565b92015163ffffffff811681036102b25790565b600460609161236e61235882611de5565b90946001600160a01b0392909183919087611e6a565b1660405194858092630240bc6b60e21b82525afa9283156123e5575b60009081946123b3575b5081906001600160701b03809116941694169116146000146106445791565b8294506123d7915060603d81116123de575b6123cf8183611d28565b810190612311565b5093612394565b503d6123c5565b6123ed611d58565b61238a565b60049061236e61235860609483611e3a565b50634e487b7160e01b600052601160045260246000fd5b7f028f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f811160011661244c575b60640290565b612454612404565b612446565b600590806000190482118115151661246f570290565b612477612404565b0290565b600990806000190482118115151661246f570290565b806000190482118115151661246f570290565b81156124ae570490565b634e487b7160e01b600052601260045260246000fd5b801561250357811580156124fb575b6124e95761041b926124e491612491565b6124a4565b60405163bb55fd2760e01b8152600490fd5b5082156124d3565b604051631f2a200560e01b8152600490fd5b60028110612525575b6001190190565b61252d612404565b61251e565b81811061253d570390565b612545612404565b0390565b91908260409103126102b2576020825192015190565b61256f6000929795949396612009565b61257881611d65565b6001600160a01b03978882169591612592919033886142c7565b6040805163226bf2d160e21b81526001600160a01b03929092166004830152949092859184916024918391905af1968715612656575b6000928398612621575b50806125dd83611de5565b501691161460001461261c57945b8094861061260b57106125fb5750565b5163ef71d09160e01b8152600490fd5b8251638dc525d160e01b8152600490fd5b6125eb565b909750612645919250843d861161264f575b61263d8183611d28565b810190612549565b91909196386125d2565b503d612633565b61265e611d58565b6125c8565b90969493929591612675600093612009565b61267f8883611dd0565b9461269660018060a01b03928388169733896142c7565b6040805163226bf2d160e21b81526001600160a01b03929092166004830152959093869185916024918391905af197881561270c575b60009384996126e2575b506125dd829184611e3a565b829199506125dd945061270190873d891161264f5761263d8183611d28565b9490949991506126d6565b612714611d58565b6126cc565b6040516370a0823160e01b808252306004830152976020979096956127a6956001600160a01b038516959491908a856024818a5afa948515612829575b600095612808575b5061276b9495309361255f565b6040519889523060048a015290979096879489939092909190818180602481015b0381895afa918215610e5457600092610e27575050612532565b81036127f657836127b69261439d565b60008051602061466283398151915291823b156102b257604051632e1a7d4d60e01b8152600481018390526120d193600090829081838160248101610557565b60405163a4de03c760e01b8152600490fd5b61276b9550612823908c8d3d10610e4d57610e3e8183611d28565b9461275e565b612831611d58565b612756565b9360ff929897969360c0969260e087019a60018060a01b0380921688521660208701526040860152606085015216608083015260a08201520152565b929598919497999093969961288a610c558686611e3a565b169a156128fa576000199a5b803b156102b2578a60006106449d6128c882966040519889978896879563d505accf60e01b8752303360048901612836565b03925af180156128ed575b6128de575b50612663565b6128e790611d08565b386128d8565b6128f5611d58565b6128d3565b859a612896565b6040516370a0823160e01b80825230600483015297966020956127b6956001600160a01b03851695899561297a959194919391929091908a856024818c5afa9485156129a1575b600095612980575b5061295d9495309361255f565b6040519a8b523060048c0152998a9791508181806024810161278c565b9161439d565b61295d955061299b908c8d3d10610e4d57610e3e8183611d28565b94612950565b6129a9611d58565b612948565b6020906001600160401b0381116129c7575b60051b0190565b6129cf611cf1565b6129c0565b92916129df826129ae565b916129ed6040519384611d28565b829481845260208094019160051b81019283116102b257905b828210612a135750505050565b8380918335612a21816102a1565b815201910190612a06565b50634e487b7160e01b600052603260045260246000fd5b602090805115612a51570190565b612a59612a2c565b0190565b6020918151811015612a72575b60051b010190565b612a7a612a2c565b612a6a565b9015612a885790565b61041b612a2c565b60209160011015612a51570190565b9190811015612aaf5760051b0190565b6129cf612a2c565b3561041b816102a1565b90612acb826129ae565b604090612ada82519182611d28565b8381528093612aeb601f19916129ae565b019160005b838110612afd5750505050565b602090825160e081018181106001600160401b03821117612b53575b845260008152826000818301526000858301526000606083015260006080830152600060a0830152600060c0830152828601015201612af0565b612b5b611cf1565b612b19565b9190918251906002821061060357909260001984019190612b8083612ac1565b9460a09283612b8e88612a43565b5101526001190160005b848110612ba6575050505050565b80612bb661092060019386612a5d565b8583830191612c3d8b85612bcd610920878c612a5d565b93612bd88582611e3a565b9590916004612bf48c8060a01b03988986168a86161495611e6a565b91612c0b85612c03888a612a5d565b519015159052565b612c2d60409182612c1c898b612a5d565b516001600160a01b03909216910152565b606097889485612c1c898b612a5d565b612c4d836080612c1c898b612a5d565b51630240bc6b60e21b81529788928391165afa948515612d63575b6000948596612d3b575b505015612d2257612ce5602091612cdf612cda612cb1612cee975b8a612c98868a612a5d565b510151906001600160701b03809b169a8b911691612ed6565b9760c09889612cc0868a612a5d565b51015289612cce8589612a5d565b5101516103e8026124a4565b151590565b93612a5d565b51019015159052565b858410612cff575b50505001612b98565b612d1790612d0d858d612a5d565b510151928b612a5d565b510152388581612cf6565b612ce5602091612cdf612cda612cb1612cee9798612c8d565b8091929650612d57939550903d106123de576123cf8183611d28565b50929092933880612c72565b612d6b611d58565b612c68565b9190918251906002821061060357909260001984019190612d9083612ac1565b9460a09283612d9e88612a43565b5101526001190160005b848110612db6575050505050565b80612dc661092060019386612a5d565b8583830191612e048b85612ddd610920878c612a5d565b93612de88582611e3a565b9590916004612bf48c8060a01b03988986168a86161495611ecc565b612e14836080612c1c898b612a5d565b51630240bc6b60e21b81529788928391165afa948515612ec9575b6000948596612ea1575b505015612e8857612ce5602091612cdf612cda612cb1612e5e978a612c98868a612a5d565b858410612e6f575b50505001612da8565b612e7d90612d0d858d612a5d565b510152388581612e66565b612ce5602091612cdf612cda612cb1612e5e9798612c8d565b8091929650612ebd939550903d106123de576123cf8183611d28565b50929092933880612e39565b612ed1611d58565b612e2f565b9190918015612503576103e88084108015612f28575b6124e9576103e58381840293020292612f0583856124a4565b03612f165761041b930201906124a4565b604051631a93c68960e11b8152600490fd5b50808310612eec565b60405190604082018281106001600160401b03821117612f5c575b6040526001825260203681840137565b612f64611cf1565b612f4c565b90612f73826129ae565b612f806040519182611d28565b8281528092612f91601f19916129ae565b0190602036910137565b9190918251600191612fae838301612f69565b9460a0612fba82612a43565b510151612fc687612a43565b52600019830160005b848110612fde57505050505050565b8060c0612fec889386612a5d565b510151613003612ffc8387612a5d565b5151151590565b6000901561305c57506130428160005b868510156130555761302c60806104ed8888018b612a5d565b915b61303d60806104ed888c612a5d565b613ff7565b61304e8383018b612a5d565b5201612fcf565b889161302e565b6130429082613013565b815192916002841061060357613096600019928386019061308682612ac1565b9660c09384916001190189612a5d565b510152805b6130a55750505050565b8086858093016131b06131a4612cda61313088856130e7888d6130d26109208d612cdf6109208886612a5d565b9060046130df8383611e3a565b819691611e6a565b91613135836080612c1c8a60018060a01b03809b168b8a16149961310f8b612c038484612a5d565b61312060409788612c1c8585612a5d565b60609e8f9a8b612c1c8585612a5d565b612a5d565b51630240bc6b60e21b81529485928391165afa91821561321f575b60009586936131fa575b5050156131ec579061318d612cce925b84613175848d612a5d565b5101516001600160701b0380971696879216906132d3565b9860a0998a61319c8484612a5d565b510152612a5d565b6020612ce5848d612a5d565b600183116131c2575b5050018061309b565b6131cc9089612a5d565b510151836131e26131dc84612515565b8a612a5d565b51015238806131b9565b929061318d612cce9261316a565b80919296506132159350903d106123de576123cf8183611d28565b509093388061315a565b613227611d58565b613150565b81519291600284106106035761324c600019928386019061308682612ac1565b510152805b61325b5750505050565b80868580930161329d6131a4612cda61313088856130e7888d6132886109208d612cdf6109208886612a5d565b9060046132958383611e3a565b819691611ecc565b600183116132af575b50500180613251565b6132b99089612a5d565b510151836132c96131dc84612515565b51015238806132a6565b908115612503576103e8908181108015613326575b801561331c575b6124e95781838202029161330384846124a4565b910203612f16576103e5612a59926001940302906124a4565b50828411156132ef565b508184106132e8565b600290600219811161333f570190565b612a59612404565b8119811161333f570190565b80516000198101929160005b84811061336d575050505050565b8061348161345161338361092060019587612a5d565b61339261092086860188612a5d565b61339c8183611e3a565b9390926133b6888060a01b03958686168786161495611e6a565b80956040928351630240bc6b60e21b815260609260049184818481858a165afa9081156134e7575b60009586926134c1575b505089156134bb5793955b516370a0823160e01b81526001600160a01b0390951691850191825260209492859284928391829086010392165afa9283156134ae575b60009361348f575b50506134496001600160701b038092168093612532565b921691612ed6565b9061345b89612515565b8610156134875761347b90610d516109206134758961332f565b8b612a5d565b926134f4565b0161335f565b5088926134f4565b6134a6929350803d10610e4d57610e3e8183611d28565b903880613432565b6134b6611d58565b61342a565b956133f3565b6134dc93965080919250903d106123de576123cf8183611d28565b5093909338806133e8565b6134ef611d58565b6133de565b906120d1939260009060001461350d5750600091613ff7565b9091613ff7565b81519060005b8281106135275750505050565b602061353f816135378488612a5d565b510151151590565b61354d575b5060010161351a565b60409061355e826104ed8589612a5d565b9161356e60606104ed868a612a5d565b6001600160a01b03811660009081526002602052604090205460ff1682516370a0823160e01b808252306004808401919091526001600160a01b0385811698929791959394908d9083876024818e5afa96871561391f575b600097613900575b508851998a52838a8c81806135fd8d82019073f5bce5077908a1b7370b9ae04adc565ebd643966602083019252565b03915afa998a156138f3575b60009a6138d4575b508c87158015906138cd575b80156138c4575b613639575b5050505050505050505050613544565b958185878b8499989796958e9b73c0aee478e3658e2610c5f7a4a2e1777ce9e4f2ac91829116146000146138ba57506136b1735c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f9b5b5163e6a4390560e01b81526001600160a01b039384169281019283529590921660208201528491829160400190565b0381848c165afa9182156138ad575b60009261388e575b5081166136d8575b50908c613629565b613704928289928f612ffc8f96916136f860806104ed836136fe96612a5d565b94612a5d565b9161392c565b98909589613714575b8e906136d0565b861161378157505091839161372b9330928c614030565b10613773575051908152600192919033907f8ed9d7f4b992b4476c7f5cee8895a6c9fe5a1601e771e630d67d5ed17d4656d590602090a35b903880808080808080808061370d565b90516342301c2360e01b8152fd5b60019a9950856137a461379c829996989b9a9495979b612459565b612710900490565b89119182613883575b5050156137c6575050506137c19488613c1c565b613763565b6137d261379c8761247b565b87116137e6575b5050505050505050613763565b516335ea6a7560e01b81526001600160a01b0385169281019283528592829082908190602001038173057835ad21a177dbdd3090bb1cae03eacf78fc6d5afa918215613876575b600092613859575b505011613845575b8080806137d9565b61384f9488613e22565b388080808061383d565b61386f9250803d10610e4d57610e3e8183611d28565b3880613835565b61387e611d58565b61382d565b1015905086386137ad565b6138a6919250853d87116121b3576121a38183611d28565b90386136c8565b6138b5611d58565b6136c0565b6136b1909b613682565b508a1515613624565b508361361d565b6138ec919a50843d8611610e4d57610e3e8183611d28565b9838613611565b6138fb611d58565b613609565b613918919750843d8611610e4d57610e3e8183611d28565b95386135ce565b613927611d58565b6135c6565b959392919490956000966000809760405190630240bc6b60e21b9283835260608095818560048160018060a01b03809c165afa958615613b00575b83958497613adb575b50600490604051998a9384928352165afa958615613ace575b81958297613aa6575b505050600014613a9257906139a8939291613b0d565b91949091925b82151580613a89575b6139c4575b505050505050565b6139f26139ec6139d488806143eb565b906139df878b6143eb565b9082019392019083100190565b90614400565b868111613a00575b506139bc565b869950849690613a1693959294969950036124a4565b958683109081613a80575b5080613a77575b613a52575b505083809583613a45959602019202900384026124a4565b90388080808080806139fa565b613a45949550808211600014613a6e575080955b959493613a2d565b90508095613a66565b50858110613a28565b90501538613a21565b508315156139b7565b613a9c9391613b0d565b91949091926139ae565b8091929750613ac2939650903d106123de576123cf8183611d28565b50939093943880613992565b613ad6611d58565b613989565b613af791975060049650833d85116123de576123cf8183611d28565b50969095613970565b613b08611d58565b613967565b939092936000936000936001600160701b0380809816931696620f4240918289860202988993613b3d87866124a4565b910214613b4c575b5050505050565b81169216613b65620f2ad98083860202920293826124a4565b8314613b72575b80613b45565b81811115613b6c57039450620f36889190910201915038808581613b6c565b91908251928382526000905b848210613bca575092806020939411613bbd575b601f01601f1916010190565b6000838284010152613bb1565b90602090818082850101519082860101520190613b9d565b6001600160a01b03918216815291811660208301529091166040820152606081019190915260a06080820181905261041b92910190613b91565b90613c2b929195939495614262565b73f5bce5077908a1b7370b9ae04adc565ebd643966803b156102b25760405163f1676d3760e01b8152916000918391829084908290613c71908b8b308060048701613be2565b03925af19081613d12575b50613cbf57506040519182526001600160a01b0316907f137ac09e2fb89da2cbe32562b3e674e46bba7c473b3f71b5c1bd62f7ef3232ed9080602081015b0390a2565b613ccf61379c613cd59394612459565b90612532565b6040519081526001600160a01b03919091169033907f8ed9d7f4b992b4476c7f5cee8895a6c9fe5a1601e771e630d67d5ed17d4656d590602090a3565b8061058b613d1f92611d08565b38613c7c565b9291926001600160401b038211613d6c575b60405191613d4f601f8201601f191660200184611d28565b8294818452818301116102b2578281602093846000960137010152565b613d74611cf1565b613d37565b969593929060e0880160018060a01b038092168952602060e0818b01528451809252806101008b019501926000905b838210613e0957505050505092613df7613de5613e0494613dd78560c0988c60408160009d9a039101526103d6565b908a820360608c01526103d6565b6001600160a01b039093166080890152565b86820360a0880152613b91565b930152565b8451811687529582019593820193600190910190613da8565b9194929394613e7d613e32612f31565b91613e4f87613e4085612a43565b6001600160a01b039091169052565b613e57612f31565b9388613e6286612a43565b52613e6b612f31565b956000613e7788612a43565b52614262565b92737d2768de32b0b80b7a3454c06bdac94a69ddc7a990813b156102b25760008094613ec26040519788968795869463ab9c4b5d60e01b865230923060048801613d79565b03925af19081613f1f575b50613f0f57506040519182526001600160a01b0316907f137ac09e2fb89da2cbe32562b3e674e46bba7c473b3f71b5c1bd62f7ef3232ed908060208101613cba565b613ccf61379c613cd5939461247b565b8061058b613f2c92611d08565b38613ecd565b9794919690959295737d2768de32b0b80b7a3454c06bdac94a69ddc7a99889330361089757613faa96613fa3958a61086d61085a613f9c97613f8d613f7b8f99613f9699612a7f565b359e8f95613f88876102a1565b612a7f565b35953691613d25565b97612a7f565b3592612a7f565b3590613347565b809211156105f157602092600060449281946040519363095ea7b360e01b85526004850152602484015260018060a01b03165af13d15601f3d11600160005114161716156102b257600190565b90600060a492819582956040519463022c0d9f60e01b8652600486015260248501526044840152608060648401528160848401525af150565b91809695919294939461404e6140468388611e3a565b908093611f2e565b9060018060a01b038681808a16931683149560405197630240bc6b60e21b94858a52606092838b600481898c165afa9a8b156141d2575b600090819c6141af575b508a156141a45790889392915b6001600160701b0380809e169116906140b59183612ed6565b986140bf9261439d565b6120d19b61413998614132956140f8946140e391908d1561419b5760008c91613ff7565b8a1561419457815b8b1561418c575091611f2e565b9788946040519081528281600481888a165afa90811561417f575b6000938492614159575b50508815614152578190925b16911685612ed6565b991661439d565b6000901561414b575084600091613ff7565b8591613ff7565b8190614129565b61417493945080919250903d106123de576123cf8183611d28565b50919091388061411d565b614187611d58565b614113565b905091611f2e565b80916140eb565b8b600091613ff7565b9a908893929161409c565b90506141c9919b50843d86116123de576123cf8183611d28565b509a903861408f565b6141da611d58565b614085565b60209081818403126102b2578051906001600160401b0382116102b257019180601f840112156102b2578251614214816129ae565b936142226040519586611d28565b818552838086019260051b8201019283116102b2578301905b828210614249575050505090565b8380918351614257816102a1565b81520191019061423b565b919060405192606084018481106001600160401b038211176142a8575b604052603c84526020840190604036833760601b905260601b603483015260601b604882015290565b6142b0611cf1565b61427f565b60008080809481945af1156109895750565b9060006064926020958295604051946323b872dd60e01b86526004860152602485015260448401525af13d15601f3d11600160005114161716156102b257565b6044602092600080936040519263a9059cbb60e01b845273f5bce5077908a1b7370b9ae04adc565ebd643966600485015260248401525af13d15601f3d11600160005114161716156102b257565b60446000916020936040519163a9059cbb60e01b835260048301526024820152826000805160206146628339815191525af13d15601f3d11600160005114161716156102b257565b600091826044926020956040519363a9059cbb60e01b8552600485015260248401525af13d15601f3d11600160005114161716156102b257565b6000546001600160a01b0316330361107a57565b91906000198184099202918280821091030390565b90801561453757600160801b811060071b90811b600160c01b811060061b90811b91600160e01b831060051b92831b600160f01b811060041b90811b600160f81b811060031b90811b91600160fc1b831060021b92831b95600160fe1b871060011b958695010101010101918383610100031c911b1791811b916144916144868261453d565b91613ccf8380612491565b60809380851c82861b178360011b92861c806000039084820601848306019184808085049304910401019283910693861b019482811c9380821c8086119586156144f3575b5050505050506144e8575b60011c1c90565b9060001901906144e1565b149450919290919084614510575b505050503880808080806144d6565b6fffffffffffffffffffffffffffffffff919293945080029316911b171038808080614501565b5061041b905b801561465b5761464a61464361463961462f61462561461b614611614607600160801b808a14908a1117898160071b1d6801000000000000000080821490821117908160061b1d64010000000080821490821117908160051b1d6201000080821490821117908160041b1d9161010080841490841117928360031b1d936001601086146010871117958660021b1d9660061b1b9060051b1b9060041b1b9060031b1b9060021b1b9060011b1b90600880821491111760011b1b614600818b6124a4565b0160011c90565b614600818a6124a4565b61460081896124a4565b61460081886124a4565b61460081876124a4565b61460081866124a4565b61460081856124a4565b80926124a4565b90818110614656575090565b905090565b5060009056fe000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2a164736f6c634300080f000a",
    "sourceMap": "562:54367:13:-:0;;;;;;;;;966:18:16;562:54367:13;;-1:-1:-1;;;;;;562:54367:13;975:9:16;562:54367:13;;;;;966:18:16;;975:9;966:18;999:40;966:18;975:9;999:40;-1:-1:-1;;;2249:52:13;;;;;;;;1641:42;2249:52;;;;;;;;;;;-1:-1:-1;1641:42:13;;;2360:9;;2371:10;;;;;;562:54367;;;;;;;;;2383:11;1641:42;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1641:42:13;;;2453:13;1641:42;;;;;;;-1:-1:-1;;1641:42:13;562:54367;1641:42;;;;;;562:54367;2360:9;;1641:42;-1:-1:-1;;;1641:42:13;;;;;;;;2249:52;;;;;;;;;;;;;:::i;:::-;;;1641:42;;;;;;;;;;;-1:-1:-1;;;;;1641:42:13;;;;;;;;;;;;;;;;;;;;;;;;;562:54367;;;1641:42;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;2249:52;;;;;;;;1641:42;;;-1:-1:-1;;;;;1641:42:13;;;;;;;;;;;;;;;;;;;;;562:54367;;;1641:42;-1:-1:-1;;;1641:42:13;;;;;;;;;562:54367;;;1641:42;562:54367;;;2249:52;562:54367;;;1641:42;;;;;;;;562:54367;;;;1641:42;;;;;-1:-1:-1;;1641:42:13;;;;-1:-1:-1;;;;;1641:42:13;;;;;;;;;;:::o;:::-;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361015610018575b361561001657005b005b60003560e01c806302751cec14610298578063054d50d41461028f57806318cbafe5146102865780631f00ca741461027d5780632195995c1461027457806323452b9c1461026b57806323e30c8b1461026257806331e634591461025957806338ed1739146102505780634a25d94a146102475780635b0d59841461023e5780635c11d79514610235578063791ac9471461022c57806379ba5097146102235780637ff36ab51461021a57806385f8c259146102115780638803dbee146102085780638da5cb5b146101ff5780638f32d59b146101f6578063920f5c84146101ed578063ad615dec146101e4578063af2979eb146101db578063b4b0ce68146101d2578063b6f9de95146101c9578063baa2abde146101c0578063d06ca61f146101b7578063dc1efb41146101ae578063ded9382a146101a5578063e8e337001461019c578063f2fde38b14610193578063f305d7191461018a5763fb3bdb410361000e57610185611b69565b61000e565b50610185611a01565b506101856119a9565b50610185611898565b506101856117f6565b5061018561179f565b506101856116f1565b506101856116a1565b506101856115e4565b50610185611451565b50610185611431565b50610185611417565b50610185611368565b5061018561133f565b50610185611315565b5061018561124c565b50610185611232565b506101856110cf565b50610185611006565b50610185610eab565b50610185610cff565b50610185610c2d565b50610185610a6b565b5061018561098c565b506101856108a9565b506101856107d8565b50610185610784565b50610185610707565b50610185610648565b5061018561041e565b5061018561033d565b506101856102ef565b6001600160a01b038116036102b257565b600080fd5b60c09060031901126102b2576004356102cf816102a1565b906024359060443590606435906084356102e8816102a1565b9060a43590565b50346102b25761030d610301366102b7565b94939093929192612719565b60408051928352602083019190915290f35b0390f35b60609060031901126102b257600435906024359060443590565b50346102b257602061035761035136610323565b91612ed6565b604051908152f35b9181601f840112156102b2578235916001600160401b0383116102b2576020808501948460051b0101116102b257565b60a06003198201126102b2576004359160243591604435906001600160401b0382116102b2576103c19160040161035f565b90916064356103cf816102a1565b9060843590565b90815180825260208080930193019160005b8281106103f6575050505090565b8351855293810193928101926001016103e8565b90602061041b9281815201906103d6565b90565b50346102b25761043a6104303661038f565b9590939495612009565b60008051602061466283398151915294856001600160a01b0361046a61046560001986018688612a9f565b612ab7565b16036106035773c0aee478e3658e2610c5f7a4a2e1777ce9e4f2ac9161049a6104943683876129d4565b83612b60565b936104a785516000190190565b968060c06104b58a89612a5d565b510151106105a4575b506104d361046561050494936104df93612a7f565b6001600160a01b031690565b6104fc60806104ed87612a43565b5101516001600160a01b031690565b9033906142c7565b60c061051a6105138430612f9b565b9584612a5d565b51015194803b156102b25761031f956105729461056d9260006040518092632e1a7d4d60e01b825281838161055789600483019190602083019252565b03925af18015610597575b61057e575b506142b5565b613514565b6040519182918261040a565b8061058b61059192611d08565b80610779565b38610567565b61059f611d58565b610562565b9450925090735c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f926105d36105cd3685846129d4565b83612d70565b9460c06105e08988612a5d565b510151106105f157389291926104be565b6040516342301c2360e01b8152600490fd5b6040516320db826760e01b8152600490fd5b9060406003198301126102b25760043591602435906001600160401b0382116102b2576106449160040161035f565b9091565b50346102b25761066461065a36610615565b92919236916129d4565b90815191600283106106035761067983612f69565b916000198094019061068b8285612a5d565b52805b6106a0576040518061031f858261040a565b83908181016106ee6106e76106d66001600160a01b03806106c1868a612a5d565b5116906106ce878a612a5d565b5116906123f2565b906106e1868a612a5d565b516132d3565b9186612a5d565b52018061068e565b610104359060ff821682036102b257565b50346102b2576101603660031901126102b257600435610726816102a1565b60243590610733826102a1565b60a43590610740826102a1565b60e4359283151584036102b25761030d936107596106f6565b916101443594610124359460c43592608435916064359160443591612872565b60009103126102b257565b5060003660031901126102b2576107996143d7565b600180546001600160a01b0319169055005b9181601f840112156102b2578235916001600160401b0383116102b257602083818601950101116102b257565b50346102b25760a03660031901126102b2576004356107f6816102a1565b60243590610803826102a1565b604435906084356001600160401b0381116102b2576108269036906004016107ab565b9073f5bce5077908a1b7370b9ae04adc565ebd64396633036108975761087d928561086d61085a8794610873963691613d25565b601481015191603c602883015192015190565b91614030565b9160643590613347565b809111156105f157610016916001600160a01b0316614307565b6040516375c366a960e01b8152600490fd5b50600080600319360112610989576108bf6143d7565b6040516334651b6f60e21b81528181600481737d2768de32b0b80b7a3454c06bdac94a69ddc7a95afa90811561097c575b829161095a575b50805190825b82811061090a5783604051f35b8061095461094761092d61092060019587612a5d565b516001600160a01b031690565b6001600160a01b0316600090815260026020526040902090565b805460ff19166001179055565b016108fd565b61097691503d8084833e61096e8183611d28565b8101906141df565b386108f7565b610984611d58565b6108f0565b80fd5b50346102b2576109a961099e3661038f565b959095949294612009565b73c0aee478e3658e2610c5f7a4a2e1777ce9e4f2ac936109d36109cd3684846129d4565b84612b60565b936000198551018160c06109e78389612a5d565b51015110610a1c575b61031f8761057288610a16818d610a118c6104df6104d36104658f8f612a7f565b612f9b565b92613514565b939294509450735c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f9460c0610a58610a51610a4b3689876129d4565b86612d70565b9586612a5d565b510151106105f1573880949293946109f0565b50346102b257610a89610a7d3661038f565b95909392919495612009565b60008051602061466283398151915293846001600160a01b03610ab461046560001985018587612a9f565b16036106035773c0aee478e3658e2610c5f7a4a2e1777ce9e4f2ac91610ae4610ade3684846129d4565b88613066565b938060a0610af187612a43565b51015111610b76575b506104d3610465610b3293610b0e93612a7f565b610b1c60806104ed86612a43565b60a0610b2786612a43565b5101519133906142c7565b610b3c8230612f9b565b93803b156102b25761031f956105729461056d9260006040518092632e1a7d4d60e01b825281838161055789600483019190602083019252565b9350735c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f9250610ba3610b9d3684846129d4565b8861322c565b9360a0610baf86612a43565b51015111610bbd5738610afa565b60405163e1b0da4f60e01b8152600490fd5b6101409060031901126102b257600435610be8816102a1565b90602435906044359060643590608435610c01816102a1565b9060a4359060c43580151581036102b2579060e43560ff811681036102b2579061010435906101243590565b50346102b257610c3c36610bcf565b610c71610c64610c558c959b969c9a979a999899611de5565b6001600160a01b039291611e6a565b166001600160a01b031690565b9915610cf857600019985b8a3b156102b25761031f9a896000610cc89c610cb282966040519889978896879563d505accf60e01b8752303360048901612836565b03925af18015610ceb575b610cd8575b50612901565b6040519081529081906020820190565b8061058b610ce592611d08565b38610cc2565b610cf3611d58565b610cbd565b8398610c7c565b50346102b257610d57610e20610d24610d173661038f565b9792949195909397612009565b610d346104d36104658787612a7f565b6104fc610d446104658888612a7f565b610d516104658989612a90565b90611dd0565b6000198301610d6e6104d380610465848888612a9f565b6040516370a0823160e01b8082526001600160a01b038516600483015290956020959193929091908690889060249082905afa968715610e9e575b600097610e61575b506104d36104d36104658795899795610de095610ddb610e059b610dd63685856129d4565b613353565b612a9f565b6040519182526001600160a01b03909216600482015292839190829081906024820190565b03915afa918215610e54575b600092610e27575b5050612532565b106105f157005b610e469250803d10610e4d575b610e3e8183611d28565b810190611d49565b3880610e19565b503d610e34565b610e5c611d58565b610e11565b610de09197506104d3610465610e059795899795610e8e6104d3958a3d8c11610e4d57610e3e8183611d28565b9b95509597509597505050610db1565b610ea6611d58565b610da9565b50346102b257610ec8610ebd3661038f565b959093949295612009565b60008051602061466283398151915294856001600160a01b03610ef361046560001986018686612a9f565b160361060357610f2d610f9993610f106104d36104658686612a7f565b6104fc610f206104658787612a7f565b610d516104658888612a90565b6040516370a0823160e01b808252306004830152909260209283856024818c5afa948515610ff9575b600095610fd0575b5090610dd6610f7092309236916129d4565b60405190815230600482015281816024818a5afa918215610e5457600092610e27575050612532565b9182106105f157823b156102b257604051632e1a7d4d60e01b81526004810183905261001693600090829081838160248101610557565b610f7092919550610ff0610dd691863d8811610e4d57610e3e8183611d28565b95919250610f5e565b611001611d58565b610f56565b50346102b257600080600319360112610989576001546001600160a01b0390818116330361107a576bffffffffffffffffffffffff60a01b80911660015582549060405192339083167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08686a31633178255f35b6040516282b42960e81b8152600490fd5b9060806003198301126102b25760043591602435906001600160401b0382116102b2576110ba9160040161035f565b90916044356110c8816102a1565b9060643590565b506110e86110dc3661108b565b94909493919293612009565b60008051602061466283398151915291826001600160a01b0361110e6104658488612a7f565b16036106035773c0aee478e3658e2610c5f7a4a2e1777ce9e4f2ac9361113e6111383684846129d4565b34612b60565b9261114b84516000190190565b918160c06111598588612a5d565b510151106111e4575b50505050813b156102b257610a168161031f95600460006105729660405192838092630d0e30db60e41b825234905af180156111d7575b6111c4575b50610a116111b060806104ed85612a43565b60a06111bb85612a43565b51015190614355565b8061058b6111d192611d08565b3861119e565b6111df611d58565b611199565b6112219193965060c092945061121461121a91735c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f9836916129d4565b34612d70565b9384612a5d565b510151106105f15738808080611162565b50346102b257602061035761124636610323565b916132d3565b50346102b25761126761125e3661038f565b95909295612009565b73c0aee478e3658e2610c5f7a4a2e1777ce9e4f2ac9361129161128b3684896129d4565b82613066565b938060a061129e87612a43565b510151116112c8575b5050826105729392610a11610b0e6104d3610465610a169661031f9b612a7f565b92935093506112f7735c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f946112f13684896129d4565b9061322c565b9160a061130384612a43565b51015111610bbd5738809392936112a7565b50346102b25760003660031901126102b2576000546040516001600160a01b039091168152602090f35b50346102b25760003660031901126102b257602060018060a01b03600054163314604051908152f35b50346102b25760a03660031901126102b2576001600160401b036004358181116102b25761139a90369060040161035f565b6024929192358281116102b2576113b590369060040161035f565b6044949194358481116102b2576113d090369060040161035f565b90606435926113de846102a1565b6084359687116102b25761031f976113fd6114059836906004016107ab565b979096613f32565b60405190151581529081906020820190565b50346102b257602061035761142b36610323565b916124c4565b50346102b2576020610357611445366102b7565b94939093929192612901565b5060603660031901126102b25760048035906001600160401b036024358181116102b257611482903690840161035f565b9290916044359081116102b25761149c903690830161035f565b9190926114a76143d7565b6064861180156115dc575b6115cc5782156115bc5784156115ac5760005b8581106114ce57005b6114df6104d3610465838986612a9f565b6040516370a0823160e01b81523085820190815261153c9161152d918b91602091829082908190830103816001600160a01b038a165afa91821561159f575b600092611582575b5050612491565b6115368761241b565b906124a4565b908161154d575b50506001016114c5565b60005b868881831061156157505050611543565b84611576610465856001969561157c95612a9f565b8561439d565b01611550565b6115989250803d10610e4d57610e3e8183611d28565b3880611526565b6115a7611d58565b61151e565b5060405163df95788360e01b8152fd5b5060405163cfebf47b60e01b8152fd5b50604051630caf861d60e41b8152fd5b5085156114b2565b506115fd6115f13661108b565b94909394929192612009565b60008051602061466283398151915292836001600160a01b036116236104658686612a7f565b160361060357833b156102b25760046000610e209560405192838092630d0e30db60e41b825234905af18015611694575b611681575b50610d5761166a6104658585612a7f565b61167c3491610d516104658888612a90565b614355565b8061058b61168e92611d08565b38611659565b61169c611d58565b611654565b50346102b25760e03660031901126102b25761030d6004356116c2816102a1565b602435906116cf826102a1565b60a435906116dc826102a1565b60c43592608435916064359160443591612663565b50346102b25761170361065a36610615565b805190600282106106035761171782612f69565b92835115611792575b602084015260009160001901915b828110611743576040518061031f868261040a565b8061175361092060019385612a5d565b61178b6117846117738585019361176d610920868a612a5d565b906123f2565b9061177e868b612a5d565b51612ed6565b9187612a5d565b520161172e565b61179a612a2c565b611720565b5060403660031901126102b2576004358015158091036102b2576024356117c5816102a1565b6117cd6143d7565b60018060a01b0316600052600260205260406000209060ff801983541691161790556000604051f35b50346102b25761180536610bcf565b909161181e610c64610c558c969c9b979b9a989a611de5565b991561189157600019995b803b156102b25789600061030d9c61185b82966040519889978896879563d505accf60e01b8752303360048901612836565b03925af18015611884575b611871575b50612719565b8061058b61187e92611d08565b3861186b565b61188c611d58565b611866565b8499611829565b50346102b2576101003660031901126102b25760246004356118b9816102a1565b61031f82356118c7816102a1565b602060c435936118d6856102a1565b6118e160e435612009565b6118f760a43560843560643560443587866121f1565b9690956119328861191161190b8887611e3a565b90611e6a565b80976119298b8360018060a01b03998a3391166142c7565b863391166142c7565b60008360405196879586946335313c2160e11b8652166004850152165af190811561199c575b60009161197e575b50604051938493846040919493926060820195825260208201520152565b611996915060203d8111610e4d57610e3e8183611d28565b38611960565b6119a4611d58565b611958565b5060203660031901126102b2576004356119c2816102a1565b6119ca6143d7565b6001600160a01b031680156119ef57600180546001600160a01b031916919091179055005b60405163d92e233d60e01b8152600490fd5b50611a26611a1e611a11366102b7565b9694959096939193612009565b349085612038565b929091611a3281611ddd565b916001600160a01b0391611a4d9085908590339086166142c7565b600080516020614662833981519152803b156102b25761031f93602092876000611acb94600460405180948193630d0e30db60e41b83525af18015611b5c575b611b49575b50611a9d8883614355565b6040516335313c2160e11b81526001600160a01b039091166004820152938492839160009183906024820190565b0393165af1908115611b3c575b600091611b1e575b50833411611b06575b604051938493846040919493926060820195825260208201520152565b611b19611b138534612532565b336142b5565b611ae9565b611b36915060203d8111610e4d57610e3e8183611d28565b38611ae0565b611b44611d58565b611ad8565b8061058b611b5692611d08565b38611a92565b611b64611d58565b611a8d565b50611b81611b763661108b565b949092939194612009565b60008051602061466283398151915293846001600160a01b03611ba76104658488612a7f565b16036106035773c0aee478e3658e2610c5f7a4a2e1777ce9e4f2ac90611bd7611bd13683886129d4565b84613066565b9260a09586611be586612a43565b5101513410611cac575b50505083611bfc83612a43565b510151853b156102b2578261057294611c5292600061031f99600460405180948193630d0e30db60e41b83525af18015611c9f575b611c8c575b50610a11611c4860806104ed85612a43565b886111bb85612a43565b9380611c5d84612a43565b5101513411611c6d575b50613514565b611b13611c8691611c7d85612a43565b51015134612532565b38611c67565b8061058b611c9992611d08565b38611c36565b611ca7611d58565b611c31565b6112f191929450611cd59350735c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f9436916129d4565b903484611ce184612a43565b51015111610bbd57388080611bef565b50634e487b7160e01b600052604160045260246000fd5b6001600160401b038111611d1b57604052565b611d23611cf1565b604052565b90601f801991011681019081106001600160401b03821117611d1b57604052565b908160209103126102b2575190565b506040513d6000823e3d90fd5b600080516020614662833981519152906001600160a01b0381168214611dbe57736015551cd911ff4685072e2793f56c841e3ab66160611b606082901b1015611db957905b81156119ef5761041b91611e6a565b611daa565b604051630bd969eb60e41b8152600490fd5b61041b9161190b91611e3a565b61190b61041b915b60008051602061466283398151915291906001600160a01b0381168314611dbe57736015551cd911ff4685072e2793f56c841e3ab66160611b606082901b1015611e345791905b82156119ef57565b90611e2c565b9091906001600160a01b0380821690841614611dbe578260601b8160601b10600014611e3457919082156119ef57565b6055916040519160601b825260601b601482015260288120743ff02bb91e38d9638984317de928b85ddf3a793cab605a1b825260158201527fe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c630360358201522090565b6055916040519160601b825260601b60148201526028812074ff5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f60581b825260158201527f96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f60358201522090565b605592906001600160a01b031673c0aee478e3658e2610c5f7a4a2e1777ce9e4f2ac03611fc0577fe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303907fffc0aee478e3658e2610c5f7a4a2e1777ce9e4f2ac0000000000000000000000905b6040519360601b845260601b601484015260288320908352601583015260358201522090565b7f96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f907fff5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f000000000000000000000090611f9a565b421161201157565b604051630407b05b60e31b8152600490fd5b908160209103126102b2575161041b816102a1565b60405163e6a4390560e01b81526001600160a01b038216600482015260008051602061466283398151915260248201529194929392916120bb919060209073c0aee478e3658e2610c5f7a4a2e1777ce9e4f2ac908281604481855afa9081156121e4575b6000916121c7575b506001600160a01b031615612141575b5050612347565b9091821580612139575b156120d3575050505090915b565b6120de8284886124c4565b9085821115612117575050906120f491846124c4565b928311612105578210612105579091565b604051638dc525d160e01b8152600490fd5b9350935050508110612127579091565b60405163ef71d09160e01b8152600490fd5b5081156120c5565b6040516364e329cb60e11b81526001600160a01b03841660048201526000805160206146628339815191526024820152908290829060449082906000905af180156121ba575b156120b457816121ab92903d106121b3575b6121a38183611d28565b810190612023565b5038806120b4565b503d612199565b6121c2611d58565b612187565b6121de9150833d85116121b3576121a38183611d28565b386120a4565b6121ec611d58565b61209c565b60405163e6a4390560e01b81526001600160a01b038281166004830152831660248201529295939493926120bb92919060209073c0aee478e3658e2610c5f7a4a2e1777ce9e4f2ac908281604481855afa9081156122f0575b6000916122d3575b506001600160a01b031615612269575b50506123f2565b6040516364e329cb60e11b81526001600160a01b03848116600483015285166024820152908290829060449082906000905af180156122c6575b1561226257816122be92903d106121b3576121a38183611d28565b503880612262565b6122ce611d58565b6122a3565b6122ea9150833d85116121b3576121a38183611d28565b38612252565b6122f8611d58565b61224a565b51906001600160701b03821682036102b257565b908160609103126102b257612325816122fd565b916040612334602084016122fd565b92015163ffffffff811681036102b25790565b600460609161236e61235882611de5565b90946001600160a01b0392909183919087611e6a565b1660405194858092630240bc6b60e21b82525afa9283156123e5575b60009081946123b3575b5081906001600160701b03809116941694169116146000146106445791565b8294506123d7915060603d81116123de575b6123cf8183611d28565b810190612311565b5093612394565b503d6123c5565b6123ed611d58565b61238a565b60049061236e61235860609483611e3a565b50634e487b7160e01b600052601160045260246000fd5b7f028f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f811160011661244c575b60640290565b612454612404565b612446565b600590806000190482118115151661246f570290565b612477612404565b0290565b600990806000190482118115151661246f570290565b806000190482118115151661246f570290565b81156124ae570490565b634e487b7160e01b600052601260045260246000fd5b801561250357811580156124fb575b6124e95761041b926124e491612491565b6124a4565b60405163bb55fd2760e01b8152600490fd5b5082156124d3565b604051631f2a200560e01b8152600490fd5b60028110612525575b6001190190565b61252d612404565b61251e565b81811061253d570390565b612545612404565b0390565b91908260409103126102b2576020825192015190565b61256f6000929795949396612009565b61257881611d65565b6001600160a01b03978882169591612592919033886142c7565b6040805163226bf2d160e21b81526001600160a01b03929092166004830152949092859184916024918391905af1968715612656575b6000928398612621575b50806125dd83611de5565b501691161460001461261c57945b8094861061260b57106125fb5750565b5163ef71d09160e01b8152600490fd5b8251638dc525d160e01b8152600490fd5b6125eb565b909750612645919250843d861161264f575b61263d8183611d28565b810190612549565b91909196386125d2565b503d612633565b61265e611d58565b6125c8565b90969493929591612675600093612009565b61267f8883611dd0565b9461269660018060a01b03928388169733896142c7565b6040805163226bf2d160e21b81526001600160a01b03929092166004830152959093869185916024918391905af197881561270c575b60009384996126e2575b506125dd829184611e3a565b829199506125dd945061270190873d891161264f5761263d8183611d28565b9490949991506126d6565b612714611d58565b6126cc565b6040516370a0823160e01b808252306004830152976020979096956127a6956001600160a01b038516959491908a856024818a5afa948515612829575b600095612808575b5061276b9495309361255f565b6040519889523060048a015290979096879489939092909190818180602481015b0381895afa918215610e5457600092610e27575050612532565b81036127f657836127b69261439d565b60008051602061466283398151915291823b156102b257604051632e1a7d4d60e01b8152600481018390526120d193600090829081838160248101610557565b60405163a4de03c760e01b8152600490fd5b61276b9550612823908c8d3d10610e4d57610e3e8183611d28565b9461275e565b612831611d58565b612756565b9360ff929897969360c0969260e087019a60018060a01b0380921688521660208701526040860152606085015216608083015260a08201520152565b929598919497999093969961288a610c558686611e3a565b169a156128fa576000199a5b803b156102b2578a60006106449d6128c882966040519889978896879563d505accf60e01b8752303360048901612836565b03925af180156128ed575b6128de575b50612663565b6128e790611d08565b386128d8565b6128f5611d58565b6128d3565b859a612896565b6040516370a0823160e01b80825230600483015297966020956127b6956001600160a01b03851695899561297a959194919391929091908a856024818c5afa9485156129a1575b600095612980575b5061295d9495309361255f565b6040519a8b523060048c0152998a9791508181806024810161278c565b9161439d565b61295d955061299b908c8d3d10610e4d57610e3e8183611d28565b94612950565b6129a9611d58565b612948565b6020906001600160401b0381116129c7575b60051b0190565b6129cf611cf1565b6129c0565b92916129df826129ae565b916129ed6040519384611d28565b829481845260208094019160051b81019283116102b257905b828210612a135750505050565b8380918335612a21816102a1565b815201910190612a06565b50634e487b7160e01b600052603260045260246000fd5b602090805115612a51570190565b612a59612a2c565b0190565b6020918151811015612a72575b60051b010190565b612a7a612a2c565b612a6a565b9015612a885790565b61041b612a2c565b60209160011015612a51570190565b9190811015612aaf5760051b0190565b6129cf612a2c565b3561041b816102a1565b90612acb826129ae565b604090612ada82519182611d28565b8381528093612aeb601f19916129ae565b019160005b838110612afd5750505050565b602090825160e081018181106001600160401b03821117612b53575b845260008152826000818301526000858301526000606083015260006080830152600060a0830152600060c0830152828601015201612af0565b612b5b611cf1565b612b19565b9190918251906002821061060357909260001984019190612b8083612ac1565b9460a09283612b8e88612a43565b5101526001190160005b848110612ba6575050505050565b80612bb661092060019386612a5d565b8583830191612c3d8b85612bcd610920878c612a5d565b93612bd88582611e3a565b9590916004612bf48c8060a01b03988986168a86161495611e6a565b91612c0b85612c03888a612a5d565b519015159052565b612c2d60409182612c1c898b612a5d565b516001600160a01b03909216910152565b606097889485612c1c898b612a5d565b612c4d836080612c1c898b612a5d565b51630240bc6b60e21b81529788928391165afa948515612d63575b6000948596612d3b575b505015612d2257612ce5602091612cdf612cda612cb1612cee975b8a612c98868a612a5d565b510151906001600160701b03809b169a8b911691612ed6565b9760c09889612cc0868a612a5d565b51015289612cce8589612a5d565b5101516103e8026124a4565b151590565b93612a5d565b51019015159052565b858410612cff575b50505001612b98565b612d1790612d0d858d612a5d565b510151928b612a5d565b510152388581612cf6565b612ce5602091612cdf612cda612cb1612cee9798612c8d565b8091929650612d57939550903d106123de576123cf8183611d28565b50929092933880612c72565b612d6b611d58565b612c68565b9190918251906002821061060357909260001984019190612d9083612ac1565b9460a09283612d9e88612a43565b5101526001190160005b848110612db6575050505050565b80612dc661092060019386612a5d565b8583830191612e048b85612ddd610920878c612a5d565b93612de88582611e3a565b9590916004612bf48c8060a01b03988986168a86161495611ecc565b612e14836080612c1c898b612a5d565b51630240bc6b60e21b81529788928391165afa948515612ec9575b6000948596612ea1575b505015612e8857612ce5602091612cdf612cda612cb1612e5e978a612c98868a612a5d565b858410612e6f575b50505001612da8565b612e7d90612d0d858d612a5d565b510152388581612e66565b612ce5602091612cdf612cda612cb1612e5e9798612c8d565b8091929650612ebd939550903d106123de576123cf8183611d28565b50929092933880612e39565b612ed1611d58565b612e2f565b9190918015612503576103e88084108015612f28575b6124e9576103e58381840293020292612f0583856124a4565b03612f165761041b930201906124a4565b604051631a93c68960e11b8152600490fd5b50808310612eec565b60405190604082018281106001600160401b03821117612f5c575b6040526001825260203681840137565b612f64611cf1565b612f4c565b90612f73826129ae565b612f806040519182611d28565b8281528092612f91601f19916129ae565b0190602036910137565b9190918251600191612fae838301612f69565b9460a0612fba82612a43565b510151612fc687612a43565b52600019830160005b848110612fde57505050505050565b8060c0612fec889386612a5d565b510151613003612ffc8387612a5d565b5151151590565b6000901561305c57506130428160005b868510156130555761302c60806104ed8888018b612a5d565b915b61303d60806104ed888c612a5d565b613ff7565b61304e8383018b612a5d565b5201612fcf565b889161302e565b6130429082613013565b815192916002841061060357613096600019928386019061308682612ac1565b9660c09384916001190189612a5d565b510152805b6130a55750505050565b8086858093016131b06131a4612cda61313088856130e7888d6130d26109208d612cdf6109208886612a5d565b9060046130df8383611e3a565b819691611e6a565b91613135836080612c1c8a60018060a01b03809b168b8a16149961310f8b612c038484612a5d565b61312060409788612c1c8585612a5d565b60609e8f9a8b612c1c8585612a5d565b612a5d565b51630240bc6b60e21b81529485928391165afa91821561321f575b60009586936131fa575b5050156131ec579061318d612cce925b84613175848d612a5d565b5101516001600160701b0380971696879216906132d3565b9860a0998a61319c8484612a5d565b510152612a5d565b6020612ce5848d612a5d565b600183116131c2575b5050018061309b565b6131cc9089612a5d565b510151836131e26131dc84612515565b8a612a5d565b51015238806131b9565b929061318d612cce9261316a565b80919296506132159350903d106123de576123cf8183611d28565b509093388061315a565b613227611d58565b613150565b81519291600284106106035761324c600019928386019061308682612ac1565b510152805b61325b5750505050565b80868580930161329d6131a4612cda61313088856130e7888d6132886109208d612cdf6109208886612a5d565b9060046132958383611e3a565b819691611ecc565b600183116132af575b50500180613251565b6132b99089612a5d565b510151836132c96131dc84612515565b51015238806132a6565b908115612503576103e8908181108015613326575b801561331c575b6124e95781838202029161330384846124a4565b910203612f16576103e5612a59926001940302906124a4565b50828411156132ef565b508184106132e8565b600290600219811161333f570190565b612a59612404565b8119811161333f570190565b80516000198101929160005b84811061336d575050505050565b8061348161345161338361092060019587612a5d565b61339261092086860188612a5d565b61339c8183611e3a565b9390926133b6888060a01b03958686168786161495611e6a565b80956040928351630240bc6b60e21b815260609260049184818481858a165afa9081156134e7575b60009586926134c1575b505089156134bb5793955b516370a0823160e01b81526001600160a01b0390951691850191825260209492859284928391829086010392165afa9283156134ae575b60009361348f575b50506134496001600160701b038092168093612532565b921691612ed6565b9061345b89612515565b8610156134875761347b90610d516109206134758961332f565b8b612a5d565b926134f4565b0161335f565b5088926134f4565b6134a6929350803d10610e4d57610e3e8183611d28565b903880613432565b6134b6611d58565b61342a565b956133f3565b6134dc93965080919250903d106123de576123cf8183611d28565b5093909338806133e8565b6134ef611d58565b6133de565b906120d1939260009060001461350d5750600091613ff7565b9091613ff7565b81519060005b8281106135275750505050565b602061353f816135378488612a5d565b510151151590565b61354d575b5060010161351a565b60409061355e826104ed8589612a5d565b9161356e60606104ed868a612a5d565b6001600160a01b03811660009081526002602052604090205460ff1682516370a0823160e01b808252306004808401919091526001600160a01b0385811698929791959394908d9083876024818e5afa96871561391f575b600097613900575b508851998a52838a8c81806135fd8d82019073f5bce5077908a1b7370b9ae04adc565ebd643966602083019252565b03915afa998a156138f3575b60009a6138d4575b508c87158015906138cd575b80156138c4575b613639575b5050505050505050505050613544565b958185878b8499989796958e9b73c0aee478e3658e2610c5f7a4a2e1777ce9e4f2ac91829116146000146138ba57506136b1735c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f9b5b5163e6a4390560e01b81526001600160a01b039384169281019283529590921660208201528491829160400190565b0381848c165afa9182156138ad575b60009261388e575b5081166136d8575b50908c613629565b613704928289928f612ffc8f96916136f860806104ed836136fe96612a5d565b94612a5d565b9161392c565b98909589613714575b8e906136d0565b861161378157505091839161372b9330928c614030565b10613773575051908152600192919033907f8ed9d7f4b992b4476c7f5cee8895a6c9fe5a1601e771e630d67d5ed17d4656d590602090a35b903880808080808080808061370d565b90516342301c2360e01b8152fd5b60019a9950856137a461379c829996989b9a9495979b612459565b612710900490565b89119182613883575b5050156137c6575050506137c19488613c1c565b613763565b6137d261379c8761247b565b87116137e6575b5050505050505050613763565b516335ea6a7560e01b81526001600160a01b0385169281019283528592829082908190602001038173057835ad21a177dbdd3090bb1cae03eacf78fc6d5afa918215613876575b600092613859575b505011613845575b8080806137d9565b61384f9488613e22565b388080808061383d565b61386f9250803d10610e4d57610e3e8183611d28565b3880613835565b61387e611d58565b61382d565b1015905086386137ad565b6138a6919250853d87116121b3576121a38183611d28565b90386136c8565b6138b5611d58565b6136c0565b6136b1909b613682565b508a1515613624565b508361361d565b6138ec919a50843d8611610e4d57610e3e8183611d28565b9838613611565b6138fb611d58565b613609565b613918919750843d8611610e4d57610e3e8183611d28565b95386135ce565b613927611d58565b6135c6565b959392919490956000966000809760405190630240bc6b60e21b9283835260608095818560048160018060a01b03809c165afa958615613b00575b83958497613adb575b50600490604051998a9384928352165afa958615613ace575b81958297613aa6575b505050600014613a9257906139a8939291613b0d565b91949091925b82151580613a89575b6139c4575b505050505050565b6139f26139ec6139d488806143eb565b906139df878b6143eb565b9082019392019083100190565b90614400565b868111613a00575b506139bc565b869950849690613a1693959294969950036124a4565b958683109081613a80575b5080613a77575b613a52575b505083809583613a45959602019202900384026124a4565b90388080808080806139fa565b613a45949550808211600014613a6e575080955b959493613a2d565b90508095613a66565b50858110613a28565b90501538613a21565b508315156139b7565b613a9c9391613b0d565b91949091926139ae565b8091929750613ac2939650903d106123de576123cf8183611d28565b50939093943880613992565b613ad6611d58565b613989565b613af791975060049650833d85116123de576123cf8183611d28565b50969095613970565b613b08611d58565b613967565b939092936000936000936001600160701b0380809816931696620f4240918289860202988993613b3d87866124a4565b910214613b4c575b5050505050565b81169216613b65620f2ad98083860202920293826124a4565b8314613b72575b80613b45565b81811115613b6c57039450620f36889190910201915038808581613b6c565b91908251928382526000905b848210613bca575092806020939411613bbd575b601f01601f1916010190565b6000838284010152613bb1565b90602090818082850101519082860101520190613b9d565b6001600160a01b03918216815291811660208301529091166040820152606081019190915260a06080820181905261041b92910190613b91565b90613c2b929195939495614262565b73f5bce5077908a1b7370b9ae04adc565ebd643966803b156102b25760405163f1676d3760e01b8152916000918391829084908290613c71908b8b308060048701613be2565b03925af19081613d12575b50613cbf57506040519182526001600160a01b0316907f137ac09e2fb89da2cbe32562b3e674e46bba7c473b3f71b5c1bd62f7ef3232ed9080602081015b0390a2565b613ccf61379c613cd59394612459565b90612532565b6040519081526001600160a01b03919091169033907f8ed9d7f4b992b4476c7f5cee8895a6c9fe5a1601e771e630d67d5ed17d4656d590602090a3565b8061058b613d1f92611d08565b38613c7c565b9291926001600160401b038211613d6c575b60405191613d4f601f8201601f191660200184611d28565b8294818452818301116102b2578281602093846000960137010152565b613d74611cf1565b613d37565b969593929060e0880160018060a01b038092168952602060e0818b01528451809252806101008b019501926000905b838210613e0957505050505092613df7613de5613e0494613dd78560c0988c60408160009d9a039101526103d6565b908a820360608c01526103d6565b6001600160a01b039093166080890152565b86820360a0880152613b91565b930152565b8451811687529582019593820193600190910190613da8565b9194929394613e7d613e32612f31565b91613e4f87613e4085612a43565b6001600160a01b039091169052565b613e57612f31565b9388613e6286612a43565b52613e6b612f31565b956000613e7788612a43565b52614262565b92737d2768de32b0b80b7a3454c06bdac94a69ddc7a990813b156102b25760008094613ec26040519788968795869463ab9c4b5d60e01b865230923060048801613d79565b03925af19081613f1f575b50613f0f57506040519182526001600160a01b0316907f137ac09e2fb89da2cbe32562b3e674e46bba7c473b3f71b5c1bd62f7ef3232ed908060208101613cba565b613ccf61379c613cd5939461247b565b8061058b613f2c92611d08565b38613ecd565b9794919690959295737d2768de32b0b80b7a3454c06bdac94a69ddc7a99889330361089757613faa96613fa3958a61086d61085a613f9c97613f8d613f7b8f99613f9699612a7f565b359e8f95613f88876102a1565b612a7f565b35953691613d25565b97612a7f565b3592612a7f565b3590613347565b809211156105f157602092600060449281946040519363095ea7b360e01b85526004850152602484015260018060a01b03165af13d15601f3d11600160005114161716156102b257600190565b90600060a492819582956040519463022c0d9f60e01b8652600486015260248501526044840152608060648401528160848401525af150565b91809695919294939461404e6140468388611e3a565b908093611f2e565b9060018060a01b038681808a16931683149560405197630240bc6b60e21b94858a52606092838b600481898c165afa9a8b156141d2575b600090819c6141af575b508a156141a45790889392915b6001600160701b0380809e169116906140b59183612ed6565b986140bf9261439d565b6120d19b61413998614132956140f8946140e391908d1561419b5760008c91613ff7565b8a1561419457815b8b1561418c575091611f2e565b9788946040519081528281600481888a165afa90811561417f575b6000938492614159575b50508815614152578190925b16911685612ed6565b991661439d565b6000901561414b575084600091613ff7565b8591613ff7565b8190614129565b61417493945080919250903d106123de576123cf8183611d28565b50919091388061411d565b614187611d58565b614113565b905091611f2e565b80916140eb565b8b600091613ff7565b9a908893929161409c565b90506141c9919b50843d86116123de576123cf8183611d28565b509a903861408f565b6141da611d58565b614085565b60209081818403126102b2578051906001600160401b0382116102b257019180601f840112156102b2578251614214816129ae565b936142226040519586611d28565b818552838086019260051b8201019283116102b2578301905b828210614249575050505090565b8380918351614257816102a1565b81520191019061423b565b919060405192606084018481106001600160401b038211176142a8575b604052603c84526020840190604036833760601b905260601b603483015260601b604882015290565b6142b0611cf1565b61427f565b60008080809481945af1156109895750565b9060006064926020958295604051946323b872dd60e01b86526004860152602485015260448401525af13d15601f3d11600160005114161716156102b257565b6044602092600080936040519263a9059cbb60e01b845273f5bce5077908a1b7370b9ae04adc565ebd643966600485015260248401525af13d15601f3d11600160005114161716156102b257565b60446000916020936040519163a9059cbb60e01b835260048301526024820152826000805160206146628339815191525af13d15601f3d11600160005114161716156102b257565b600091826044926020956040519363a9059cbb60e01b8552600485015260248401525af13d15601f3d11600160005114161716156102b257565b6000546001600160a01b0316330361107a57565b91906000198184099202918280821091030390565b90801561453757600160801b811060071b90811b600160c01b811060061b90811b91600160e01b831060051b92831b600160f01b811060041b90811b600160f81b811060031b90811b91600160fc1b831060021b92831b95600160fe1b871060011b958695010101010101918383610100031c911b1791811b916144916144868261453d565b91613ccf8380612491565b60809380851c82861b178360011b92861c806000039084820601848306019184808085049304910401019283910693861b019482811c9380821c8086119586156144f3575b5050505050506144e8575b60011c1c90565b9060001901906144e1565b149450919290919084614510575b505050503880808080806144d6565b6fffffffffffffffffffffffffffffffff919293945080029316911b171038808080614501565b5061041b905b801561465b5761464a61464361463961462f61462561461b614611614607600160801b808a14908a1117898160071b1d6801000000000000000080821490821117908160061b1d64010000000080821490821117908160051b1d6201000080821490821117908160041b1d9161010080841490841117928360031b1d936001601086146010871117958660021b1d9660061b1b9060051b1b9060041b1b9060031b1b9060021b1b9060011b1b90600880821491111760011b1b614600818b6124a4565b0160011c90565b614600818a6124a4565b61460081896124a4565b61460081886124a4565b61460081876124a4565b61460081866124a4565b61460081856124a4565b80926124a4565b90818110614656575090565b905090565b5060009056fe000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2a164736f6c634300080f000a",
    "sourceMap": "562:54367:13:-:0;;;;;;;;;-1:-1:-1;562:54367:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;;;;;562:54367:13;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;37636:60;562:54367;;;:::i;:::-;37636:60;;:::i;:::-;562:54367;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;562:54367:13;;;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;562:54367:13;;;;;;;;;;;;;;-1:-1:-1;;;;;562:54367:13;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;-1:-1:-1;562:54367:13;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;27958:8;562:54367;;;:::i;:::-;27958:8;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;1431:42:13;;-1:-1:-1;;;;;28012:23:13;;-1:-1:-1;;562:54367:13;;;28012:23;;:::i;:::-;;:::i;:::-;562:54367;28012:31;28008:57;;719:42:12;562:54367:13;28168:51;562:54367;;;;;:::i;:::-;28168:51;;:::i;:::-;562:54367;28278:12;562:54367;;;;;20361:120:12;;28278:12:13;28272:19;;:29;:19;;;;:::i;:::-;;:29;562:54367;28272:44;28268:357;;562:54367;28641:7;;;28694:8;28641:7;;28635:14;28641:7;;:::i;:::-;-1:-1:-1;;;;;562:54367:13;;;28635:14;28679:13;;:8;;;:::i;:::-;;:13;1522:42;-1:-1:-1;;;;;562:54367:13;;1522:42;28679:13;28667:10;;28694:8;;:::i;:::-;28272:29;28780:19;28723:27;28737:4;;28723:27;:::i;:::-;28780:19;;;:::i;:::-;;:29;562:54367;28819:31;;;;;;562:54367;;28977:5;562:54367;28896:9;562:54367;;;;719:42:12;;;;;28819:31:13;;;;;;;562:54367;28819:31;;562:54367;;;;;;;;28819:31;;;;;;;;;562:54367;28819:31;;562:54367;28896:9;;:::i;:::-;28977:5;:::i;:::-;562:54367;;;;;;;:::i;28819:31::-;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;:::i;:::-;;;28268:357;28332:24;;;;;1522:42;562:54367;28466:51;562:54367;;;;;:::i;:::-;28466:51;;:::i;:::-;28535:19;28272:29;28535:19;;;;:::i;:::-;;:29;562:54367;28535:44;28531:83;;28268:357;;;;;;28531:83;562:54367;;-1:-1:-1;;;28588:26:13;;562:54367;;28588:26;28008:57;562:54367;;-1:-1:-1;;;28052:13:13;;562:54367;;28052:13;562:54367;;;-1:-1:-1;;562:54367:13;;;;;;;;;;;-1:-1:-1;;;;;562:54367:13;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;12631:10:12;12640:1;12631:10;;12627:36;;12683:21;;;:::i;:::-;562:54367:13;;;;;;12714:33:12;;;;;:::i;:::-;562:54367:13;12757:249:12;12788:13;;;562:54367:13;;;;;;;:::i;12803:11:12:-;562:54367:13;;;;;12930:65:12;12949:46;12872:44;-1:-1:-1;;;;;562:54367:13;12893:13:12;562:54367:13;12893:13:12;;:::i;:::-;1522:42:13;562:54367;12908:7:12;;;;;:::i;:::-;1522:42:13;562:54367;12872:44:12;;:::i;:::-;12961:10;;;;;:::i;:::-;562:54367:13;12949:46:12;:::i;:::-;12930:65;;;:::i;:::-;562:54367:13;;12762:24:12;;;562:54367:13;;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;562:54367:13;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;-1:-1:-1;562:54367:13;;-1:-1:-1;;562:54367:13;;;;1384:136:16;;:::i;:::-;2353:25;562:54367:13;;-1:-1:-1;;;;;;562:54367:13;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;562:54367:13;;;;;;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;562:54367:13;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;562:54367:13;;;;;;;;;;;:::i;:::-;43721:10;1752:42;43721:10;:19;43717:54;;44011:12;562:54367;;43876:13;562:54367;;;43916:53;562:54367;;;;:::i;:::-;53658:134;;;;;;;;;;;;;53482:316;;43876:13;43916:53;;:::i;:::-;562:54367;;;44011:12;;:::i;:::-;44037:25;;;;44033:64;;44140:11;;-1:-1:-1;;;;;562:54367:13;44140:11;:::i;43717:54::-;562:54367;;-1:-1:-1;;;43749:22:13;;562:54367;;43749:22;562:54367;;;;;;;;;;;1384:136:16;;:::i;:::-;562:54367:13;;-1:-1:-1;;;52398:52:13;;;562:54367;;;1641:42;52398:52;;;;;;;562:54367;52398:52;;;;562:54367;;;;52509:9;;52520:10;;;;;;562:54367;;;;52532:11;52575:13;52602:27;:20;52575:13;;20244:1:12;52575:13:13;;;:::i;:::-;1522:42;-1:-1:-1;;;;;562:54367:13;;1522:42;52575:13;-1:-1:-1;;;;;562:54367:13;;;;;52602:13;562:54367;;;;;;;52602:20;562:54367;;-1:-1:-1;;562:54367:13;52625:4;562:54367;;;;52602:27;1287:4:12;52509:9:13;;52398:52;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;562:54367;;;;;;;;20128:8;562:54367;;;:::i;:::-;20128:8;;;;;;;:::i;:::-;719:42:12;562:54367:13;20240:51;562:54367;;;;;:::i;:::-;20240:51;;:::i;:::-;562:54367;;;;;;20344:19;:29;:19;;;;:::i;:::-;;:29;562:54367;20344:44;20340:357;;562:54367;;20712:7;20881:5;20712:7;20794:16;20712:7;;20765:8;20712:7;20706:14;20712:7;;;;;:::i;20765:8::-;20794:16;:::i;:::-;20881:5;;:::i;20340:357::-;20492:24;;;;;;1522:42;562:54367;20344:29;20607:19;20538:51;562:54367;;;;;:::i;:::-;20538:51;;:::i;:::-;20607:19;;;:::i;:::-;;:29;562:54367;20607:44;20603:83;;20340:357;;;;;;;;562:54367;;;;;25951:8;562:54367;;;:::i;:::-;25951:8;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;1431:42:13;;-1:-1:-1;;;;;26005:23:13;;-1:-1:-1;;562:54367:13;;;26005:23;;:::i;:::-;562:54367;26005:31;26001:57;;719:42:12;562:54367:13;26161:51;562:54367;;;;;:::i;:::-;26161:51;;:::i;:::-;26226:8;;562:54367;26226:8;;;:::i;:::-;;:17;562:54367;26226:31;26222:327;;562:54367;26565:7;;;26618:17;26565:7;26559:14;26565:7;;:::i;26559:14::-;26603:13;;:8;;;:::i;:13::-;562:54367;26618:8;;;:::i;:::-;;:17;562:54367;26591:10;;26618:17;;:::i;:::-;26656:27;26670:4;;26656:27;:::i;:::-;26693:31;;;;;;562:54367;;26852:5;562:54367;26770:9;562:54367;;;;719:42:12;;;;;26693:31:13;;;;;;;562:54367;26693:31;;562:54367;;;;;;;;26222:327;26273:24;-1:-1:-1;1522:42:13;;-1:-1:-1;26407:51:13;562:54367;;;26273:24;562:54367;:::i;:::-;26407:51;;:::i;:::-;26476:8;562:54367;26476:8;;;:::i;:::-;;:17;562:54367;26476:31;26472:66;;26222:327;;;26472:66;562:54367;;-1:-1:-1;;;26516:22:13;;562:54367;;26516:22;562:54367;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;17316:90;3442:36:12;3399:26;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;562:54367:13;;3442:36:12;:::i;:::-;562:54367:13;-1:-1:-1;;;;;562:54367:13;;;17316:90;17471:42;;;;-1:-1:-1;;562:54367:13;17471:42;17316:274;;;;;562:54367;;;-1:-1:-1;17612:191:13;562:54367;17316:274;562:54367;;;;719:42:12;;;;;;;;;;17316:274:13;;17452:4;17420:10;562:54367;17316:274;;;:::i;:::-;;;;;;;;;17471:42;17316:274;;17471:42;17612:191;;:::i;:::-;562:54367;;;;;;;;;;;;;17316:274;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;17471:42;;;;;562:54367;;;;;33987:8;34151:60;33817:8;562:54367;;;:::i;:::-;33817:8;;;;;;;;;:::i;:::-;33892:14;33898:7;;;;;:::i;33892:14::-;33936:49;33968:7;;;;;:::i;:::-;33977;;;;;:::i;:::-;33936:49;;:::i;33987:8::-;-1:-1:-1;;562:54367:13;;34030:40;:30;;34036:23;562:54367;;34036:23;;:::i;34030:40::-;562:54367;;-1:-1:-1;;;34030:44:13;;;-1:-1:-1;;;;;562:54367:13;;;34030:44;;562:54367;;;34030:44;;719:42:12;;;562:54367:13;;34030:44;;;562:54367;;;;;;34030:44;;;;;;;562:54367;;34030:44;;;562:54367;;34151:30;34157:23;;562:54367;;;;;34151:40;562:54367;34084:53;34151:44;562:54367;;;;;;:::i;:::-;34084:53;:::i;:::-;34157:23;:::i;34151:40::-;562:54367;;34151:44;;;-1:-1:-1;;;;;562:54367:13;;;;34151:44;;562:54367;;;;;;;;;;;;;;34151:44;;;;;;;;;;562:54367;;34151:44;;;562:54367;34151:60;;;:::i;:::-;:75;34147:126;;562:54367;34151:44;;;;;;-1:-1:-1;34151:44:13;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;34030;34151:40;34030:44;;;34157:23;;34151:44;34030;;;;;;34151:30;34030:44;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;562:54367;;;;;36549:8;562:54367;;;:::i;:::-;36549:8;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;1431:42:13;;-1:-1:-1;;;;;36603:23:13;;-1:-1:-1;;562:54367:13;;;;36603:23;:::i;:::-;562:54367;36603:31;36599:57;;36817:8;37000:52;36728:7;36722:14;36728:7;;;;;:::i;36722:14::-;36766:49;36798:7;;;;;:::i;:::-;36807;;;;;:::i;36817:8::-;562:54367;;-1:-1:-1;;;36860:36:13;;;36890:4;562:54367;36860:36;;562:54367;;;36860:36;;;562:54367;;;36860:36;;;;;;;;562:54367;;36860:36;;;562:54367;36890:4;;562:54367;36906:64;36890:4;;562:54367;;;;:::i;36906:64::-;562:54367;;37000:36;;;36890:4;562:54367;37000:36;;562:54367;36890:4;562:54367;;;37000:36;;;;;;;;562:54367;37000:36;;;:52;;;:::i;:::-;37066:24;;;37062:63;;37135:31;;;;;562:54367;;-1:-1:-1;;;37135:31:13;;562:54367;37135:31;;562:54367;;;37212:9;;562:54367;;;;;;;;;;37135:31;562:54367;36860:36;36906:64;36860:36;;;;;562:54367;36860:36;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;562:54367;;;;;;;;;;;;;;2777:18:16;562:54367:13;-1:-1:-1;;;;;562:54367:13;;;;2763:10:16;:32;2759:59;;562:54367:13;;;;;;2777:18:16;562:54367:13;;;;;;2763:10:16;;562:54367:13;;;2870:40:16;;;;562:54367:13;2763:10:16;562:54367:13;;;;2759:59:16;562:54367:13;;-1:-1:-1;;;2804:14:16;;562:54367:13;;2804:14:16;562:54367:13;;;-1:-1:-1;;562:54367:13;;;;;;;;;;;-1:-1:-1;;;;;562:54367:13;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::o;:::-;;23873:8;562:54367;;;:::i;:::-;23873:8;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;1431:42:13;;-1:-1:-1;;;;;23927:7:13;;562:54367;23927:7;;:::i;:::-;562:54367;23927:15;23923:41;;719:42:12;562:54367:13;24067:52;562:54367;;;;;:::i;:::-;24103:9;24067:52;:::i;:::-;562:54367;24178:12;562:54367;;;;;20361:120:12;;24178:12:13;24172:19;;:29;:19;;;;:::i;:::-;;:29;562:54367;24172:44;24168:358;;562:54367;24536:41;;;;;;;;;24665:16;562:54367;;;;-1:-1:-1;24753:5:13;562:54367;;;719:42:12;;;;;;;24536:41:13;;24103:9;24536:41;;;;;;;562:54367;24536:41;;562:54367;24612:8;24627:17;24612:13;;:8;;;:::i;:13::-;562:54367;24627:8;;;:::i;:::-;;:17;562:54367;24627:17;;:::i;24536:41::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;24168:358;24436:19;24232:24;;;;24172:29;24232:24;;;562:54367;24366:52;24232:24;1522:42;562:54367;;;;:::i;:::-;24103:9;24366:52;:::i;:::-;24436:19;;;:::i;:::-;;:29;562:54367;24436:44;24432:83;;24168:358;;;;;;562:54367;;;;;;37884:60;562:54367;;;:::i;:::-;37884:60;;:::i;562:54367::-;;;;;22032:8;562:54367;;;:::i;:::-;22032:8;;;;;:::i;:::-;719:42:12;562:54367:13;22220:51;562:54367;;;;;:::i;:::-;22220:51;;:::i;:::-;22285:8;;:17;:8;;;:::i;:::-;;:17;562:54367;22285:31;22281:327;;562:54367;22624:7;;;22802:5;22624:7;;22677:17;22618:14;22624:7;;22715:16;22624:7;562:54367;22624:7;;:::i;22281:327::-;22332:24;;;;;22466:51;1522:42;562:54367;;;;;;:::i;:::-;22466:51;;:::i;:::-;22535:8;22285:17;22535:8;;;:::i;:::-;;:17;562:54367;22535:31;22531:66;;22281:327;;;;;;;562:54367;;;;;;;-1:-1:-1;;562:54367:13;;;;;;;;-1:-1:-1;;;;;562:54367:13;;;;;;;;;;;;;;;-1:-1:-1;;562:54367:13;;;;;;;;;;;;;1666:10:16;:20;562:54367:13;;;;;;;;;;;;;-1:-1:-1;;562:54367:13;;;;-1:-1:-1;;;;;562:54367:13;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;37398:49;562:54367;;;:::i;:::-;37398:49;;:::i;562:54367::-;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;-1:-1:-1;562:54367:13;;-1:-1:-1;;562:54367:13;;;;;;;;-1:-1:-1;;;;;562:54367:13;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;1384:136:16;;;;;:::i;:::-;51203:3:13;51190:16;;:39;;;;562:54367;51186:64;;19729:59:12;;51309:47:13;;19729:59:12;;51409:41:13;;-1:-1:-1;51513:13:13;;;;;;562:54367;51528:11;51617:12;51571:9;;;;;;:::i;51617:12::-;562:54367;;-1:-1:-1;;;51617:37:13;;51648:4;51617:37;;;562:54367;;;51616:75;;51617:50;;562:54367;;;;;;;;;;;;51617:37;562:54367;-1:-1:-1;;;;;562:54367:13;;51617:37;;;;;;;51528:11;-1:-1:-1;51617:37:13;;;51528:11;51617:50;;;:::i;:::-;51672:18;;;:::i;:::-;51616:75;;:::i;:::-;19970:67:12;;51705:217:13;;51528:11;;;20244:1:12;1287:4;51502:9:13;;51705:217;-1:-1:-1;51776:16:13;;;;;;;;51705:217;;;;;51794:11;51855:12;;;;20244:1:12;51855:12:13;;51869:19;51855:12;;:::i;:::-;51869:19;;:::i;:::-;1287:4:12;51765:9:13;;51617:37;;;;;;-1:-1:-1;51617:37:13;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;51409:41;-1:-1:-1;562:54367:13;;-1:-1:-1;;;51440:10:13;;;51309:47;-1:-1:-1;562:54367:13;;-1:-1:-1;;;51343:13:13;;;51186:64;-1:-1:-1;562:54367:13;;-1:-1:-1;;;51238:12:13;;;51190:39;19729:59:12;;;51190:39:13;;562:54367;;35086:8;562:54367;;;:::i;:::-;35086:8;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;1431:42:13;;-1:-1:-1;;;;;35140:7:13;;;;;:::i;:::-;562:54367;35140:15;35136:41;;35281:40;;;;;562:54367;35145:1;35571:60;562:54367;;;719:42:12;;;;;;;35281:40:13;;35262:9;35281:40;;;;;;;562:54367;35281:40;;562:54367;35388:7;35407:8;35388:7;;;;;:::i;:::-;35356:49;35262:9;35397:7;;;;;;:::i;35356:49::-;35407:8;:::i;35281:40::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;562:54367;;;;;;;-1:-1:-1;;562:54367:13;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;9539:10:12;9548:1;9539:10;;9535:36;;9591:21;;;:::i;:::-;562:54367:13;;;;;;;;;;;-1:-1:-1;562:54367:13;;;;9653:238:12;9669:16;;;;;;562:54367:13;;;;;;;:::i;9687:11:12:-;9777:7;;;20463:1;9777:7;;;:::i;:::-;9814:66;9833:47;9756:44;1287:4;;;9786:13;;;;;;:::i;:::-;9756:44;;:::i;:::-;9846:10;;;;;:::i;:::-;562:54367:13;9833:47:12;:::i;:::-;9814:66;;;:::i;:::-;562:54367:13;1287:4:12;9658:9;;562:54367:13;;;:::i;:::-;;;;-1:-1:-1;562:54367:13;;-1:-1:-1;;562:54367:13;;;;;;;;;;;;;;;;;;;:::i;:::-;1384:136:16;;:::i;:::-;562:54367:13;;;;;;-1:-1:-1;562:54367:13;52208:13;562:54367;;;-1:-1:-1;562:54367:13;;;;;;;;;;;;;-1:-1:-1;562:54367:13;;;;;;;;;;;:::i;:::-;3399:26:12;;14450:90:13;3442:36:12;3399:26;;;;;;;;;;;:::i;14450:90:13:-;14605:42;;;;-1:-1:-1;;562:54367:13;14605:42;14450:274;;;;;562:54367;-1:-1:-1;14761:80:13;562:54367;14450:274;562:54367;;;;719:42:12;;;;;;;;;;14450:274:13;;14586:4;14554:10;562:54367;14450:274;;;:::i;:::-;;;;;;;;;14605:42;14450:274;;14605:42;14761:80;;:::i;14450:274::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;14605:42;;;;;562:54367;;;;;;;-1:-1:-1;;562:54367:13;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;6190:8;562:54367;;6190:8;:::i;:::-;6230:85;562:54367;;;;;;;;6230:85;;;:::i;:::-;3399:26:12;;;6534:7:13;3399:26:12;3442:36;3399:26;;;;:::i;:::-;3442:36;;:::i;:::-;562:54367:13;;6467:7;562:54367;;;;;;;6449:10;;;562:54367;;6467:7;:::i;:::-;6449:10;;562:54367;;6534:7;:::i;:::-;-1:-1:-1;562:54367:13;;;719:42:12;;;;;;;;6564:29:13;;562:54367;;6564:29;;562:54367;;6564:29;;;;;;;562:54367;-1:-1:-1;6564:29:13;;;562:54367;;;;;;;;;;;;;;;;;;;;;;;;;;6564:29;;;;562:54367;6564:29;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;562:54367;-1:-1:-1;562:54367:13;;-1:-1:-1;;562:54367:13;;;;;;;;;:::i;:::-;1384:136:16;;:::i;:::-;-1:-1:-1;;;;;562:54367:13;2059:22:16;;2055:48;;562:54367:13;;;-1:-1:-1;;;;;;562:54367:13;;;;;;;;2055:48:16;562:54367:13;;-1:-1:-1;;;2090:13:16;;562:54367:13;;2090:13:16;562:54367:13;;7893:169;7816:8;562:54367;;;:::i;:::-;7816:8;;;;;;;;;:::i;:::-;7989:9;7893:169;;;:::i;:::-;8087:65;;;;;;:::i;:::-;562:54367;-1:-1:-1;;;;;562:54367:13;8210:11;;562:54367;;;;8192:10;;562:54367;;8210:11;:::i;:::-;-1:-1:-1;;;;;;;;;;;8232:41:13;;;;;562:54367;;8346:29;562:54367;;-1:-1:-1;8346:29:13;562:54367;;;;719:42:12;;;;;;;8232:41:13;;;;;;;;562:54367;8232:41;;562:54367;8314:9;;;;;:::i;:::-;562:54367;;-1:-1:-1;;;8346:29:13;;-1:-1:-1;;;;;562:54367:13;;;;8346:29;;562:54367;;;;;;-1:-1:-1;;562:54367:13;;;;;;;8346:29;;562:54367;;8346:29;;;;;;;562:54367;-1:-1:-1;8346:29:13;;;562:54367;7989:9;;;8424:21;8420:93;;562:54367;;;;;;;;;;;;;;;;;;;;;;;;;8420:93;8491:21;;7989:9;;8491:21;:::i;:::-;8192:10;8491:21;:::i;:::-;8420:93;;8346:29;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;8232:41;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;562:54367;;30053:8;562:54367;;;:::i;:::-;30053:8;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;1431:42:13;;-1:-1:-1;;;;;30107:7:13;;562:54367;30107:7;;:::i;:::-;562:54367;30107:15;30103:41;;719:42:12;562:54367:13;30247:51;562:54367;;;;;:::i;:::-;30247:51;;:::i;:::-;562:54367;;30312:8;;;;;:::i;:::-;;:17;562:54367;30332:9;-1:-1:-1;30308:323:13;;562:54367;30669:8;;;;;;;:::i;:::-;;:17;562:54367;30641:49;;;;;562:54367;31020:5;562:54367;30778:16;562:54367;-1:-1:-1;562:54367:13;;;;;719:42:12;;;;;;;30641:49:13;;;;;;;;562:54367;30641:49;;562:54367;30725:8;30740:17;30725:13;;:8;;;:::i;:13::-;30740:8;;;;:::i;30778:16::-;30855:8;;;;;:::i;:::-;;:17;562:54367;30332:9;30843:29;30839:109;;562:54367;31020:5;;:::i;30839:109::-;30918:29;;30930:8;;;;:::i;:::-;;:17;562:54367;30332:9;30918:29;:::i;:::-;30839:109;;;30641:49;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;30308:323;562:54367;30357:24;;;;30491:51;30357:24;;1522:42;562:54367;;;;:::i;30491:51::-;30332:9;;30560:8;;;;:::i;:::-;;:17;562:54367;30560:29;30556:64;;30308:323;;;;;719:42:12;;;;;;;;;;;;;;-1:-1:-1;;;;;719:42:12;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;719:42:12;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;562:54367:13;;719:42:12;;;;;;;3221:264;-1:-1:-1;;;;;;;;;;;1431:42:13;-1:-1:-1;;;;;562:54367:13;;2381:16:12;;2377:49;;-1:-1:-1;;;2464:338:12;;;;;;;;;;;;2811:39;;3442:36;;;:::i;2464:338::-;;;2377:49;562:54367:13;;-1:-1:-1;;;2406:20:12;;;;;3221:264;3442:36;3221:264;3399:26;3221:264;3399:26;:::i;3221:264::-;3399:26;3442:36;3221:264;2260:597;-1:-1:-1;;;;;;;;;;;1431:42:13;2260:597:12;-1:-1:-1;;;;;562:54367:13;;2381:16:12;;2377:49;;-1:-1:-1;;;2464:338:12;;;;;;;;;;;;;2811:39;;2260:597::o;2464:338::-;;;;2260:597;;;;-1:-1:-1;;;;;562:54367:13;;;;;;2381:16:12;2377:49;;2464:338;;;;;;;;;;;;;;;2811:39;;2260:597::o;3872:1156::-;4523:499;3872:1156;4523:499;;;;;;;;;;;;;;;;1051:66;;;4523:499;;;;;;814:66;4523:499;;;;;3872:1156;:::o;:::-;4523:499;3872:1156;4523:499;;;;;;;;;;;;;;;;1169:66;;;4523:499;;;;;;934:66;4523:499;;;;;3872:1156;:::o;:::-;4523:499;;3872:1156;-1:-1:-1;;;;;562:54367:13;719:42:12;1687:24;719:42;;814:66;;1051;;1683:238;4523:499;;;;;;;;;;;;;;;;;;;;;;;;;;;;3872:1156;:::o;1683:238::-;934:66;;1169;;1683:238;;2746:113:13;2819:15;-1:-1:-1;2804:48:13;;2746:113::o;2804:48::-;562:54367;;-1:-1:-1;;;2843:9:13;;;;;562:54367;;;;;;;;;;;;;:::i;3488:1439::-;562:54367;;-1:-1:-1;;;3866:50:13;;-1:-1:-1;;;;;562:54367:13;;3866:50;;;562:54367;-1:-1:-1;;;;;;;;;;;562:54367:13;;;;3488:1439;;;;;;4058:51;;562:54367;3866:50;;719:42:12;;3866:50:13;562:54367;;;719:42:12;3866:50:13;;;;;;;3488:1439;-1:-1:-1;3866:50:13;;;3488:1439;-1:-1:-1;;;;;;562:54367:13;3866:64;3862:148;;3488:1439;4058:51;;;:::i;:::-;19729:59:12;;;;4123:38:13;;;3488:1439;4119:802;;;4177:53;;;;;4119:802;;3488:1439::o;4119:802::-;4286:56;;;;;:::i;:::-;4360:31;;;;;;;4436:56;;;;;;;:::i;:::-;4514:31;;;4510:65;;4597:27;;4593:61;;4672:53;4356:555;3488:1439::o;4593:61::-;562:54367;;-1:-1:-1;;;4633:21:13;;3866:50;;4633:21;4356:555;4768:27;;;;;;;;4764:61;;4843:53;4356:555;3488:1439::o;4764:61::-;562:54367;;-1:-1:-1;;;4804:21:13;;3866:50;;4804:21;4123:38;19729:59:12;;;4123:38:13;;3862:148;562:54367;;-1:-1:-1;;;3946:53:13;;-1:-1:-1;;;;;562:54367:13;;3866:50;3946:53;;562:54367;-1:-1:-1;;;;;;;;;;;562:54367:13;;;;;;;;;;;;;-1:-1:-1;;3946:53:13;;;;;;3862:148;3946:53;3862:148;3946:53;;;;;;-1:-1:-1;3946:53:13;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;3862:148;;3946:53;;;;;;;;:::i;:::-;;;3866:50;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;3488:1439;562:54367;;-1:-1:-1;;;3866:50:13;;-1:-1:-1;;;;;562:54367:13;;;3866:50;;;562:54367;;;;;;;3488:1439;;;;;;4058:51;;562:54367;;3866:50;;719:42:12;;3866:50:13;562:54367;;;719:42:12;3866:50:13;;;;;;;3488:1439;-1:-1:-1;3866:50:13;;;3488:1439;-1:-1:-1;;;;;;562:54367:13;3866:64;3862:148;;3488:1439;4058:51;;;:::i;3862:148::-;562:54367;;-1:-1:-1;;;3946:53:13;;-1:-1:-1;;;;;562:54367:13;;;3866:50;3946:53;;562:54367;;;;;;;;;;;;;;;;-1:-1:-1;;3946:53:13;;;;;;3862:148;3946:53;3862:148;3946:53;;;;;;-1:-1:-1;3946:53:13;;;;;;:::i;:::-;;;;3862:148;;3946:53;;;:::i;:::-;;;3866:50;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;562:54367;;;-1:-1:-1;;;;;562:54367:13;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;5295:449:12:-;5576:66;;5295:449;5591:36;5499:26;;;:::i;:::-;562:54367:13;;-1:-1:-1;;;;;562:54367:13;;;;;5591:36:12;562:54367:13;5591:36:12;:::i;:::-;562:54367:13;;;719:42:12;;;;;;;5576:66;;;;;;;;;5295:449;-1:-1:-1;;;5576:66:12;;;5295:449;562:54367:13;;;-1:-1:-1;;;;;562:54367:13;;;;;5675:62:12;562:54367:13;;;5675:16:12;:62;562:54367:13;;;5295:449:12;:::o;5576:66::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;5295:449;5576:66;5295:449;5591:36;5499:26;5576:66;5295:449;5499:26;;:::i;562:54367:13:-;;719:42:12;;;562:54367:13;;;;;;;;;;;;;;;;;51203:3;562:54367;;:::o;:::-;;;:::i;:::-;;;;41057:1;562:54367;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;41301:1;562:54367;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;719:42:12;;;562:54367:13;;;;;;;;6106:331:12;19729:59;;6254:41;;19729:59;;6309:38;;;;6106:331;6305:74;;6399:31;6400:18;;;;:::i;:::-;6399:31;:::i;6305:74::-;562:54367:13;;-1:-1:-1;;;6356:23:12;;;;;6309:38;19729:59;;;6309:38;;6254:41;562:54367:13;;-1:-1:-1;;;6283:12:12;;;;;1431:42:13;13642:1:12;1431:42:13;;;;;-1:-1:-1;;1431:42:13;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;562:54367::-;;;;;;;;;;;719:42:12;;562:54367:13;;719:42:12;562:54367:13;:::o;9185:850::-;9468:8;9710:29;9185:850;;;;;;9468:8;:::i;:::-;9502:68;;;:::i;:::-;-1:-1:-1;;;;;562:54367:13;;;;;;9627:9;;562:54367;9609:10;562:54367;9627:9;:::i;:::-;562:54367;;;-1:-1:-1;;;9710:29:13;;-1:-1:-1;;;;;562:54367:13;;;;9710:29;;;562:54367;;;;;;;;;;;;;9710:29;;;;;;;9185:850;9710:29;;;;;;9185:850;9770:41;;;;;:::i;:::-;9842:58;562:54367;;;9842:16;:58;562:54367;;;9842:58;;9821:79;;;9914:20;9910:54;;9978:20;9974:54;;9185:850;:::o;9974:54::-;562:54367;-1:-1:-1;;;10007:21:13;;9710:29;;10007:21;9910:54;562:54367;;-1:-1:-1;;;9943:21:13;;9710:29;;9943:21;9842:58;;;9710:29;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;9185:850;;;;;;;;9468:8;9710:29;9185:850;9468:8;:::i;:::-;9502:68;;;;:::i;:::-;562:54367;9627:9;562:54367;;;;;;;;;9609:10;;9627:9;;:::i;:::-;562:54367;;;-1:-1:-1;;;9710:29:13;;-1:-1:-1;;;;;562:54367:13;;;;9710:29;;;562:54367;;;;;;;;;;;;;9710:29;;;;;;;9185:850;9710:29;;;;;;9185:850;9770:41;;;;;;:::i;9710:29::-;;;;;9770:41;9710:29;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;10677:905;562:54367;;-1:-1:-1;;;10998:37:13;;;11029:4;10998:37;;;562:54367;719:42:12;10998:37:13;;719:42:12;;10677:905:13;11342:53;;-1:-1:-1;;;;;562:54367:13;;;;;10677:905;10998:37;562:54367;;;;10998:37;;;;;;;10677:905;-1:-1:-1;10998:37:13;;;10677:905;11029:4;11072:188;11029:4;;;11072:188;;:::i;:::-;562:54367;;11342:37;;;11029:4;10998:37;11342;;562:54367;11045:215;;;;;;;;;;;;;;562:54367;;;;;11342:37;;;;;;;;;;;-1:-1:-1;11342:37:13;;;:53;;;:::i;:::-;11327:68;;11323:103;;11466:11;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;11488:31:13;;;;;;562:54367;;-1:-1:-1;;;11488:31:13;;10998:37;11488:31;;562:54367;;;11565:9;;-1:-1:-1;;562:54367:13;;;-1:-1:-1;562:54367:13;;;;11488:31;562:54367;11323:103;562:54367;;-1:-1:-1;;;11404:22:13;;10998:37;;11404:22;10998:37;11072:188;10998:37;;;;;;;-1:-1:-1;10998:37:13;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;562:54367;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;12468:761::-;;;;;;;;;;;;3442:36:12;3399:26;;;;:::i;3442:36::-;562:54367:13;;12992:42;;;-1:-1:-1;;562:54367:13;12992:42;12836:275;;;;;562:54367;-1:-1:-1;13142:80:13;562:54367;12836:275;562:54367;;;;719:42:12;;;;;;;;;;12836:275:13;;12973:4;12941:10;12836:275;;;;:::i;:::-;;;;;;;;;12992:42;12836:275;;12992:42;13142:80;;:::i;12836:275::-;;;;:::i;:::-;;;;;;;:::i;:::-;;;12992:42;;;;;15461:684;562:54367;;-1:-1:-1;;;15790:37:13;;;15821:4;15790:37;;;562:54367;719:42:12;;15790:37:13;;15987:53;;-1:-1:-1;;;;;562:54367:13;;;15461:684;;15987:53;;562:54367;;;;15461:684;;562:54367;;15790:37;;562:54367;;;;15790:37;;;;;;;15461:684;-1:-1:-1;15790:37:13;;;15461:684;15821:4;15853:94;15821:4;;;15853:94;;:::i;:::-;562:54367;;15987:37;;;15821:4;15790:37;15987;;562:54367;15837:110;;;;-1:-1:-1;15837:110:13;562:54367;;;;;15987:37;562:54367;15987:53;;;:::i;15790:37::-;15853:94;15790:37;;;;;;;-1:-1:-1;15790:37:13;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;562:54367;;;-1:-1:-1;;;;;562:54367:13;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;719:42:12;;;562:54367:13;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;1522:42;;;;;;:::o;:::-;;;:::i;:::-;;;33982:1;1522:42;;;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;:::i;562:54367::-;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;719:42:12;562:54367:13;719:42:12;;562:54367:13;;:::i;:::-;;;-1:-1:-1;562:54367:13;;;;;;;;;;:::o;:::-;;;;;;719:42:12;;;;;-1:-1:-1;;;;;719:42:12;;;;;562:54367:13;719:42:12;;-1:-1:-1;562:54367:13;;;-1:-1:-1;562:54367:13;;;;-1:-1:-1;562:54367:13;;;;-1:-1:-1;562:54367:13;;;;-1:-1:-1;562:54367:13;;;;-1:-1:-1;562:54367:13;;;;-1:-1:-1;562:54367:13;;;;;;;;;;;;719:42:12;;;:::i;:::-;;;10312:1465;;;;562:54367:13;;10517:10:12;10526:1;10517:10;;10513:36;;562:54367:13;;-1:-1:-1;;562:54367:13;;;-1:-1:-1;10567:24:12;562:54367:13;10567:24:12;:::i;:::-;10601:17;;:8;;;;;:::i;:::-;;:17;562:54367:13;-1:-1:-1;;562:54367:13;;10655:16:12;;;;;;10312:1465;;;;;:::o;10673:11::-;10739:7;;;562:54367:13;10739:7:12;;;:::i;:::-;1287:4;;;;10748:13;11052:28;10748:13;;;;;;;:::i;:::-;10811:29;;;;;:::i;:::-;562:54367:13;;;11250:34:12;10918:36;562:54367:13;;;;;;;;;;;;10871:18:12;10918:36;;:::i;:::-;10968:8;:30;:8;;;;;:::i;:::-;;562:54367:13;;;;;;10968:30:12;11012:26;:16;:8;;;;;;:::i;:::-;;-1:-1:-1;;;;;562:54367:13;;;11012:16:12;;562:54367:13;;11012:26:12;11052:17;:8;;;;;;;;:::i;:28::-;11094:20;:8;:13;:8;;;;:::i;:20::-;562:54367:13;-1:-1:-1;;;11250:34:12;;562:54367:13;;;;;;11250:34:12;;;;;;;10673:11;562:54367:13;-1:-1:-1;;11250:34:12;;;10673:11;-1:-1:-1;;11328:55:12;;;11528:8;:23;11328:55;11554:50;11565:38;11432:54;11528:76;11328:55;;11445:8;;;;;:::i;:::-;;:17;562:54367:13;;-1:-1:-1;;;;;562:54367:13;;;;;;;11432:54:12;;:::i;:::-;11411:18;;:8;;;;;;:::i;:::-;;:18;562:54367:13;11573:8:12;;;;;:::i;:::-;;:17;562:54367:13;11566:4:12;562:54367:13;11565:38:12;:::i;:::-;562:54367:13;;;;11554:50:12;11528:8;;:::i;:::-;;:23;562:54367:13;;;;;;11528:76:12;11692:22;;;11688:72;;11328:55;10673:11;;;1287:4;10644:9;;11688:72;11716:14;11742:8;;;;;:::i;:::-;;:18;562:54367:13;11716:14:12;;;:::i;:::-;;:23;562:54367:13;11688:72:12;;;;;11328:55;11528:8;:23;11328:55;11554:50;11565:38;11432:54;11528:76;11328:55;;;;11250:34;;;;;;;;;;;;-1:-1:-1;11250:34:12;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;10312:1465;;;;562:54367:13;;10517:10:12;10526:1;10517:10;;10513:36;;562:54367:13;;-1:-1:-1;;562:54367:13;;;-1:-1:-1;10567:24:12;562:54367:13;10567:24:12;:::i;:::-;10601:17;;:8;;;;;:::i;:::-;;:17;562:54367:13;-1:-1:-1;;562:54367:13;;10655:16:12;;;;;;10312:1465;;;;;:::o;10673:11::-;10739:7;;;562:54367:13;10739:7:12;;;:::i;:::-;1287:4;;;;10748:13;11052:28;10748:13;;;;;;;:::i;:::-;10811:29;;;;;:::i;:::-;562:54367:13;;;11250:34:12;10918:36;562:54367:13;;;;;;;;;;;;10871:18:12;10918:36;;:::i;11052:28::-;11094:20;:8;:13;:8;;;;:::i;:20::-;562:54367:13;-1:-1:-1;;;11250:34:12;;562:54367:13;;;;;;11250:34:12;;;;;;;10673:11;562:54367:13;-1:-1:-1;;11250:34:12;;;10673:11;-1:-1:-1;;11328:55:12;;;11528:8;:23;11328:55;11554:50;11565:38;11432:54;11528:76;11328:55;11445:8;;;;;:::i;11528:76::-;11692:22;;;11688:72;;11328:55;10673:11;;;1287:4;10644:9;;11688:72;11716:14;11742:8;;;;;:::i;11716:14::-;;:23;562:54367:13;11688:72:12;;;;;11328:55;11528:8;:23;11328:55;11554:50;11565:38;11432:54;11528:76;11328:55;;;;11250:34;;;;;;;;;;;;-1:-1:-1;11250:34:12;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;6827:735;;;;19729:59;;6988:42;;1287:4;7044:29;;;:63;;;;6827:735;7040:99;;7271:3;562:54367:13;;;;;;;7369:27:12;;;;;:::i;:::-;7355:41;7351:64;;7522:23;562:54367:13;;1287:4:12;7522:23;;:::i;7351:64::-;562:54367:13;;-1:-1:-1;;;7405:10:12;;;;;7044:63;7077:30;;;;7044:63;;562:54367:13;;;719:42:12;562:54367:13;719:42:12;;;;;-1:-1:-1;;;;;719:42:12;;;;;562:54367:13;;719:42:12;44985:1:13;562:54367;;;;;;;;:::o;719:42:12:-;;;:::i;:::-;;;562:54367:13;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;719:42:12;562:54367:13;719:42:12;;562:54367:13;;:::i;:::-;;;;;;;;:::o;18009:812::-;;;;562:54367;;20244:1:12;1287:4;18212:27:13;1287:4:12;;;18212:27:13;:::i;:::-;18262:8;:17;:8;;;:::i;:::-;;:17;562:54367;18249:30;;;:::i;:::-;562:54367;-1:-1:-1;;562:54367:13;;18268:1;18305:10;;;;;;18009:812;;;;;;:::o;18317:11::-;18364:8;:18;:8;;;;;:::i;:::-;;:18;562:54367;18457:18;:8;;;;:::i;:::-;;562:54367;;;;;18457:18;18268:1;;18457:110;;;;18745:2;18457:110;18268:1;18457:110;18598:16;;;;;;18617:19;18675:13;18617:14;1287:4:12;;;18617:14:13;;:::i;:19::-;18598:44;;18675:13;;:8;;;;:::i;:13::-;18745:2;:::i;:::-;18776:28;1287:4:12;;;18776:28:13;;:::i;:::-;562:54367;1287:4:12;18294:9:13;;18598:44;;;;;18457:110;18745:2;18457:110;;;;13428:1532:12;562:54367:13;;;13428:1532:12;13642:1;13633:10;;13629:36;;13717:25;562:54367:13;;;;;;13683:24:12;;;;:::i;:::-;13717:35;;;;;-1:-1:-1;;562:54367:13;13717:35:12;:25;:::i;:::-;;:35;562:54367:13;13774:1180:12;13805:13;;;13428:1532;;;;:::o;13820:11::-;562:54367:13;;;;;;14710:90:12;14742:58;14753:46;14211:34;13886:13;;14016:36;13886:13;;13901:7;;13886:13;;;;;;:::i;13901:7::-;13958:29;14421:34;13958:29;;;;:::i;:::-;14016:36;;;;:::i;:::-;562:54367:13;14259:26:12;562:54367:13;14259:19:12;:14;562:54367:13;;;;;;;;;;;;14083:18:12;14115:14;:36;:14;;;;;:::i;:36::-;14165:32;:22;:14;;;;;;:::i;:32::-;14211:23;:14;;;;;;;;:::i;:34::-;14259:14;:::i;:26::-;562:54367:13;-1:-1:-1;;;14421:34:12;;562:54367:13;;;;;;14421:34:12;;;;;;;13820:11;562:54367:13;14421:34:12;;;;;13820:11;-1:-1:-1;;14499:55:12;;;;14608:60;14761:14;14499:55;;14620:14;;;;;:::i;:::-;;:24;562:54367:13;-1:-1:-1;;;;;562:54367:13;;;;;;;14608:60:12;;:::i;:::-;562:54367:13;;14582:14:12;;;;;;:::i;:::-;;:23;562:54367:13;14761:14:12;:::i;14742:58::-;14710:29;:14;;;;:::i;:90::-;562:54367:13;14888:5:12;;14884:59;;14499:55;13820:11;;562:54367:13;13779:24:12;;;14884:59;14920:14;;;;:::i;:::-;;:23;562:54367:13;14901:5:12;14895:12;14901:5;;;:::i;:::-;14895:12;;:::i;:::-;;:22;562:54367:13;14884:59:12;;;;14499:55;;;14608:60;14761:14;14499:55;;;14421:34;;;;;;;;;;;-1:-1:-1;14421:34:12;;;;;;:::i;:::-;-1:-1:-1;14421:34:12;;;;;;;;;:::i;:::-;;;13428:1532;562:54367:13;;;13428:1532:12;13642:1;13633:10;;13629:36;;13717:25;562:54367:13;;;;;;13683:24:12;;;;:::i;13717:25::-;;:35;562:54367:13;13774:1180:12;13805:13;;;13428:1532;;;;:::o;13820:11::-;562:54367:13;;;;;;14710:90:12;14742:58;14753:46;14211:34;13886:13;;14016:36;13886:13;;13901:7;;13886:13;;;;;;:::i;13901:7::-;13958:29;14421:34;13958:29;;;;:::i;:::-;14016:36;;;;:::i;14710:90::-;562:54367:13;14888:5:12;;14884:59;;14499:55;13820:11;;562:54367:13;13779:24:12;;;14884:59;14920:14;;;;:::i;:::-;;:23;562:54367:13;14901:5:12;14895:12;14901:5;;;:::i;14895:12::-;;:22;562:54367:13;14884:59:12;;;;7962:730;;19729:59;;8122:43;;1287:4;8179:29;;;;:63;;;;7962:730;8179:90;;;;7962:730;8175:138;;562:54367:13;;;;;8506:21:12;;;;;:::i;:::-;562:54367:13;;8475:52:12;8471:75;;8617:3;8647:23;562:54367:13;8674:1:12;562:54367:13;;;8647:23:12;;:::i;8179:90::-;8246:23;;;;;8179:90;;:63;8212:30;;;;8179:63;;562:54367:13;;;-1:-1:-1;;562:54367:13;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;:::o;31472:1378::-;562:54367;;-1:-1:-1;;562:54367:13;;;31472:1378;-1:-1:-1;31680:16:13;;;;;;31472:1378;;;;;:::o;31698:11::-;31764:7;32830:2;32555:69;31764:7;;20463:1:12;31764:7:13;;;:::i;:::-;31773:13;;1287:4:12;;;31773:13:13;;:::i;:::-;31908:44;;;;:::i;:::-;562:54367;;;32025:51;562:54367;;;;;;;;;;;;31982:18;32025:51;;:::i;:::-;562:54367;;;;;;719:42:12;;;32290:34:13;;;;;562:54367;;;;;;;;32290:34;;;;;;;31698:11;-1:-1:-1;;;32290:34:13;;;31698:11;-1:-1:-1;;32390:55:13;;;;;;;562:54367;-1:-1:-1;;;32477:30:13;;-1:-1:-1;;;;;562:54367:13;;;32477:30;;;562:54367;;;32477:30;;562:54367;32477:30;;562:54367;;;;;;;;32477:30;562:54367;;32477:30;;;;;;;32390:55;-1:-1:-1;32477:30:13;;;32390:55;562:54367;;32477:45;-1:-1:-1;;;;;562:54367:13;;;32477:45;;;:::i;:::-;562:54367;;32555:69;;:::i;:::-;32670:10;;;;:::i;:::-;32666:14;;:77;;;32683:54;32730:5;32725:11;;32730:5;;;:::i;:::-;32725:11;;:::i;32683:54::-;32666:77;32830:2;:::i;:::-;1287:4:12;31669:9:13;;32666:77;;;;32830:2;:::i;32477:30::-;;;;;;;-1:-1:-1;32477:30:13;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;32390:55;;;;32290:34;;;;;;;;;;;-1:-1:-1;32290:34:13;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;31117:349;;31456:2;31117:349;;-1:-1:-1;;31340:67:13;;;;;-1:-1:-1;31340:67:13;31456:2;:::i;31340:67::-;;;31456:2;:::i;38698:3378::-;562:54367;;38837:9;-1:-1:-1;38848:10:13;;;;;;38698:3378;;;;:::o;38860:11::-;38891:23;;:8;;;;;:::i;:::-;;:23;562:54367;;;;;38891:23;38887:3173;;38860:11;;20244:1:12;1287:4;38837:9:13;;38887:3173;38969:16;:8;:16;:8;;;;;:::i;:16::-;38987:8;:17;;:8;;;;:::i;:17::-;-1:-1:-1;;;;;562:54367:13;;;;;;52602:13;562:54367;;;;;;;;;;-1:-1:-1;;;39112:38:13;;;39144:4;39112:38;;;;562:54367;;;;-1:-1:-1;;;;;562:54367:13;;;;719:42:12;;39112:38:13;;562:54367;;;39112:38;;719:42:12;562:54367:13;;;;39112:38;;;;;;;38887:3173;-1:-1:-1;39112:38:13;;;38887:3173;562:54367;;;39191:30;;;;;;;;;;;;562:54367;1752:42;562:54367;;;;;;39191:30;;;;;;;;;;38887:3173;-1:-1:-1;39191:30:13;;;38887:3173;19970:67:12;;;;;;39243:47:13;;;38887:3173;39243:75;;;;38887:3173;39239:2807;;38887:3173;;;;;;;;;;;;;;39239:2807;39361:135;;;;;;;;;;;;;719:42:12;562:54367:13;;;;39361:39;:135;719:42:12;;;39361:135:13;39542:50;1522:42;39361:135;;562:54367;-1:-1:-1;;;39542:50:13;;-1:-1:-1;;;;;562:54367:13;;;39542:50;;;562:54367;;;;;;;;;;;;;;;;;;;39542:50;;562:54367;;;;39542:50;;;;;;;39361:135;-1:-1:-1;39542:50:13;;;39361:135;562:54367;;;39615:2413;;39361:135;39239:2807;;;;;39615:2413;39716:317;39778:8;;;;;39856;39778;;;:13;;:8;;39856:18;39778:8;;:::i;:13::-;39856:8;;:::i;:18::-;39716:317;;:::i;:::-;40063:27;;;;40059:1947;;39615:2413;;;;;40059:1947;-1:-1:-1;;40126:37:13;;39144:4;;;;;40257:346;39144:4;;40257:346;;;:::i;:::-;40645:25;40641:64;;-1:-1:-1;562:54367:13;;;;20244:1:12;;;562:54367:13;40782:10;;40778:39;;562:54367;;40778:39;40122:1858;40059:1947;;;;;;;;;;;;;40641:64;562:54367;;-1:-1:-1;;;40679:26:13;;;40122:1858;20244:1:12;41041:17:13;;;;41040:27;41041:17;;;;;;;;;;;;:::i;:::-;41062:5;562:54367;;;;41040:27;41022:46;;:79;;;;40122:1858;-1:-1:-1;;41018:932:13;;;41206:14;;;;;;;:::i;:::-;40122:1858;;41018:932;41284:27;41285:17;;;:::i;41284:27::-;41266:46;;41262:688;;41018:932;;;;;;;;;40122:1858;;41262:688;562:54367;-1:-1:-1;;;41641:64:13;;-1:-1:-1;;;;;562:54367:13;;41641:64;;;562:54367;;;;;;;;;;;;;41641:64;;1847:42;41641:64;;;;;;;41262:688;-1:-1:-1;41641:64:13;;;41262:688;41641:80;;;41596:320;;41262:688;;;;;;41596:320;41862:14;;;;:::i;:::-;41596:320;;;;;;;41641:64;;;;;;-1:-1:-1;41641:64:13;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;41022:79;41072:29;;;-1:-1:-1;41022:79:13;;;;39542:50;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;39361:135;39542:50;39361:135;;;;39243:75;19970:67:12;;;;39243:75:13;;:47;;;;;39191:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;39112:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;17589:1971:12;;;;;;;;562:54367:13;17809:21:12;562:54367:13;17832:22:12;562:54367:13;;;719:42:12;;;;17991:35;;;;;562:54367:13;;;;17991:35:12;562:54367:13;;;;;;;;;17991:35:12;;;;;;;17589:1971;17991:35;562:54367:13;;17991:35:12;;;17589:1971;562:54367:13;17991:35:12;562:54367:13;;;18091:35:12;;;;;;;562:54367:13;18091:35:12;;;;;;;17589:1971;18091:35;562:54367:13;;18091:35:12;;;17589:1971;18155:187;;;;;;;18183:70;;;;;;:::i;:::-;18155:187;;;;;;19970:67;;;18366:32;;;18155:187;18362:1192;;18155:187;17589:1971;;;;;;:::o;18362:1192::-;18750:35;18665:54;18505:26;;;;:::i;:::-;18582;;;;;:::i;:::-;3009:97:17;;;;;;;;;;;2846:266;18665:54:12;18750:35;;:::i;:::-;18817:15;;;18813:731;;18362:1192;;;;18813:731;562:54367:13;;;;;;18985:22:12;562:54367:13;;;;;;;;18985:22:12;:::i;:::-;19122:36;;;;:52;;;;18813:731;19122:84;;;;18813:731;19118:339;;18813:731;562:54367:13;;;;;;16999:58:12;562:54367:13;;;1287:4:12;562:54367:13;;;;;;16999:58:12;:::i;:::-;18813:731;;;;;;;;;;19118:339;16999:58;19234:35;;;;;;19230:209;19234:35;;;19297:36;19230:209;;;19118:339;;;;;19230:209;19388:28;;19230:209;;;;19122:84;19178:28;;;;19122:84;;:52;19162:12;;;19122:52;;;18366:32;19970:67;;;;18366:32;;18155:187;18272:70;;;;:::i;:::-;18155:187;;;;;;;18091:35;;;;;;;;;;;;-1:-1:-1;18091:35:12;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;17991;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;17991:35:12;;;;;;;;:::i;:::-;;;15517:969;;;;;562:54367:13;15779:10:12;562:54367:13;;-1:-1:-1;;;;;562:54367:13;;;;;;15967:7:12;;562:54367:13;;;;;;16031:28:12;;;;;;;:::i;:::-;562:54367:13;;15992:67:12;15988:482;;15517:969;;;;;;:::o;15988:482::-;562:54367:13;;;;16210:28:12;16144:6;562:54367:13;;;;;;;16210:28:12;;;:::i;:::-;16172:66;;16168:288;;15988:482;;;;16168:288;16266:7;;;16262:176;16168:288;16262:176;562:54367:13;;-1:-1:-1;16371:6:12;562:54367:13;;;;1287:4:12;;-1:-1:-1;16262:176:12;;;;16168:288;;1933:55:13;;;562:54367;;;;;;-1:-1:-1;1933:55:13;;;;;;;;;;562:54367;1933:55;;;;;;719:42:12;;-1:-1:-1;;719:42:12;1933:55:13;;;:::o;:::-;-1:-1:-1;1933:55:13;;;;;;;;;562:54367;;;;1933:55;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;562:54367:13;;;1933:55;;562:54367;;;1933:55;;;562:54367;;;;1933:55;;;562:54367;1933:55;;;562:54367;;;;;1933:55;;;;;;;;;;;;:::i;42510:671::-;;42738:33;42510:671;;;;;;42738:33;:::i;:::-;1945:42;42874:87;;;;;562:54367;;-1:-1:-1;;;42874:87:13;;562:54367;42874:87;;562:54367;;;;42874:87;;562:54367;;42874:87;;42913:4;;;;42874:87;;;;:::i;:::-;;;;;;;;;42510:671;-1:-1:-1;42870:305:13;;-1:-1:-1;562:54367:13;;;;;-1:-1:-1;;;;;562:54367:13;;43137:27;;562:54367;;;;43137:27;;;;42510:671::o;42870:305::-;43046:22;43047:12;43028:41;43047:12;;;:::i;43046:22::-;43028:41;;:::i;:::-;562:54367;;;;;-1:-1:-1;;;;;562:54367:13;;;;;43008:10;;43004:66;;562:54367;;43004:66;42510:671::o;42874:87::-;;;;;;:::i;:::-;;;;562:54367;;;;-1:-1:-1;;;;;562:54367:13;;;;;;;;;719:42:12;;;-1:-1:-1;;719:42:12;562:54367:13;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;562:54367:13;;;;;;:::o;:::-;;;:::i;:::-;;;1641:42;;;;;;;;;562:54367;;;;;;;;;;1641:42;;;;;;562:54367;;;;;;;;;;;1641:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;562:54367:13;;;1641:42;;;562:54367;;1641:42;;;;562:54367;1641:42;;;;:::i;:::-;;;;:::o;:::-;;;562:54367;;;;1641:42;;;;562:54367;;;;;1641:42;;;;;;44590:1369;;;;;;45346:33;44971:16;;:::i;:::-;44997:18;;;;;;:::i;:::-;-1:-1:-1;;;;;562:54367:13;;;;;;44997:18;45095:16;;:::i;:::-;45121:21;;;;;:::i;:::-;562:54367;45240:16;;:::i;:::-;45266:12;45004:1;45266:12;;;:::i;:::-;562:54367;45346:33;:::i;:::-;1641:42;;45494:247;;;;;;45004:1;562:54367;;45494:247;562:54367;;719:42:12;;;;;;;;;;45494:247:13;;44880:4;;;45494:247;;;;:::i;:::-;;;;;;;;;44590:1369;-1:-1:-1;45478:475:13;;-1:-1:-1;562:54367:13;;;;;-1:-1:-1;;;;;562:54367:13;;45915:27;;562:54367;;;;45915:27;562:54367;45478:475;45834:22;45835:12;45816:41;45835:12;;;:::i;45494:247::-;;;;;;:::i;:::-;;;;46474:821;;;;;;;;;1641:42;46710:10;;;:34;46706:69;;47100:24;46801:9;47113:11;46801:9;;46958:15;562:54367;47100:10;46801:9;46881:10;46801:9;;;47000:58;46801:9;;:::i;:::-;1522:42;;;;;;;:::i;:::-;46881:10;:::i;:::-;562:54367;;;;;:::i;47000:58::-;47100:10;;:::i;:::-;562:54367;47113:11;;:::i;:::-;562:54367;47100:24;;:::i;:::-;47138:25;;;;47134:64;;4222:1269:15;;-1:-1:-1;4222:1269:15;;;;;;;;;;;;;;;;;;;;562:54367:13;;;;;;4222:1269:15;;;;;;;562:54367:13;-1:-1:-1;4222:1269:15;;;;;562:54367:13;;;;46474:821;:::o;47549:960::-;;47731:772;;47549:960;;;;;47731:772;;562:54367;;;;47731:772;;;;;;;;;;;;;;;;;;;;;;;;;;;47549:960::o;48962:1745::-;;;;;;;;;;49377:51;49316:40;;;;:::i;:::-;49377:51;;;;:::i;:::-;562:54367;;;;;;;;;;;;;49454:16;;562:54367;;;719:42:12;;;;49546:34:13;;;;;562:54367;;;49546:34;562:54367;;;;49546:34;;;;;;;48962:1745;49546:34;;;;;;48962:1745;-1:-1:-1;49636:55:13;;;;;;;;;;-1:-1:-1;;;;;562:54367:13;;;;;;49717:60;;;;;:::i;:::-;49830:8;;;;:::i;:::-;50697:2;;50541:8;;50428:60;;50100:92;;50002:2;;49892:61;;;;;49546:34;49892:61;;50002:2;:::i;:::-;50137:26;;;;;;50165;;;;;;50100:92;:::i;:::-;562:54367;;;;;50257:34;;;562:54367;;49546:34;562:54367;;;;50257:34;;;;;;;50165:26;49546:34;;;50257;;;50165:26;-1:-1:-1;;50347:55:13;;;;;;;;562:54367;;;50428:60;;:::i;:::-;562:54367;;50541:8;:::i;:::-;49546:34;;50587:61;;;;;49546:34;50587:61;50697:2;:::i;50587:61::-;;;50697:2;:::i;50347:55::-;;;;;50257:34;;;;;;;;;;;-1:-1:-1;50257:34:13;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;50165:26;;;;50100:92;:::i;50137:26::-;;;;;49892:61;;49546:34;49892:61;50002:2;:::i;49636:55::-;;;;;;;;;49546:34;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;562:54367;;;;;;;;;;;;;-1:-1:-1;;;;;562:54367:13;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;:::i;:::-;;;;;;;;;52884:355;;;562:54367;;719:42:12;562:54367:13;719:42:12;;;;;-1:-1:-1;;;;;719:42:12;;;;;52884:355:13;562:54367;719:42:12;53041:2:13;562:54367;;;;;;;;;;;53054:158;;;562:54367;53054:158;;;;;562:54367;53054:158;;;;;52884:355;:::o;719:42:12:-;;;:::i;:::-;;;744:296:15;-1:-1:-1;839:145:15;;;;;;;;562:54367:13;;;744:296:15;:::o;1047:1573::-;;-1:-1:-1;1208:1355:15;1047:1573;1208:1355;1047:1573;;;1208:1355;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1208:1355:15;;;;;562:54367:13;;;1047:1573:15:o;2626:1456::-;2761:1269;;2626:1456;-1:-1:-1;2626:1456:15;;2761:1269;;;;;;;;1752:42:13;2761:1269:15;;;;;;;;;;;;;;;;-1:-1:-1;2761:1269:15;;;;;562:54367:13;;;2626:1456:15:o;:::-;2761:1269;-1:-1:-1;2626:1456:15;2761:1269;2626:1456;2761:1269;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2761:1269:15;;;;;;;;-1:-1:-1;2761:1269:15;;;;;562:54367:13;;;2626:1456:15:o;:::-;-1:-1:-1;2626:1456:15;;2761:1269;2626:1456;2761:1269;2626:1456;2761:1269;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2761:1269:15;;;;;562:54367:13;;;2626:1456:15:o;1207:89:16:-;-1:-1:-1;562:54367:13;-1:-1:-1;;;;;562:54367:13;1666:10:16;:20;1252:37;;1207:89::o;434:243:17:-;;;-1:-1:-1;;434:243:17;;533:138;;;;;;;;;;;434:243;:::o;11706:2892::-;;11849:7;;11845:31;;562:54367:13;11976:1316:17;;;;;;;;;562:54367:13;11976:1316:17;;;;;;;;;;562:54367:13;11976:1316:17;;;;;;;;;562:54367:13;11976:1316:17;;;;;;;;;562:54367:13;11976:1316:17;;;;;;;;;;562:54367:13;11976:1316:17;;;;;;;;;;562:54367:13;11976:1316:17;;;;562:54367:13;11976:1316:17;;;;;;;;;;;;;;;;;;;;;;13315:11;13349:14;13315:11;;;:::i;:::-;13355:7;;;;;:::i;13349:14::-;11976:1316;13457:788;;;;;;;;;562:54367:13;13457:788:17;;;;;562:54367:13;13457:788:17;;;;;;;;;;;;;;;;;;;;;;;;;;562:54367:13;;;1287:4:12;562:54367:13;;;;;;;;14433:23:17;;;:66;;;;;11706:2892;14429:114;;;;;;;;11706:2892;562:54367:13;;;11706:2892:17;:::o;14429:114::-;562:54367:13;;;;14429:114:17;;;14433:66;14462:24;;-1:-1:-1;14462:24:17;;;;;;14461:37;;14433:66;;;;;;;;;;;;;14461:37;14346:34;562:54367:13;;;;;;;14341:39:17;;562:54367:13;;14327:54:17;14491:7;14461:37;;;;;;11845:31;11865:11;;;9722:1561;9798:6;;9794:20;;11194:5;11136:16;11102;11068;11034;11000;10966;10932;562:54367:13;11976:1316:17;;9825:1069;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;562:54367:13;9825:1069:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;562:54367:13;9825:1069:17;;;;;;;;;;562:54367:13;9825:1069:17;;10937:5;;;;:::i;:::-;1287:4:12;562:54367:13;;;;10932:16:17;10971:5;;;;:::i;10966:16::-;11005:5;;;;:::i;11000:16::-;11039:5;;;;:::i;11034:16::-;11073:5;;;;:::i;11068:16::-;11107:5;;;;:::i;11102:16::-;11141:5;;;;:::i;11136:16::-;11194:5;;;:::i;:::-;11220:46;:22;;;;;:46;9722:1561;:::o;11220:46::-;;;9722:1561;:::o;9794:20::-;9806:8;9803:1;9806:8;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "acceptOwnership()": "79ba5097",
    "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
    "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
    "cancelOwnershipTransfer()": "23452b9c",
    "executeOperation(address[],uint256[],uint256[],address,bytes)": "920f5c84",
    "getAmountIn(uint256,uint256,uint256)": "85f8c259",
    "getAmountOut(uint256,uint256,uint256)": "054d50d4",
    "getAmountsIn(uint256,address[])": "1f00ca74",
    "getAmountsOut(uint256,address[])": "d06ca61f",
    "harvest(uint256,address[],address[])": "b4b0ce68",
    "isOwner()": "8f32d59b",
    "onFlashLoan(address,address,uint256,uint256,bytes)": "23e30c8b",
    "owner()": "8da5cb5b",
    "quote(uint256,uint256,uint256)": "ad615dec",
    "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
    "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
    "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)": "af2979eb",
    "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
    "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "5b0d5984",
    "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
    "swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
    "swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
    "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)": "b6f9de95",
    "swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
    "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "791ac947",
    "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
    "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "5c11d795",
    "swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
    "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee",
    "transferOwnership(address)": "f2fde38b",
    "updateAaveAsset(bool,address)": "dc1efb41",
    "updateAllAaveAssets()": "31e63459"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ExcessiveInputAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExecuteNotAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Expired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IdenticalAddresses\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientLiquidity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientLiquidity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientOutputAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPath\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPath\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoReceivers\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoTokens\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotPercent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Overflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenIsFeeOnTransfer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAmount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"LoanError\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"MEV\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelOwnershipTransfer\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"premiums\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"executeOperation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"percentage\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"receivers\",\"type\":\"address[]\"}],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onFlashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETHSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"updateAaveAsset\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateAllAaveAssets\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Sandy Bradley <sandy@commoditystream.com>, Sam Bacha <sam@commoditystream.com>, ControlCandP\",\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"Transfers ownership of the contract to the caller. Can only be called by a new potential owner set by the current owner.\"},\"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)\":{\"params\":{\"amountADesired\":\"Amount of token A desired to add to pool\",\"amountAMin\":\"Minimum amount of token A, can be 0\",\"amountBDesired\":\"Amount of token B desired to add to pool\",\"amountBMin\":\"Minimum amount of token B, can be 0\",\"deadline\":\"Unix timestamp in seconds after which the transaction will revert\",\"to\":\"Address to receive liquidity token\",\"tokenA\":\"Token in pool\",\"tokenB\":\"Token in pool\"},\"returns\":{\"amountA\":\"exact amount of token A added to pool\",\"amountB\":\"exact amount of token B added to pool\",\"liquidity\":\"amount of liquidity token received\"}},\"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)\":{\"params\":{\"amountETHMin\":\"Minimum amount of ETH, can be 0\",\"amountTokenDesired\":\"Amount of token desired to add to pool\",\"amountTokenMin\":\"Minimum amount of token, can be 0\",\"deadline\":\"Unix timestamp in seconds after which the transaction will revert\",\"to\":\"Address to receive liquidity token\",\"token\":\"Token in pool\"},\"returns\":{\"amountETH\":\"exact amount of ETH added to pool\",\"amountToken\":\"exact amount of token added to pool\",\"liquidity\":\"amount of liquidity token received\"}},\"cancelOwnershipTransfer()\":{\"details\":\"Cancel a transfer of ownership to a new account. Can only be called by the current owner.\"},\"constructor\":{\"details\":\"Initialize contract by setting aave assets\"},\"executeOperation(address[],uint256[],uint256[],address,bytes)\":{\"details\":\"Reverts if not profitable.\",\"params\":{\"amounts\":\"Array of amounts to loan\",\"assets\":\"Array of tokens to loan\",\"initiator\":\"Address of flashloan initiator\",\"params\":\"Encoded factories and tokens\",\"premiums\":\"Array of premiums to repay on loan amounts\"},\"returns\":{\"_0\":\"success indicating success\"}},\"harvest(uint256,address[],address[])\":{\"params\":{\"percentage\":\"Percentage of balance to distribute\",\"receivers\":\"Array of addresses for receiving distribution\",\"tokens\":\"Array of token addresses to distribute\"}},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"onFlashLoan(address,address,uint256,uint256,bytes)\":{\"details\":\"Reverts if not profitable.\",\"params\":{\"amount\":\"Amount to loan\",\"data\":\"Encoded factories and tokens\",\"fee\":\"Fee to repay on loan amount\",\"sender\":\"Address of flashloan initiator\",\"token\":\"Token to loan\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)\":{\"params\":{\"amountAMin\":\"Minimum amount of token A, can be 0\",\"amountBMin\":\"Minimum amount of token B, can be 0\",\"deadline\":\"Unix timestamp in seconds after which the transaction will revert\",\"liquidity\":\"Amount of liquidity tokens to remove\",\"to\":\"Address to receive pool tokens\",\"tokenA\":\"Token in pool\",\"tokenB\":\"Token in pool\"},\"returns\":{\"amountA\":\"Amount of token A received\",\"amountB\":\"Amount of token B received\"}},\"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)\":{\"params\":{\"amountETHMin\":\"Minimum amount of ETH, can be 0\",\"amountTokenMin\":\"Minimum amount of token, can be 0\",\"deadline\":\"Unix timestamp in seconds after which the transaction will revert\",\"liquidity\":\"Amount of liquidity tokens to remove\",\"to\":\"Address to receive pool tokens\",\"token\":\"Token in pool\"},\"returns\":{\"amountETH\":\"Amount of ETH received\",\"amountToken\":\"Amount of token received\"}},\"removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)\":{\"params\":{\"amountETHMin\":\"Minimum amount of ETH, can be 0\",\"amountTokenMin\":\"Minimum amount of token, can be 0\",\"deadline\":\"Unix timestamp in seconds after which the transaction will revert\",\"liquidity\":\"Amount of liquidity tokens to remove\",\"to\":\"Address to receive pool tokens\",\"token\":\"Token in pool\"},\"returns\":{\"amountETH\":\"Amount of ETH received\"}},\"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)\":{\"params\":{\"amountETHMin\":\"Minimum amount of ETH, can be 0\",\"amountTokenMin\":\"Minimum amount of token, can be 0\",\"approveMax\":\"Whether or not the approval amount in the signature is for liquidity or uint(-1)\",\"deadline\":\"Unix timestamp in seconds after which the transaction will revert\",\"liquidity\":\"Amount of liquidity tokens to remove\",\"r\":\"The r component of the permit signature\",\"s\":\"The s component of the permit signature\",\"to\":\"Address to receive pool tokens\",\"token\":\"Token in pool\",\"v\":\"The v component of the permit signature\"},\"returns\":{\"amountETH\":\"Amount of ETH received\",\"amountToken\":\"Amount of token received\"}},\"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)\":{\"params\":{\"amountETHMin\":\"Minimum amount of ETH, can be 0\",\"amountTokenMin\":\"Minimum amount of token, can be 0\",\"approveMax\":\"Whether or not the approval amount in the signature is for liquidity or uint(-1)\",\"deadline\":\"Unix timestamp in seconds after which the transaction will revert\",\"liquidity\":\"Amount of liquidity tokens to remove\",\"r\":\"The r component of the permit signature\",\"s\":\"The s component of the permit signature\",\"to\":\"Address to receive pool tokens\",\"token\":\"Token in pool\",\"v\":\"The v component of the permit signature\"},\"returns\":{\"amountETH\":\"Amount of ETH received\"}},\"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)\":{\"params\":{\"amountAMin\":\"Minimum amount of token A, can be 0\",\"amountBMin\":\"Minimum amount of token B, can be 0\",\"approveMax\":\"Whether or not the approval amount in the signature is for liquidity or uint(-1)\",\"deadline\":\"Unix timestamp in seconds after which the transaction will revert\",\"liquidity\":\"Amount of liquidity tokens to remove\",\"r\":\"The r component of the permit signature\",\"s\":\"The s component of the permit signature\",\"to\":\"Address to receive pool tokens\",\"tokenA\":\"Token in pool\",\"tokenB\":\"Token in pool\",\"v\":\"The v component of the permit signature\"},\"returns\":{\"amountA\":\"Amount of token A received\",\"amountB\":\"Amount of token B received\"}},\"swapETHForExactTokens(uint256,address[],address,uint256)\":{\"details\":\"Require has been replaced with revert for gas optimization. Fallback alternate router check for insufficient output amount. Attempt to back-run swaps.\",\"params\":{\"amountOut\":\"Amount of output tokens that must be received\",\"deadline\":\"Unix timestamp in seconds after which the transaction will revert\",\"path\":\"Array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity\",\"to\":\"Address of receiver\"},\"returns\":{\"amounts\":\"Array of input token amount and all subsequent output token amounts\"}},\"swapExactETHForTokens(uint256,address[],address,uint256)\":{\"details\":\"Require has been replaced with revert for gas optimization. Fallback alternate router check for insufficient output amount. Attempt to back-run swaps.\",\"params\":{\"amountOutMin\":\"Minimum amount of output tokens that must be received\",\"deadline\":\"Unix timestamp in seconds after which the transaction will revert\",\"path\":\"Array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity\",\"to\":\"Address of receiver\"},\"returns\":{\"amounts\":\"Array of input token amount and all subsequent output token amounts\"}},\"swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)\":{\"details\":\"Require has been replaced with revert for gas optimization. Attempt to back-run swaps.\",\"params\":{\"amountOutMin\":\"Minimum amount of output tokens that must be received\",\"deadline\":\"Unix timestamp in seconds after which the transaction will revert\",\"path\":\"Array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity\",\"to\":\"Address of receiver\"}},\"swapExactTokensForETH(uint256,uint256,address[],address,uint256)\":{\"details\":\"Require has been replaced with revert for gas optimization. Fallback alternate router check for insufficient output amount. Attempt to back-run swaps.\",\"params\":{\"amountIn\":\"Amount of input tokens to send.\",\"amountOutMin\":\"Minimum amount of ETH that must be received\",\"deadline\":\"Unix timestamp in seconds after which the transaction will revert\",\"path\":\"Array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity\",\"to\":\"Address of receiver\"},\"returns\":{\"amounts\":\"Array of input token amount and all subsequent output token amounts\"}},\"swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)\":{\"details\":\"Require has been replaced with revert for gas optimization. Attempt to back-run swaps.\",\"params\":{\"amountIn\":\"Amount of input tokens to send.\",\"amountOutMin\":\"Minimum amount of ETH that must be received\",\"deadline\":\"Unix timestamp in seconds after which the transaction will revert\",\"path\":\"Array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity\",\"to\":\"Address of receiver\"}},\"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)\":{\"details\":\"Require has been replaced with revert for gas optimization. Fallback alternate router check for insufficient output amount. Attempt to back-run swaps.\",\"params\":{\"amountIn\":\"Amount of input tokens to send.\",\"amountOutMin\":\"Minimum amount of output tokens that must be received\",\"deadline\":\"Unix timestamp in seconds after which the transaction will revert\",\"path\":\"Array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity\",\"to\":\"Address of receiver\"},\"returns\":{\"amounts\":\"Array of input token amount and all subsequent output token amounts\"}},\"swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)\":{\"details\":\"Require has been replaced with revert for gas optimization. Attempt to back-run swaps.\",\"params\":{\"amountIn\":\"Amount of input tokens to send.\",\"amountOutMin\":\"Minimum amount of output tokens that must be received\",\"deadline\":\"Unix timestamp in seconds after which the transaction will revert\",\"path\":\"Array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity\",\"to\":\"Address of receiver\"}},\"swapTokensForExactETH(uint256,uint256,address[],address,uint256)\":{\"details\":\"Require has been replaced with revert for gas optimization. Fallback alternate router check for insufficient output amount. Attempt to back-run swaps.\",\"params\":{\"amountInMax\":\"Maximum amount of input tokens\",\"amountOut\":\"Amount of ETH to receive\",\"deadline\":\"Unix timestamp in seconds after which the transaction will revert\",\"path\":\"Array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity\",\"to\":\"Address of receiver\"},\"returns\":{\"amounts\":\"Array of input token amount and all subsequent output token amounts\"}},\"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)\":{\"details\":\"Require has been replaced with revert for gas optimization. Fallback alternate router check for insufficient output amount. Attempt to back-run swaps.\",\"params\":{\"amountInMax\":\"Maximum amount of input tokens\",\"amountOut\":\"Amount of output tokens to receive\",\"deadline\":\"Unix timestamp in seconds after which the transaction will revert\",\"path\":\"Array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity\",\"to\":\"Address of receiver\"},\"returns\":{\"amounts\":\"Array of input token amount and all subsequent output token amounts\"}},\"transferOwnership(address)\":{\"details\":\"Allows a new account (`newOwner`) to accept ownership. Can only be called by the current owner.\"},\"updateAaveAsset(bool,address)\":{\"params\":{\"asset\":\"Address of asset\",\"isActive\":\"Boolean flagging whether to use the asset for Aave flashloans\"}}},\"title\":\"OpenMevRouter\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)\":{\"notice\":\"Adds liquidity to an ERC-20\\u21c4ERC-20 pool. msg.sender should have already given the router an allowance of at least amountADesired/amountBDesired on tokenA/tokenB\"},\"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)\":{\"notice\":\"Adds liquidity to an ERC-20\\u21c4WETH pool with ETH. msg.sender should have already given the router an allowance of at least amountTokenDesired on token. msg.value is treated as a amountETHDesired. Leftover ETH, if any, is returned to msg.sender\"},\"executeOperation(address[],uint256[],uint256[],address,bytes)\":{\"notice\":\"Called from Aave Lending pool after contract has received the flash loaned amount (https://docs.aave.com/developers/v/2.0/guides/flash-loans)\"},\"harvest(uint256,address[],address[])\":{\"notice\":\"Multi-sig consensus call to distribute a given percentage of specified tokens to specified receivers.\"},\"onFlashLoan(address,address,uint256,uint256,bytes)\":{\"notice\":\"Called from BentoBox Lending pool after contract has received the flash loaned amount\"},\"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)\":{\"notice\":\"Removes liquidity from an ERC-20\\u21c4ERC-20 pool. msg.sender should have already given the router an allowance of at least liquidity on the pool.\"},\"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)\":{\"notice\":\"Removes liquidity from an ERC-20\\u21c4WETH pool and receive ETH. msg.sender should have already given the router an allowance of at least liquidity on the pool.\"},\"removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)\":{\"notice\":\"Identical to removeLiquidityETH, but succeeds for tokens that take a fee on transfer. msg.sender should have already given the router an allowance of at least liquidity on the pool.\"},\"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)\":{\"notice\":\"Removes liquidity from an ERC-20\\u21c4WETTH pool and receive ETH without pre-approval, thanks to permit\"},\"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)\":{\"notice\":\"Identical to removeLiquidityETHWithPermit, but succeeds for tokens that take a fee on transfer.\"},\"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)\":{\"notice\":\"Removes liquidity from an ERC-20\\u21c4ERC-20 pool without pre-approval, thanks to permit.\"},\"swapETHForExactTokens(uint256,address[],address,uint256)\":{\"notice\":\"Receive an exact amount of tokens for as little ETH as possible, along the route determined by the path. The first element of path must be WETH9. Leftover ETH, if any, is returned to msg.sender. amountInMax = msg.value\"},\"swapExactETHForTokens(uint256,address[],address,uint256)\":{\"notice\":\"Swaps an exact amount of ETH for as many output tokens as possible, along the route determined by the path. The first element of path must be WETH9, the last is the output token. amountIn = msg.value\"},\"swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)\":{\"notice\":\"Identical to swapExactETHForTokens, but succeeds for tokens that take a fee on transfer. amountIn = msg.value\"},\"swapExactTokensForETH(uint256,uint256,address[],address,uint256)\":{\"notice\":\"Swaps an exact amount of tokens for as much ETH as possible, along the route determined by the path. The first element of path is the input token, the last must be WETH9.\"},\"swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)\":{\"notice\":\"Identical to swapExactTokensForETH, but succeeds for tokens that take a fee on transfer.\"},\"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)\":{\"notice\":\"Swaps an exact amount of input tokens for as many output tokens as possible, along the route determined by the path. The first element of path is the input token, the last is the output token, and any intermediate elements represent intermediate pairs to trade through. msg.sender should have already given the router an allowance of at least amountIn on the input token.\"},\"swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)\":{\"notice\":\"Identical to swapExactTokensForTokens, but succeeds for tokens that take a fee on transfer. msg.sender should have already given the router an allowance of at least amountIn on the input token.\"},\"swapTokensForExactETH(uint256,uint256,address[],address,uint256)\":{\"notice\":\"Receive an exact amount of ETH for as few input tokens as possible, along the route determined by the path. The first element of path is the input token, the last must be WETH9. msg.sender should have already given the router an allowance of at least amountInMax on the input token.\"},\"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)\":{\"notice\":\"Receive an exact amount of output tokens for as few input tokens as possible, along the route determined by the path. msg.sender should have already given the router an allowance of at least amountInMax on the input token.\"},\"updateAaveAsset(bool,address)\":{\"notice\":\"Update internal Aave asset flag\"},\"updateAllAaveAssets()\":{\"notice\":\"Update all internal Aave assets\"}},\"notice\":\"Optimal MEV router contract (IUniswapV2Router compatible)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"OpenMevRouter.sol\":\"OpenMevRouter\"},\"debug\":{\"revertStrings\":\"strip\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":build/=/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"],\"viaIR\":true},\"sources\":{\"ERC20.sol\":{\"keccak256\":\"0x446f8ef0df6b2b354aebad57597d3cfb8f00d184a6b1a559e70ad2098fd0285a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://856d220962e1b24efc92b0c2ef31e87ab0b43838e90df5ca3042a08013115951\",\"dweb:/ipfs/QmWuLL8Vk7DDqNn17KZxLxrYsa8R5MdFtZyFw6pAcerDYg\"]},\"IBentoBox.sol\":{\"keccak256\":\"0xc66b95543ca43975eccd2d6949f3aa478ed478d31bdaad1e08f9ee80727a5216\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e525ec05b7e6c44d440b2190a83b7429550dad92b12095007a8c39cbf36ab64\",\"dweb:/ipfs/QmPZvpdZ7SxuHrH4x234hnNJJSiC65QSVdG4CvwdcmtVFT\"]},\"ILendingPool.sol\":{\"keccak256\":\"0x4f761a812088629d7c4b13f19fe5a2116dcc29deb316f81e145062abde9f4028\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://aca0ef971dcaa821745e1681db617783750202a308034b3c07fe4f9b55739702\",\"dweb:/ipfs/QmR1P5GzoEw1Xn1QMfNgPXo5qpkZJ9YdeM8tx5ce9LcArZ\"]},\"IOpenMevRouter.sol\":{\"keccak256\":\"0xa1bf6bb8a681a12a11c2b1e5801f38ed7c915ea6590a1b5845a15c844e79123c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://9e4548fac80db3c2b882bc1da6840451a7fb969a91764a4dfca0e5d350a04d43\",\"dweb:/ipfs/QmXg3HFh9bTT8XMTbpQDnaQazsbAu6ciZi8WfHEtmSvw4e\"]},\"IProtocolDataProvider.sol\":{\"keccak256\":\"0x9ea1fe06e046b96735fa9d15e85ea1d9507199729fec99aad6999f83d609308a\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://b89a3cfcd95f34d4796e30f4eef96ec6763c31ec59b1b3c0d011b4a595d24446\",\"dweb:/ipfs/QmT5UnPb9CgALqf24isnYcrKwgFP53dP4uiUpDEAp9jaGe\"]},\"IUniswapV2Factory.sol\":{\"keccak256\":\"0x58cc44883e51050422ac5c6deaa9fe818141c85154b2710f989349cb364edcc6\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://fd201f9078066b02b8b21d8c21e30a0f25a6b7b18050a83d75d9a4ee9bdae1f0\",\"dweb:/ipfs/QmYvT4bJSbRQfVt6A2p1PTEbEgtX9AKRD1mwRMAiNDRDYH\"]},\"IUniswapV2Pair.sol\":{\"keccak256\":\"0xeb4a2734a0f1e057bc45bd5831614e84159ea3e0bdeb74afa569378024bb0b14\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://fbf37e92eebb821f5643c8d780123f9a490d5676fa058d8b70df9be6761c99ac\",\"dweb:/ipfs/QmPNNgP29EQQuJPscNYcG7aerCyqxy4ZuyLRPXLfhYoGNH\"]},\"IWETH9.sol\":{\"keccak256\":\"0x31c2ad22149edc87750d4097eb6c5ce58daadc672fd48979ca66acf269bd3313\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4818bfab5b2feb2caecc0039d930a68384aa8592cedabfe9cfc4a86be7f04103\",\"dweb:/ipfs/QmeYqzU46rgyXBJokTqpFf18qmga55iSb5knnULNVV7Jq6\"]},\"OpenMevLibrary.sol\":{\"keccak256\":\"0x749491764afee344b22cfabea698eae250ec280c9602d09b65743486ee58e517\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4f0c3d11481e074ae3b1f00cef7ad14878eadca406c19047a95a53a633fc93a0\",\"dweb:/ipfs/Qmb7tgVKwGBEKQrCZ3YgcgKZRbt2Qy4heUcRD4hBHJcMgc\"]},\"OpenMevRouter.sol\":{\"keccak256\":\"0xf65de2e9ec0bcb81e5f9b05f1520700c66b760abca40045669dc0c0b1a6146af\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f1170c73b541278f5ba017657b2d82f84e73a31e1ca4379a3eaadfc6629042a9\",\"dweb:/ipfs/QmUsM3TY1uckvjmetAxxvKF4CkoyiPZk8rc4TxbNxFG6UJ\"]},\"SafeTransferLib.sol\":{\"keccak256\":\"0xbc990c11ceb0bf7b4cf3d1f944b453683f0852d0a62101b0e17de62f3e7e0636\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://80b2b747c84a0a7aca8d65035d5607c7eb8a2ce6014f9db638ba332449d0fd38\",\"dweb:/ipfs/QmUEky7184PbnEzemVYQC2vbPG55hLU8gPhzrmdeEQ1d8Q\"]},\"TwoStepOwnable.sol\":{\"keccak256\":\"0xd7c4131102437397ebf5f3df2ff3be0e6e7655c57b23785e6a269697c0639580\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://1b91f0106a49b111e7982c610bca628949c9583440cbb85f1c6d6a26bddaaa0a\",\"dweb:/ipfs/QmWHYNHpoaGezsuZk7rMHCvD7MKjMFVvX5wRwAn7WMmPYP\"]},\"Uint512.sol\":{\"keccak256\":\"0xb2c8b8b27f407ba0edcaec23931aa3102a9a62104026b6b45d8e494c285cb3cf\",\"license\":\"GPLv3\",\"urls\":[\"bzz-raw://6d4ae175e170ad914e198baacb864483be641ad9c91e87a171d58d7d592c9fe4\",\"dweb:/ipfs/QmeR329Jc8HAVGVohA9hvGqEuuY7fM2fhxV9jbADYRfa23\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ExcessiveInputAmount"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ExecuteNotAuthorized"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Expired"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IdenticalAddresses"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InsufficientAAmount"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InsufficientAllowance"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InsufficientBAmount"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InsufficientLiquidity"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InsufficientLiquidity"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InsufficientOutputAmount"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidPath"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidPath"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NoReceivers"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NoTokens"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotPercent"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Overflow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TokenIsFeeOnTransfer"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Unauthorized"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZeroAmount"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LoanError",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MEV",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenA",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenB",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountADesired",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountBDesired",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountAMin",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountBMin",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addLiquidity",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountA",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountB",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "liquidity",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountTokenDesired",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountTokenMin",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountETHMin",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "addLiquidityETH",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountToken",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountETH",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "liquidity",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "cancelOwnershipTransfer"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "assets",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "premiums",
              "type": "uint256[]"
            },
            {
              "internalType": "address",
              "name": "initiator",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "params",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "executeOperation",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "reserveIn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "reserveOut",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getAmountIn",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "reserveIn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "reserveOut",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getAmountOut",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "path",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAmountsIn",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "path",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAmountsOut",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "percentage",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "address[]",
              "name": "receivers",
              "type": "address[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "harvest"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isOwner",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onFlashLoan"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountA",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "reserveA",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "reserveB",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "quote",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountB",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenA",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenB",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "liquidity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountAMin",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountBMin",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeLiquidity",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountA",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountB",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "liquidity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountTokenMin",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountETHMin",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeLiquidityETH",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountToken",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountETH",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "liquidity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountTokenMin",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountETHMin",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeLiquidityETHSupportingFeeOnTransferTokens",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountETH",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "liquidity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountTokenMin",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountETHMin",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "approveMax",
              "type": "bool"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeLiquidityETHWithPermit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountToken",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountETH",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "liquidity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountTokenMin",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountETHMin",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "approveMax",
              "type": "bool"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountETH",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenA",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenB",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "liquidity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountAMin",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountBMin",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "approveMax",
              "type": "bool"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeLiquidityWithPermit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountA",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountB",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "path",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "swapETHForExactTokens",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountOutMin",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "path",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "swapExactETHForTokens",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountOutMin",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "path",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "swapExactETHForTokensSupportingFeeOnTransferTokens"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountOutMin",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "path",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "swapExactTokensForETH",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountOutMin",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "path",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "swapExactTokensForETHSupportingFeeOnTransferTokens"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountOutMin",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "path",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "swapExactTokensForTokens",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountOutMin",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "path",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "swapExactTokensForTokensSupportingFeeOnTransferTokens"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountInMax",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "path",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "swapTokensForExactETH",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountInMax",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "path",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "swapTokensForExactTokens",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "asset",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "updateAaveAsset"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "updateAllAaveAssets"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "acceptOwnership()": {
            "details": "Transfers ownership of the contract to the caller. Can only be called by a new potential owner set by the current owner."
          },
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": {
            "params": {
              "amountADesired": "Amount of token A desired to add to pool",
              "amountAMin": "Minimum amount of token A, can be 0",
              "amountBDesired": "Amount of token B desired to add to pool",
              "amountBMin": "Minimum amount of token B, can be 0",
              "deadline": "Unix timestamp in seconds after which the transaction will revert",
              "to": "Address to receive liquidity token",
              "tokenA": "Token in pool",
              "tokenB": "Token in pool"
            },
            "returns": {
              "amountA": "exact amount of token A added to pool",
              "amountB": "exact amount of token B added to pool",
              "liquidity": "amount of liquidity token received"
            }
          },
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": {
            "params": {
              "amountETHMin": "Minimum amount of ETH, can be 0",
              "amountTokenDesired": "Amount of token desired to add to pool",
              "amountTokenMin": "Minimum amount of token, can be 0",
              "deadline": "Unix timestamp in seconds after which the transaction will revert",
              "to": "Address to receive liquidity token",
              "token": "Token in pool"
            },
            "returns": {
              "amountETH": "exact amount of ETH added to pool",
              "amountToken": "exact amount of token added to pool",
              "liquidity": "amount of liquidity token received"
            }
          },
          "cancelOwnershipTransfer()": {
            "details": "Cancel a transfer of ownership to a new account. Can only be called by the current owner."
          },
          "constructor": {
            "details": "Initialize contract by setting aave assets"
          },
          "executeOperation(address[],uint256[],uint256[],address,bytes)": {
            "details": "Reverts if not profitable.",
            "params": {
              "amounts": "Array of amounts to loan",
              "assets": "Array of tokens to loan",
              "initiator": "Address of flashloan initiator",
              "params": "Encoded factories and tokens",
              "premiums": "Array of premiums to repay on loan amounts"
            },
            "returns": {
              "_0": "success indicating success"
            }
          },
          "harvest(uint256,address[],address[])": {
            "params": {
              "percentage": "Percentage of balance to distribute",
              "receivers": "Array of addresses for receiving distribution",
              "tokens": "Array of token addresses to distribute"
            }
          },
          "isOwner()": {
            "details": "Returns true if the caller is the current owner."
          },
          "onFlashLoan(address,address,uint256,uint256,bytes)": {
            "details": "Reverts if not profitable.",
            "params": {
              "amount": "Amount to loan",
              "data": "Encoded factories and tokens",
              "fee": "Fee to repay on loan amount",
              "sender": "Address of flashloan initiator",
              "token": "Token to loan"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": {
            "params": {
              "amountAMin": "Minimum amount of token A, can be 0",
              "amountBMin": "Minimum amount of token B, can be 0",
              "deadline": "Unix timestamp in seconds after which the transaction will revert",
              "liquidity": "Amount of liquidity tokens to remove",
              "to": "Address to receive pool tokens",
              "tokenA": "Token in pool",
              "tokenB": "Token in pool"
            },
            "returns": {
              "amountA": "Amount of token A received",
              "amountB": "Amount of token B received"
            }
          },
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": {
            "params": {
              "amountETHMin": "Minimum amount of ETH, can be 0",
              "amountTokenMin": "Minimum amount of token, can be 0",
              "deadline": "Unix timestamp in seconds after which the transaction will revert",
              "liquidity": "Amount of liquidity tokens to remove",
              "to": "Address to receive pool tokens",
              "token": "Token in pool"
            },
            "returns": {
              "amountETH": "Amount of ETH received",
              "amountToken": "Amount of token received"
            }
          },
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)": {
            "params": {
              "amountETHMin": "Minimum amount of ETH, can be 0",
              "amountTokenMin": "Minimum amount of token, can be 0",
              "deadline": "Unix timestamp in seconds after which the transaction will revert",
              "liquidity": "Amount of liquidity tokens to remove",
              "to": "Address to receive pool tokens",
              "token": "Token in pool"
            },
            "returns": {
              "amountETH": "Amount of ETH received"
            }
          },
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": {
            "params": {
              "amountETHMin": "Minimum amount of ETH, can be 0",
              "amountTokenMin": "Minimum amount of token, can be 0",
              "approveMax": "Whether or not the approval amount in the signature is for liquidity or uint(-1)",
              "deadline": "Unix timestamp in seconds after which the transaction will revert",
              "liquidity": "Amount of liquidity tokens to remove",
              "r": "The r component of the permit signature",
              "s": "The s component of the permit signature",
              "to": "Address to receive pool tokens",
              "token": "Token in pool",
              "v": "The v component of the permit signature"
            },
            "returns": {
              "amountETH": "Amount of ETH received",
              "amountToken": "Amount of token received"
            }
          },
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": {
            "params": {
              "amountETHMin": "Minimum amount of ETH, can be 0",
              "amountTokenMin": "Minimum amount of token, can be 0",
              "approveMax": "Whether or not the approval amount in the signature is for liquidity or uint(-1)",
              "deadline": "Unix timestamp in seconds after which the transaction will revert",
              "liquidity": "Amount of liquidity tokens to remove",
              "r": "The r component of the permit signature",
              "s": "The s component of the permit signature",
              "to": "Address to receive pool tokens",
              "token": "Token in pool",
              "v": "The v component of the permit signature"
            },
            "returns": {
              "amountETH": "Amount of ETH received"
            }
          },
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": {
            "params": {
              "amountAMin": "Minimum amount of token A, can be 0",
              "amountBMin": "Minimum amount of token B, can be 0",
              "approveMax": "Whether or not the approval amount in the signature is for liquidity or uint(-1)",
              "deadline": "Unix timestamp in seconds after which the transaction will revert",
              "liquidity": "Amount of liquidity tokens to remove",
              "r": "The r component of the permit signature",
              "s": "The s component of the permit signature",
              "to": "Address to receive pool tokens",
              "tokenA": "Token in pool",
              "tokenB": "Token in pool",
              "v": "The v component of the permit signature"
            },
            "returns": {
              "amountA": "Amount of token A received",
              "amountB": "Amount of token B received"
            }
          },
          "swapETHForExactTokens(uint256,address[],address,uint256)": {
            "details": "Require has been replaced with revert for gas optimization. Fallback alternate router check for insufficient output amount. Attempt to back-run swaps.",
            "params": {
              "amountOut": "Amount of output tokens that must be received",
              "deadline": "Unix timestamp in seconds after which the transaction will revert",
              "path": "Array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity",
              "to": "Address of receiver"
            },
            "returns": {
              "amounts": "Array of input token amount and all subsequent output token amounts"
            }
          },
          "swapExactETHForTokens(uint256,address[],address,uint256)": {
            "details": "Require has been replaced with revert for gas optimization. Fallback alternate router check for insufficient output amount. Attempt to back-run swaps.",
            "params": {
              "amountOutMin": "Minimum amount of output tokens that must be received",
              "deadline": "Unix timestamp in seconds after which the transaction will revert",
              "path": "Array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity",
              "to": "Address of receiver"
            },
            "returns": {
              "amounts": "Array of input token amount and all subsequent output token amounts"
            }
          },
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)": {
            "details": "Require has been replaced with revert for gas optimization. Attempt to back-run swaps.",
            "params": {
              "amountOutMin": "Minimum amount of output tokens that must be received",
              "deadline": "Unix timestamp in seconds after which the transaction will revert",
              "path": "Array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity",
              "to": "Address of receiver"
            }
          },
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)": {
            "details": "Require has been replaced with revert for gas optimization. Fallback alternate router check for insufficient output amount. Attempt to back-run swaps.",
            "params": {
              "amountIn": "Amount of input tokens to send.",
              "amountOutMin": "Minimum amount of ETH that must be received",
              "deadline": "Unix timestamp in seconds after which the transaction will revert",
              "path": "Array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity",
              "to": "Address of receiver"
            },
            "returns": {
              "amounts": "Array of input token amount and all subsequent output token amounts"
            }
          },
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": {
            "details": "Require has been replaced with revert for gas optimization. Attempt to back-run swaps.",
            "params": {
              "amountIn": "Amount of input tokens to send.",
              "amountOutMin": "Minimum amount of ETH that must be received",
              "deadline": "Unix timestamp in seconds after which the transaction will revert",
              "path": "Array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity",
              "to": "Address of receiver"
            }
          },
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": {
            "details": "Require has been replaced with revert for gas optimization. Fallback alternate router check for insufficient output amount. Attempt to back-run swaps.",
            "params": {
              "amountIn": "Amount of input tokens to send.",
              "amountOutMin": "Minimum amount of output tokens that must be received",
              "deadline": "Unix timestamp in seconds after which the transaction will revert",
              "path": "Array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity",
              "to": "Address of receiver"
            },
            "returns": {
              "amounts": "Array of input token amount and all subsequent output token amounts"
            }
          },
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": {
            "details": "Require has been replaced with revert for gas optimization. Attempt to back-run swaps.",
            "params": {
              "amountIn": "Amount of input tokens to send.",
              "amountOutMin": "Minimum amount of output tokens that must be received",
              "deadline": "Unix timestamp in seconds after which the transaction will revert",
              "path": "Array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity",
              "to": "Address of receiver"
            }
          },
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)": {
            "details": "Require has been replaced with revert for gas optimization. Fallback alternate router check for insufficient output amount. Attempt to back-run swaps.",
            "params": {
              "amountInMax": "Maximum amount of input tokens",
              "amountOut": "Amount of ETH to receive",
              "deadline": "Unix timestamp in seconds after which the transaction will revert",
              "path": "Array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity",
              "to": "Address of receiver"
            },
            "returns": {
              "amounts": "Array of input token amount and all subsequent output token amounts"
            }
          },
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": {
            "details": "Require has been replaced with revert for gas optimization. Fallback alternate router check for insufficient output amount. Attempt to back-run swaps.",
            "params": {
              "amountInMax": "Maximum amount of input tokens",
              "amountOut": "Amount of output tokens to receive",
              "deadline": "Unix timestamp in seconds after which the transaction will revert",
              "path": "Array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity",
              "to": "Address of receiver"
            },
            "returns": {
              "amounts": "Array of input token amount and all subsequent output token amounts"
            }
          },
          "transferOwnership(address)": {
            "details": "Allows a new account (`newOwner`) to accept ownership. Can only be called by the current owner."
          },
          "updateAaveAsset(bool,address)": {
            "params": {
              "asset": "Address of asset",
              "isActive": "Boolean flagging whether to use the asset for Aave flashloans"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": {
            "notice": "Adds liquidity to an ERC-20⇄ERC-20 pool. msg.sender should have already given the router an allowance of at least amountADesired/amountBDesired on tokenA/tokenB"
          },
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": {
            "notice": "Adds liquidity to an ERC-20⇄WETH pool with ETH. msg.sender should have already given the router an allowance of at least amountTokenDesired on token. msg.value is treated as a amountETHDesired. Leftover ETH, if any, is returned to msg.sender"
          },
          "executeOperation(address[],uint256[],uint256[],address,bytes)": {
            "notice": "Called from Aave Lending pool after contract has received the flash loaned amount (https://docs.aave.com/developers/v/2.0/guides/flash-loans)"
          },
          "harvest(uint256,address[],address[])": {
            "notice": "Multi-sig consensus call to distribute a given percentage of specified tokens to specified receivers."
          },
          "onFlashLoan(address,address,uint256,uint256,bytes)": {
            "notice": "Called from BentoBox Lending pool after contract has received the flash loaned amount"
          },
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": {
            "notice": "Removes liquidity from an ERC-20⇄ERC-20 pool. msg.sender should have already given the router an allowance of at least liquidity on the pool."
          },
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": {
            "notice": "Removes liquidity from an ERC-20⇄WETH pool and receive ETH. msg.sender should have already given the router an allowance of at least liquidity on the pool."
          },
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)": {
            "notice": "Identical to removeLiquidityETH, but succeeds for tokens that take a fee on transfer. msg.sender should have already given the router an allowance of at least liquidity on the pool."
          },
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": {
            "notice": "Removes liquidity from an ERC-20⇄WETTH pool and receive ETH without pre-approval, thanks to permit"
          },
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": {
            "notice": "Identical to removeLiquidityETHWithPermit, but succeeds for tokens that take a fee on transfer."
          },
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": {
            "notice": "Removes liquidity from an ERC-20⇄ERC-20 pool without pre-approval, thanks to permit."
          },
          "swapETHForExactTokens(uint256,address[],address,uint256)": {
            "notice": "Receive an exact amount of tokens for as little ETH as possible, along the route determined by the path. The first element of path must be WETH9. Leftover ETH, if any, is returned to msg.sender. amountInMax = msg.value"
          },
          "swapExactETHForTokens(uint256,address[],address,uint256)": {
            "notice": "Swaps an exact amount of ETH for as many output tokens as possible, along the route determined by the path. The first element of path must be WETH9, the last is the output token. amountIn = msg.value"
          },
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)": {
            "notice": "Identical to swapExactETHForTokens, but succeeds for tokens that take a fee on transfer. amountIn = msg.value"
          },
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)": {
            "notice": "Swaps an exact amount of tokens for as much ETH as possible, along the route determined by the path. The first element of path is the input token, the last must be WETH9."
          },
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": {
            "notice": "Identical to swapExactTokensForETH, but succeeds for tokens that take a fee on transfer."
          },
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": {
            "notice": "Swaps an exact amount of input tokens for as many output tokens as possible, along the route determined by the path. The first element of path is the input token, the last is the output token, and any intermediate elements represent intermediate pairs to trade through. msg.sender should have already given the router an allowance of at least amountIn on the input token."
          },
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": {
            "notice": "Identical to swapExactTokensForTokens, but succeeds for tokens that take a fee on transfer. msg.sender should have already given the router an allowance of at least amountIn on the input token."
          },
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)": {
            "notice": "Receive an exact amount of ETH for as few input tokens as possible, along the route determined by the path. The first element of path is the input token, the last must be WETH9. msg.sender should have already given the router an allowance of at least amountInMax on the input token."
          },
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": {
            "notice": "Receive an exact amount of output tokens for as few input tokens as possible, along the route determined by the path. msg.sender should have already given the router an allowance of at least amountInMax on the input token."
          },
          "updateAaveAsset(bool,address)": {
            "notice": "Update internal Aave asset flag"
          },
          "updateAllAaveAssets()": {
            "notice": "Update all internal Aave assets"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@uniswap/=node_modules/@uniswap/",
        ":build/=/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "OpenMevRouter.sol": "OpenMevRouter"
      },
      "libraries": {}
    },
    "sources": {
      "ERC20.sol": {
        "keccak256": "0x446f8ef0df6b2b354aebad57597d3cfb8f00d184a6b1a559e70ad2098fd0285a",
        "urls": [
          "bzz-raw://856d220962e1b24efc92b0c2ef31e87ab0b43838e90df5ca3042a08013115951",
          "dweb:/ipfs/QmWuLL8Vk7DDqNn17KZxLxrYsa8R5MdFtZyFw6pAcerDYg"
        ],
        "license": "MIT"
      },
      "IBentoBox.sol": {
        "keccak256": "0xc66b95543ca43975eccd2d6949f3aa478ed478d31bdaad1e08f9ee80727a5216",
        "urls": [
          "bzz-raw://9e525ec05b7e6c44d440b2190a83b7429550dad92b12095007a8c39cbf36ab64",
          "dweb:/ipfs/QmPZvpdZ7SxuHrH4x234hnNJJSiC65QSVdG4CvwdcmtVFT"
        ],
        "license": "MIT"
      },
      "ILendingPool.sol": {
        "keccak256": "0x4f761a812088629d7c4b13f19fe5a2116dcc29deb316f81e145062abde9f4028",
        "urls": [
          "bzz-raw://aca0ef971dcaa821745e1681db617783750202a308034b3c07fe4f9b55739702",
          "dweb:/ipfs/QmR1P5GzoEw1Xn1QMfNgPXo5qpkZJ9YdeM8tx5ce9LcArZ"
        ],
        "license": "agpl-3.0"
      },
      "IOpenMevRouter.sol": {
        "keccak256": "0xa1bf6bb8a681a12a11c2b1e5801f38ed7c915ea6590a1b5845a15c844e79123c",
        "urls": [
          "bzz-raw://9e4548fac80db3c2b882bc1da6840451a7fb969a91764a4dfca0e5d350a04d43",
          "dweb:/ipfs/QmXg3HFh9bTT8XMTbpQDnaQazsbAu6ciZi8WfHEtmSvw4e"
        ],
        "license": "UNLICENSED"
      },
      "IProtocolDataProvider.sol": {
        "keccak256": "0x9ea1fe06e046b96735fa9d15e85ea1d9507199729fec99aad6999f83d609308a",
        "urls": [
          "bzz-raw://b89a3cfcd95f34d4796e30f4eef96ec6763c31ec59b1b3c0d011b4a595d24446",
          "dweb:/ipfs/QmT5UnPb9CgALqf24isnYcrKwgFP53dP4uiUpDEAp9jaGe"
        ],
        "license": "agpl-3.0"
      },
      "IUniswapV2Factory.sol": {
        "keccak256": "0x58cc44883e51050422ac5c6deaa9fe818141c85154b2710f989349cb364edcc6",
        "urls": [
          "bzz-raw://fd201f9078066b02b8b21d8c21e30a0f25a6b7b18050a83d75d9a4ee9bdae1f0",
          "dweb:/ipfs/QmYvT4bJSbRQfVt6A2p1PTEbEgtX9AKRD1mwRMAiNDRDYH"
        ],
        "license": "UNLICENSED"
      },
      "IUniswapV2Pair.sol": {
        "keccak256": "0xeb4a2734a0f1e057bc45bd5831614e84159ea3e0bdeb74afa569378024bb0b14",
        "urls": [
          "bzz-raw://fbf37e92eebb821f5643c8d780123f9a490d5676fa058d8b70df9be6761c99ac",
          "dweb:/ipfs/QmPNNgP29EQQuJPscNYcG7aerCyqxy4ZuyLRPXLfhYoGNH"
        ],
        "license": "UNLICENSED"
      },
      "IWETH9.sol": {
        "keccak256": "0x31c2ad22149edc87750d4097eb6c5ce58daadc672fd48979ca66acf269bd3313",
        "urls": [
          "bzz-raw://4818bfab5b2feb2caecc0039d930a68384aa8592cedabfe9cfc4a86be7f04103",
          "dweb:/ipfs/QmeYqzU46rgyXBJokTqpFf18qmga55iSb5knnULNVV7Jq6"
        ],
        "license": "UNLICENSED"
      },
      "OpenMevLibrary.sol": {
        "keccak256": "0x749491764afee344b22cfabea698eae250ec280c9602d09b65743486ee58e517",
        "urls": [
          "bzz-raw://4f0c3d11481e074ae3b1f00cef7ad14878eadca406c19047a95a53a633fc93a0",
          "dweb:/ipfs/Qmb7tgVKwGBEKQrCZ3YgcgKZRbt2Qy4heUcRD4hBHJcMgc"
        ],
        "license": "UNLICENSED"
      },
      "OpenMevRouter.sol": {
        "keccak256": "0xf65de2e9ec0bcb81e5f9b05f1520700c66b760abca40045669dc0c0b1a6146af",
        "urls": [
          "bzz-raw://f1170c73b541278f5ba017657b2d82f84e73a31e1ca4379a3eaadfc6629042a9",
          "dweb:/ipfs/QmUsM3TY1uckvjmetAxxvKF4CkoyiPZk8rc4TxbNxFG6UJ"
        ],
        "license": "UNLICENSED"
      },
      "SafeTransferLib.sol": {
        "keccak256": "0xbc990c11ceb0bf7b4cf3d1f944b453683f0852d0a62101b0e17de62f3e7e0636",
        "urls": [
          "bzz-raw://80b2b747c84a0a7aca8d65035d5607c7eb8a2ce6014f9db638ba332449d0fd38",
          "dweb:/ipfs/QmUEky7184PbnEzemVYQC2vbPG55hLU8gPhzrmdeEQ1d8Q"
        ],
        "license": "AGPL-3.0-only"
      },
      "TwoStepOwnable.sol": {
        "keccak256": "0xd7c4131102437397ebf5f3df2ff3be0e6e7655c57b23785e6a269697c0639580",
        "urls": [
          "bzz-raw://1b91f0106a49b111e7982c610bca628949c9583440cbb85f1c6d6a26bddaaa0a",
          "dweb:/ipfs/QmWHYNHpoaGezsuZk7rMHCvD7MKjMFVvX5wRwAn7WMmPYP"
        ],
        "license": "UNLICENSED"
      },
      "Uint512.sol": {
        "keccak256": "0xb2c8b8b27f407ba0edcaec23931aa3102a9a62104026b6b45d8e494c285cb3cf",
        "urls": [
          "bzz-raw://6d4ae175e170ad914e198baacb864483be641ad9c91e87a171d58d7d592c9fe4",
          "dweb:/ipfs/QmeR329Jc8HAVGVohA9hvGqEuuY7fM2fhxV9jbADYRfa23"
        ],
        "license": "GPLv3"
      }
    },
    "version": 1
  },
  "irOptimized": "/// @use-src 3:\"IBentoBox.sol\", 6:\"IOpenMevRouter.sol\", 13:\"OpenMevRouter.sol\", 16:\"TwoStepOwnable.sol\"\nobject \"OpenMevRouter_6710\" {\n    code {\n        {\n            /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n            let _1 := memoryguard(0x80)\n            let _2 := 64\n            mstore(_2, _1)\n            if callvalue() { revert(0, 0) }\n            /// @src 16:966:984  \"_owner = tx.origin\"\n            let _3 := 0x00\n            /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n            sstore(/** @src 16:966:984  \"_owner = tx.origin\" */ _3, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ or(and(sload(/** @src 16:966:984  \"_owner = tx.origin\" */ _3), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ not(sub(shl(160, 1), 1))), /** @src 16:975:984  \"tx.origin\" */ origin()))\n            /// @src 16:999:1039  \"OwnershipTransferred(address(0), _owner)\"\n            log3(_1, /** @src 16:966:984  \"_owner = tx.origin\" */ _3, /** @src 16:999:1039  \"OwnershipTransferred(address(0), _owner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 16:966:984  \"_owner = tx.origin\" */ _3, /** @src 16:975:984  \"tx.origin\" */ origin())\n            /// @src 13:2249:2301  \"ILendingPool(LENDING_POOL_ADDRESS).getReservesList()\"\n            mstore(_1, /** @src 13:1641:1683  \"0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9\" */ shl(226, 0x34651b6f))\n            /// @src 13:2249:2301  \"ILendingPool(LENDING_POOL_ADDRESS).getReservesList()\"\n            let _4 := 4\n            let _5 := staticcall(gas(), /** @src 13:1641:1683  \"0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9\" */ 0x7d2768de32b0b80b7a3454c06bdac94a69ddc7a9, /** @src 13:2249:2301  \"ILendingPool(LENDING_POOL_ADDRESS).getReservesList()\" */ _1, _4, _1, /** @src 16:966:984  \"_owner = tx.origin\" */ _3)\n            /// @src 13:2249:2301  \"ILendingPool(LENDING_POOL_ADDRESS).getReservesList()\"\n            if iszero(_5)\n            {\n                /// @src 13:1641:1683  \"0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9\"\n                let pos := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(_2)\n                /// @src 13:1641:1683  \"0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9\"\n                returndatacopy(pos, /** @src 16:966:984  \"_owner = tx.origin\" */ _3, /** @src 13:1641:1683  \"0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9\" */ returndatasize())\n                revert(pos, returndatasize())\n            }\n            /// @src 13:2249:2301  \"ILendingPool(LENDING_POOL_ADDRESS).getReservesList()\"\n            let expr_mpos := /** @src 16:966:984  \"_owner = tx.origin\" */ _3\n            /// @src 13:2249:2301  \"ILendingPool(LENDING_POOL_ADDRESS).getReservesList()\"\n            if _5\n            {\n                let _6 := returndatasize()\n                returndatacopy(_1, /** @src 16:966:984  \"_owner = tx.origin\" */ _3, /** @src 13:2249:2301  \"ILendingPool(LENDING_POOL_ADDRESS).getReservesList()\" */ _6)\n                finalize_allocation(_1, _6)\n                let _7 := add(_1, _6)\n                /// @src 13:1641:1683  \"0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9\"\n                let _8 := 32\n                if slt(sub(_7, _1), _8)\n                {\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    revert(/** @src 16:966:984  \"_owner = tx.origin\" */ _3, _3)\n                }\n                /// @src 13:1641:1683  \"0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9\"\n                let offset := mload(_1)\n                let _9 := sub(shl(64, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 1), 1)\n                /// @src 13:1641:1683  \"0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9\"\n                if gt(offset, _9)\n                {\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    revert(/** @src 16:966:984  \"_owner = tx.origin\" */ _3, _3)\n                }\n                /// @src 13:1641:1683  \"0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9\"\n                let _10 := add(_1, offset)\n                if iszero(slt(add(_10, 0x1f), _7))\n                {\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    revert(/** @src 16:966:984  \"_owner = tx.origin\" */ _3, _3)\n                }\n                /// @src 13:1641:1683  \"0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9\"\n                let _11 := mload(_10)\n                if gt(_11, _9)\n                {\n                    mstore(/** @src 16:966:984  \"_owner = tx.origin\" */ _3, /** @src 13:1641:1683  \"0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9\" */ shl(224, 0x4e487b71))\n                    mstore(/** @src 13:2249:2301  \"ILendingPool(LENDING_POOL_ADDRESS).getReservesList()\" */ _4, /** @src 13:1641:1683  \"0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9\" */ 0x41)\n                    revert(/** @src 16:966:984  \"_owner = tx.origin\" */ _3, /** @src 13:1641:1683  \"0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9\" */ 0x24)\n                }\n                let _12 := shl(5, _11)\n                let memPtr := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(_2)\n                /// @src 13:1641:1683  \"0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9\"\n                finalize_allocation(memPtr, add(_12, _8))\n                let dst := memPtr\n                mstore(memPtr, _11)\n                dst := add(memPtr, _8)\n                let srcEnd := add(add(_10, _12), _8)\n                if gt(srcEnd, _7)\n                {\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    revert(/** @src 16:966:984  \"_owner = tx.origin\" */ _3, _3)\n                }\n                /// @src 13:1641:1683  \"0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9\"\n                let src := add(_10, _8)\n                for { } lt(src, srcEnd) { src := add(src, _8) }\n                {\n                    let value := mload(src)\n                    if iszero(eq(value, and(value, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ sub(shl(160, 1), 1))))\n                    /// @src 13:1641:1683  \"0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9\"\n                    {\n                        revert(/** @src 16:966:984  \"_owner = tx.origin\" */ _3, _3)\n                    }\n                    /// @src 13:1641:1683  \"0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9\"\n                    mstore(dst, value)\n                    dst := add(dst, _8)\n                }\n                /// @src 13:2249:2301  \"ILendingPool(LENDING_POOL_ADDRESS).getReservesList()\"\n                expr_mpos := memPtr\n            }\n            /// @src 13:2328:2345  \"aaveAssets.length\"\n            let expr := /** @src 13:1641:1683  \"0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9\" */ mload(/** @src 13:2328:2345  \"aaveAssets.length\" */ expr_mpos)\n            /// @src 13:2360:2369  \"uint256 i\"\n            let var_i := /** @src 16:966:984  \"_owner = tx.origin\" */ _3\n            /// @src 13:2355:2491  \"for (uint256 i; i < length; i = _inc(i)) {...\"\n            for { }\n            /** @src 13:2371:2381  \"i < length\" */ lt(var_i, expr)\n            /// @src 13:2360:2369  \"uint256 i\"\n            {\n                /// @src 13:2383:2394  \"i = _inc(i)\"\n                var_i := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ add(var_i, /** @src 13:54482:54483  \"1\" */ 0x01)\n            }\n            /// @src 13:2383:2394  \"i = _inc(i)\"\n            {\n                /// @src 13:1641:1683  \"0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9\"\n                if iszero(lt(var_i, mload(expr_mpos)))\n                {\n                    mstore(/** @src 16:966:984  \"_owner = tx.origin\" */ _3, /** @src 13:1641:1683  \"0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9\" */ shl(224, 0x4e487b71))\n                    mstore(/** @src 13:2249:2301  \"ILendingPool(LENDING_POOL_ADDRESS).getReservesList()\" */ _4, /** @src 13:1641:1683  \"0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9\" */ 0x32)\n                    revert(/** @src 16:966:984  \"_owner = tx.origin\" */ _3, /** @src 13:1641:1683  \"0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9\" */ 0x24)\n                }\n                let _13 := 32\n                mstore(/** @src 16:966:984  \"_owner = tx.origin\" */ _3, /** @src 13:1641:1683  \"0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9\" */ and(mload(add(add(expr_mpos, shl(5, var_i)), _13)), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ sub(shl(160, 1), 1)))\n                /// @src 13:1641:1683  \"0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9\"\n                mstore(_13, /** @src 13:2453:2466  \"IS_AAVE_ASSET\" */ 0x02)\n                /// @src 13:1641:1683  \"0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9\"\n                let dataSlot := keccak256(/** @src 16:966:984  \"_owner = tx.origin\" */ _3, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _2)\n                /// @src 13:1641:1683  \"0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9\"\n                sstore(dataSlot, or(and(sload(dataSlot), not(255)), /** @src 13:54482:54483  \"1\" */ 0x01))\n            }\n            /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n            let _14 := mload(_2)\n            let _15 := datasize(\"OpenMevRouter_6710_deployed\")\n            codecopy(_14, dataoffset(\"OpenMevRouter_6710_deployed\"), _15)\n            return(_14, _15)\n        }\n        /// @src 13:1641:1683  \"0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9\"\n        function finalize_allocation(memPtr, size)\n        {\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 1), 1)), /** @src 13:1641:1683  \"0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9\" */ lt(newFreePtr, memPtr))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            mstore(64, newFreePtr)\n        }\n    }\n    /// @use-src 12:\"OpenMevLibrary.sol\", 13:\"OpenMevRouter.sol\", 15:\"SafeTransferLib.sol\", 16:\"TwoStepOwnable.sol\", 17:\"Uint512.sol\"\n    object \"OpenMevRouter_6710_deployed\" {\n        code {\n            {\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                mstore(64, 128)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x02751cec {\n                        external_fun_removeLiquidityETH()\n                    }\n                    case 0x054d50d4 { external_fun_getAmountOut() }\n                    case 0x18cbafe5 {\n                        external_fun_swapExactTokensForETH()\n                    }\n                    case 0x1f00ca74 { external_fun_getAmountsIn() }\n                    case 0x2195995c {\n                        external_fun_removeLiquidityWithPermit()\n                    }\n                    case 0x23452b9c {\n                        external_fun_cancelOwnershipTransfer()\n                    }\n                    case 0x23e30c8b { external_fun_onFlashLoan() }\n                    case 0x31e63459 {\n                        external_fun_updateAllAaveAssets()\n                    }\n                    case 0x38ed1739 {\n                        external_fun_swapExactTokensForTokens()\n                    }\n                    case 0x4a25d94a {\n                        external_fun_swapTokensForExactETH()\n                    }\n                    case 0x5b0d5984 {\n                        external_fun_removeLiquidityETHWithPermitSupportingFeeOnTransferTokens()\n                    }\n                    case 0x5c11d795 {\n                        external_fun_swapExactTokensForTokensSupportingFeeOnTransferTokens()\n                    }\n                    case 0x791ac947 {\n                        external_fun_swapExactTokensForETHSupportingFeeOnTransferTokens()\n                    }\n                    case 0x79ba5097 {\n                        external_fun_acceptOwnership()\n                    }\n                    case 0x7ff36ab5 {\n                        external_fun_swapExactETHForTokens()\n                    }\n                    case 0x85f8c259 { external_fun_getAmountIn() }\n                    case 0x8803dbee {\n                        external_fun_swapTokensForExactTokens()\n                    }\n                    case 0x8da5cb5b { external_fun_owner() }\n                    case 0x8f32d59b { external_fun_isOwner() }\n                    case 0x920f5c84 {\n                        external_fun_executeOperation()\n                    }\n                    case 0xad615dec { external_fun_quote() }\n                    case 0xaf2979eb {\n                        external_fun_removeLiquidityETHSupportingFeeOnTransferTokens()\n                    }\n                    case 0xb4b0ce68 { external_fun_harvest() }\n                    case 0xb6f9de95 {\n                        external_fun_swapExactETHForTokensSupportingFeeOnTransferTokens()\n                    }\n                    case 0xbaa2abde {\n                        external_fun_removeLiquidity()\n                    }\n                    case 0xd06ca61f { external_fun_getAmountsOut() }\n                    case 0xdc1efb41 {\n                        external_fun_updateAaveAsset()\n                    }\n                    case 0xded9382a {\n                        external_fun_removeLiquidityETHWithPermit()\n                    }\n                    case 0xe8e33700 { external_fun_addLiquidity() }\n                    case 0xf2fde38b {\n                        external_fun_transferOwnership()\n                    }\n                    case 0xf305d719 {\n                        external_fun_addLiquidityETH()\n                    }\n                    case 0xfb3bdb41 {\n                        external_fun_swapETHForExactTokens()\n                    }\n                }\n                if iszero(calldatasize()) { stop() }\n                stop()\n            }\n            function cleanup_address(value) -> cleaned\n            {\n                cleaned := and(value, sub(shl(160, 1), 1))\n            }\n            function validator_revert_address(value)\n            {\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_addresst_uint256t_uint256t_uint256t_addresst_uint256(dataEnd) -> value0, value1, value2, value3, value4, value5\n            {\n                if slt(add(dataEnd, not(3)), 192) { revert(0, 0) }\n                let value := calldataload(4)\n                validator_revert_address(value)\n                value0 := value\n                value1 := calldataload(36)\n                value2 := calldataload(68)\n                value3 := calldataload(100)\n                let value_1 := calldataload(132)\n                validator_revert_address(value_1)\n                value4 := value_1\n                value5 := calldataload(164)\n            }\n            function abi_encode_uint256_uint256(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), value1)\n            }\n            function external_fun_removeLiquidityETH()\n            {\n                if callvalue() { revert(0, 0) }\n                let param, param_1, param_2, param_3, param_4, param_5 := abi_decode_addresst_uint256t_uint256t_uint256t_addresst_uint256(calldatasize())\n                let ret, ret_1 := fun_removeLiquidityETH(param, param_1, param_2, param_3, param_4, param_5)\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_uint256_uint256(memPos, ret, ret_1), memPos))\n            }\n            function abi_decode_uint256t_uint256t_uint256(dataEnd) -> value0, value1, value2\n            {\n                if slt(add(dataEnd, not(3)), 96) { revert(0, 0) }\n                value0 := calldataload(4)\n                value1 := calldataload(36)\n                value2 := calldataload(68)\n            }\n            function abi_encode_uint256(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, value0)\n            }\n            function external_fun_getAmountOut()\n            {\n                if callvalue() { revert(0, 0) }\n                let param, param_1, param_2 := abi_decode_uint256t_uint256t_uint256(calldatasize())\n                let ret := /** @src 13:37636:37696  \"OpenMevLibrary.getAmountOut(amountIn, reserveIn, reserveOut)\" */ fun_getAmountOut(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ param, param_1, param_2)\n                let memPos := mload(64)\n                mstore(memPos, ret)\n                return(memPos, 32)\n            }\n            function abi_decode_array_address_dyn_calldata(offset, end) -> arrayPos, length\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                length := calldataload(offset)\n                if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                arrayPos := add(offset, 0x20)\n                if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n            }\n            function abi_decode_uint256t_uint256t_array_address_dyn_calldatat_addresst_uint256(dataEnd) -> value0, value1, value2, value3, value4, value5\n            {\n                if slt(add(dataEnd, not(3)), 160) { revert(0, 0) }\n                value0 := calldataload(4)\n                value1 := calldataload(36)\n                let offset := calldataload(68)\n                if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n                let value2_1, value3_1 := abi_decode_array_address_dyn_calldata(add(4, offset), dataEnd)\n                value2 := value2_1\n                value3 := value3_1\n                let value := calldataload(100)\n                validator_revert_address(value)\n                value4 := value\n                value5 := calldataload(132)\n            }\n            function abi_encode_array_uint256_dyn_memory_ptr(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let _1 := 0x20\n                pos := add(pos, _1)\n                let srcPtr := add(value, _1)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, mload(srcPtr))\n                    pos := add(pos, _1)\n                    srcPtr := add(srcPtr, _1)\n                }\n                end := pos\n            }\n            function abi_encode_array_uint256_dyn(headStart, value0) -> tail\n            {\n                mstore(headStart, 32)\n                tail := abi_encode_array_uint256_dyn_memory_ptr(value0, add(headStart, 32))\n            }\n            function external_fun_swapExactTokensForETH()\n            {\n                if callvalue() { revert(0, 0) }\n                let param, param_1, param_2, param_3, param_4, param_5 := abi_decode_uint256t_uint256t_array_address_dyn_calldatat_addresst_uint256(calldatasize())\n                /// @src 13:27958:27966  \"deadline\"\n                fun_ensure(param_5)\n                /// @src 13:1431:1473  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\"\n                let _1 := 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\n                /// @src 13:28008:28065  \"if (path[_dec(path.length)] != weth) revert InvalidPath()\"\n                if /** @src 13:28012:28043  \"path[_dec(path.length)] != weth\" */ iszero(eq(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 13:28012:28035  \"path[_dec(path.length)]\" */ read_from_calldatat_address(calldata_array_index_access_address_dyn_calldata(param_2, param_3, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ add(/** @src 13:28022:28033  \"path.length\" */ param_3, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ not(0)))), sub(shl(160, 1), 1)), /** @src 13:1431:1473  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\" */ _1))\n                /// @src 13:28008:28065  \"if (path[_dec(path.length)] != weth) revert InvalidPath()\"\n                {\n                    /// @src 13:28052:28065  \"InvalidPath()\"\n                    let _2 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                    /// @src 13:28052:28065  \"InvalidPath()\"\n                    mstore(_2, shl(224, 0x20db8267))\n                    revert(_2, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 4)\n                }\n                /// @src 13:28075:28121  \"address factory = OpenMevLibrary.SUSHI_FACTORY\"\n                let var_factory := /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ 0xc0aee478e3658e2610c5f7a4a2e1777ce9e4f2ac\n                /// @src 13:28131:28219  \"OpenMevLibrary.Swap[] memory swaps = OpenMevLibrary.getSwapsOut(factory, amountIn, path)\"\n                let var_swaps_mpos := /** @src 13:28168:28219  \"OpenMevLibrary.getSwapsOut(factory, amountIn, path)\" */ fun_getSwapsOut_16262(param, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ abi_decode_available_length_array_address_dyn(/** @src 13:28168:28219  \"OpenMevLibrary.getSwapsOut(factory, amountIn, path)\" */ param_2, param_3, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ calldatasize()))\n                /// @src 13:28278:28290  \"_dec(length)\"\n                let expr := fun_dec(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 13:28246:28258  \"swaps.length\" */ var_swaps_mpos))\n                /// @src 13:28268:28625  \"if (swaps[_dec(length)].amountOut < amountOutMin) {...\"\n                if /** @src 13:28272:28316  \"swaps[_dec(length)].amountOut < amountOutMin\" */ lt(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 13:28272:28301  \"swaps[_dec(length)].amountOut\" */ add(/** @src 13:28272:28291  \"swaps[_dec(length)]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, expr)), /** @src 13:28272:28301  \"swaps[_dec(length)].amountOut\" */ 192)), /** @src 13:28272:28316  \"swaps[_dec(length)].amountOut < amountOutMin\" */ param_1)\n                /// @src 13:28268:28625  \"if (swaps[_dec(length)].amountOut < amountOutMin) {...\"\n                {\n                    /// @src 13:28332:28356  \"factory = BACKUP_FACTORY\"\n                    var_factory := /** @src 13:1522:1564  \"0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f\" */ 0x5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f\n                    /// @src 13:28458:28517  \"swaps = OpenMevLibrary.getSwapsOut(factory, amountIn, path)\"\n                    var_swaps_mpos := /** @src 13:28466:28517  \"OpenMevLibrary.getSwapsOut(factory, amountIn, path)\" */ fun_getSwapsOut(param, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ abi_decode_available_length_array_address_dyn(/** @src 13:28466:28517  \"OpenMevLibrary.getSwapsOut(factory, amountIn, path)\" */ param_2, param_3, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ calldatasize()))\n                    /// @src 13:28531:28614  \"if (swaps[_dec(length)].amountOut < amountOutMin) revert InsufficientOutputAmount()\"\n                    if /** @src 13:28535:28579  \"swaps[_dec(length)].amountOut < amountOutMin\" */ lt(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 13:28535:28564  \"swaps[_dec(length)].amountOut\" */ add(/** @src 13:28535:28554  \"swaps[_dec(length)]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, expr)), /** @src 13:28272:28301  \"swaps[_dec(length)].amountOut\" */ 192)), /** @src 13:28535:28579  \"swaps[_dec(length)].amountOut < amountOutMin\" */ param_1)\n                    /// @src 13:28531:28614  \"if (swaps[_dec(length)].amountOut < amountOutMin) revert InsufficientOutputAmount()\"\n                    {\n                        /// @src 13:28588:28614  \"InsufficientOutputAmount()\"\n                        let _3 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                        /// @src 13:28588:28614  \"InsufficientOutputAmount()\"\n                        mstore(_3, shl(224, 0x42301c23))\n                        revert(_3, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 4)\n                    }\n                }\n                /// @src 13:28635:28649  \"ERC20(path[0])\"\n                let expr_address := cleanup_address(/** @src 13:28641:28648  \"path[0]\" */ read_from_calldatat_address(calldata_array_index_access_address_dyn_calldata_16264(param_2, param_3)))\n                /// @src 13:28694:28702  \"amountIn\"\n                fun_safeTransferFrom(expr_address, /** @src 13:28667:28677  \"msg.sender\" */ caller(), /** @src 13:28679:28692  \"swaps[0].pair\" */ read_from_memoryt_address(add(/** @src 13:28679:28687  \"swaps[0]\" */ mload(memory_array_index_access_struct_Swap_dyn_16265(var_swaps_mpos)), /** @src 13:28679:28692  \"swaps[0].pair\" */ 128)), /** @src 13:28694:28702  \"amountIn\" */ param)\n                /// @src 13:28713:28750  \"amounts = _swap(address(this), swaps)\"\n                let var_amounts_mpos := /** @src 13:28723:28750  \"_swap(address(this), swaps)\" */ fun_swap(/** @src 13:28737:28741  \"this\" */ address(), /** @src 13:28723:28750  \"_swap(address(this), swaps)\" */ var_swaps_mpos)\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let _4 := mload(/** @src 13:28780:28809  \"swaps[_dec(length)].amountOut\" */ add(/** @src 13:28780:28799  \"swaps[_dec(length)]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, expr)), /** @src 13:28272:28301  \"swaps[_dec(length)].amountOut\" */ 192))\n                /// @src 13:28819:28850  \"IWETH(weth).withdraw(amountOut)\"\n                if iszero(extcodesize(/** @src 13:1431:1473  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\" */ _1))\n                /// @src 13:28819:28850  \"IWETH(weth).withdraw(amountOut)\"\n                {\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 13:28819:28850  \"IWETH(weth).withdraw(amountOut)\"\n                let _5 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                /// @src 13:28819:28850  \"IWETH(weth).withdraw(amountOut)\"\n                mstore(_5, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ shl(224, 0x2e1a7d4d))\n                /// @src 13:28819:28850  \"IWETH(weth).withdraw(amountOut)\"\n                let _6 := call(gas(), /** @src 13:1431:1473  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\" */ _1, /** @src -1:-1:-1 */ 0, /** @src 13:28819:28850  \"IWETH(weth).withdraw(amountOut)\" */ _5, sub(abi_encode_uint256(add(_5, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 4), /** @src 13:28819:28850  \"IWETH(weth).withdraw(amountOut)\" */ _4), _5), _5, /** @src -1:-1:-1 */ 0)\n                /// @src 13:28819:28850  \"IWETH(weth).withdraw(amountOut)\"\n                if iszero(_6) { revert_forward() }\n                if _6\n                {\n                    finalize_allocation_16266(_5)\n                    abi_decode(_5, _5)\n                }\n                /// @src 13:28896:28905  \"amountOut\"\n                fun_safeTransferETH(param_4, _4)\n                /// @src 13:28977:28982  \"swaps\"\n                fun_backrunSwaps(var_factory, var_swaps_mpos)\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_array_uint256_dyn(memPos, var_amounts_mpos), memPos))\n            }\n            function abi_decode_uint256t_array_address_dyn_calldata(dataEnd) -> value0, value1, value2\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                value0 := calldataload(4)\n                let offset := calldataload(36)\n                if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n                let value1_1, value2_1 := abi_decode_array_address_dyn_calldata(add(4, offset), dataEnd)\n                value1 := value1_1\n                value2 := value2_1\n            }\n            function external_fun_getAmountsIn()\n            {\n                if callvalue() { revert(0, 0) }\n                let param, param_1, param_2 := abi_decode_uint256t_array_address_dyn_calldata(calldatasize())\n                let _1 := abi_decode_available_length_array_address_dyn(/** @src 13:38396:38470  \"OpenMevLibrary.getAmountsIn(OpenMevLibrary.SUSHI_FACTORY, amountOut, path)\" */ param_1, param_2, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ calldatasize())\n                /// @src 12:12606:12617  \"path.length\"\n                let expr := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 12:12606:12617  \"path.length\" */ _1)\n                /// @src 12:12627:12663  \"if (length < 2) revert InvalidPath()\"\n                if /** @src 12:12631:12641  \"length < 2\" */ lt(expr, /** @src 12:12640:12641  \"2\" */ 0x02)\n                /// @src 12:12627:12663  \"if (length < 2) revert InvalidPath()\"\n                {\n                    /// @src 12:12650:12663  \"InvalidPath()\"\n                    let _2 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                    /// @src 12:12650:12663  \"InvalidPath()\"\n                    mstore(_2, /** @src 13:28052:28065  \"InvalidPath()\" */ shl(224, 0x20db8267))\n                    /// @src 12:12650:12663  \"InvalidPath()\"\n                    revert(_2, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 4)\n                }\n                /// @src 12:12673:12704  \"amounts = new uint256[](length)\"\n                let var_amounts_mpos := /** @src 12:12683:12704  \"new uint256[](length)\" */ allocate_and_zero_memory_array_array_uint256_dyn(expr)\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let _3 := not(0)\n                /// @src 12:12722:12734  \"_dec(length)\"\n                let expr_1 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ add(/** @src 12:12722:12734  \"_dec(length)\" */ expr, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _3)\n                mstore(/** @src 12:12714:12747  \"amounts[_dec(length)] = amountOut\" */ memory_array_index_access_struct_Swap_dyn(var_amounts_mpos, expr_1), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ param)\n                /// @src 12:12762:12786  \"uint256 i = _dec(length)\"\n                let var_i := expr_1\n                /// @src 12:12757:13006  \"for (uint256 i = _dec(length); _isNonZero(i); i = _dec(i)) {...\"\n                for { }\n                /** @src 12:12788:12801  \"_isNonZero(i)\" */ var_i\n                /// @src 12:12762:12786  \"uint256 i = _dec(length)\"\n                {\n                    /// @src 12:12803:12814  \"i = _dec(i)\"\n                    var_i := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ add(/** @src 12:12807:12814  \"_dec(i)\" */ var_i, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _3)\n                }\n                /// @src 12:12803:12814  \"i = _dec(i)\"\n                {\n                    /// @src 12:12898:12905  \"_dec(i)\"\n                    let expr_2 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ add(/** @src 12:12898:12905  \"_dec(i)\" */ var_i, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _3)\n                    let _4 := sub(shl(160, 1), 1)\n                    let cleaned := and(/** @src 13:1522:1564  \"0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f\" */ mload(/** @src 12:12893:12906  \"path[_dec(i)]\" */ memory_array_index_access_struct_Swap_dyn(_1, expr_2)), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _4)\n                    /// @src 12:12872:12916  \"getReserves(factory, path[_dec(i)], path[i])\"\n                    let expr_component, expr_component_1 := fun_getReserves_16268(cleaned, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 13:1522:1564  \"0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f\" */ mload(/** @src 12:12908:12915  \"path[i]\" */ memory_array_index_access_struct_Swap_dyn(_1, var_i)), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _4))\n                    mstore(/** @src 12:12930:12995  \"amounts[_dec(i)] = getAmountIn(amounts[i], reserveIn, reserveOut)\" */ memory_array_index_access_struct_Swap_dyn(var_amounts_mpos, expr_2), /** @src 12:12949:12995  \"getAmountIn(amounts[i], reserveIn, reserveOut)\" */ fun_getAmountIn(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 12:12961:12971  \"amounts[i]\" */ memory_array_index_access_struct_Swap_dyn(var_amounts_mpos, var_i)), /** @src 12:12949:12995  \"getAmountIn(amounts[i], reserveIn, reserveOut)\" */ expr_component, expr_component_1))\n                }\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_array_uint256_dyn(memPos, var_amounts_mpos), memPos))\n            }\n            function cleanup_bool(value) -> cleaned\n            {\n                cleaned := iszero(iszero(value))\n            }\n            function abi_decode_uint8() -> value\n            {\n                value := calldataload(260)\n                if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n            }\n            function external_fun_removeLiquidityWithPermit()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 352)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let value := calldataload(4)\n                validator_revert_address(value)\n                let value_1 := calldataload(36)\n                validator_revert_address(value_1)\n                let value_2 := calldataload(164)\n                validator_revert_address(value_2)\n                let value_3 := calldataload(228)\n                if iszero(eq(value_3, iszero(iszero(value_3))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let value8 := abi_decode_uint8()\n                let ret, ret_1 := fun_removeLiquidityWithPermit(value, value_1, calldataload(68), calldataload(100), calldataload(132), value_2, calldataload(196), value_3, value8, calldataload(292), calldataload(324))\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_uint256_uint256(memPos, ret, ret_1), memPos))\n            }\n            function abi_decode(headStart, dataEnd)\n            {\n                if slt(sub(dataEnd, headStart), 0) { revert(0, 0) }\n            }\n            function external_fun_cancelOwnershipTransfer()\n            {\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                /// @src 16:1384:1520  \"modifier onlyOwner() {...\"\n                fun_onlyOwner()\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                sstore(/** @src 16:2353:2378  \"delete _newPotentialOwner\" */ 0x01, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(sload(/** @src 16:2353:2378  \"delete _newPotentialOwner\" */ 0x01), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ shl(160, 0xffffffffffffffffffffffff)))\n                return(mload(64), 0)\n            }\n            function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                length := calldataload(offset)\n                if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                arrayPos := add(offset, 0x20)\n                if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n            }\n            function external_fun_onFlashLoan()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 160)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let value := calldataload(4)\n                validator_revert_address(value)\n                let value_1 := calldataload(36)\n                validator_revert_address(value_1)\n                let value2 := calldataload(68)\n                let offset := calldataload(132)\n                if gt(offset, 0xffffffffffffffff)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let value4, value5 := abi_decode_bytes_calldata(add(4, offset), calldatasize())\n                /// @src 13:43717:43771  \"if (msg.sender != BENTO) revert ExecuteNotAuthorized()\"\n                if /** @src 13:43721:43740  \"msg.sender != BENTO\" */ iszero(eq(/** @src 13:43721:43731  \"msg.sender\" */ caller(), /** @src 13:1752:1794  \"0xF5BCE5077908a1b7370B9ae04AdC565EBd643966\" */ 0xf5bce5077908a1b7370b9ae04adc565ebd643966))\n                /// @src 13:43717:43771  \"if (msg.sender != BENTO) revert ExecuteNotAuthorized()\"\n                {\n                    /// @src 13:43749:43771  \"ExecuteNotAuthorized()\"\n                    let _1 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                    /// @src 13:43749:43771  \"ExecuteNotAuthorized()\"\n                    mstore(_1, shl(224, 0x75c366a9))\n                    revert(_1, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 4)\n                }\n                /// @src 13:43876:43889  \"_decode(data)\"\n                let expr_component, expr_component_1, expr_component_2 := fun_decode(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ abi_decode_available_length_bytes(/** @src 13:43876:43889  \"_decode(data)\" */ value4, value5, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ calldatasize()))\n                /// @src 13:43916:43969  \"_arb(factory, factory1, input, token, sender, amount)\"\n                let expr := fun_arb(expr_component, expr_component_1, expr_component_2, value_1, value, value2)\n                /// @src 13:44011:44023  \"amount + fee\"\n                let expr_1 := checked_add_uint256(value2, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ calldataload(100))\n                /// @src 13:44033:44097  \"if (amountOver <= amountOwing) revert InsufficientOutputAmount()\"\n                if /** @src 13:44037:44062  \"amountOver <= amountOwing\" */ iszero(gt(expr, expr_1))\n                /// @src 13:44033:44097  \"if (amountOver <= amountOwing) revert InsufficientOutputAmount()\"\n                {\n                    /// @src 13:44071:44097  \"InsufficientOutputAmount()\"\n                    let _2 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                    /// @src 13:44071:44097  \"InsufficientOutputAmount()\"\n                    mstore(_2, /** @src 13:28588:28614  \"InsufficientOutputAmount()\" */ shl(224, 0x42301c23))\n                    /// @src 13:44071:44097  \"InsufficientOutputAmount()\"\n                    revert(_2, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 4)\n                }\n                /// @src 13:44140:44151  \"amountOwing\"\n                fun_safeTransfer_16279(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 13:44107:44119  \"ERC20(token)\" */ value_1, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ sub(shl(160, 1), 1)), /** @src 13:44140:44151  \"amountOwing\" */ expr_1)\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                return(mload(64), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n            function external_fun_updateAllAaveAssets()\n            {\n                let _1 := 0\n                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                /// @src 16:1384:1520  \"modifier onlyOwner() {...\"\n                fun_onlyOwner()\n                /// @src 13:52398:52450  \"ILendingPool(LENDING_POOL_ADDRESS).getReservesList()\"\n                let _2 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                /// @src 13:52398:52450  \"ILendingPool(LENDING_POOL_ADDRESS).getReservesList()\"\n                mstore(_2, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ shl(226, 0x34651b6f))\n                /// @src 13:52398:52450  \"ILendingPool(LENDING_POOL_ADDRESS).getReservesList()\"\n                let _3 := staticcall(gas(), /** @src 13:1641:1683  \"0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9\" */ 0x7d2768de32b0b80b7a3454c06bdac94a69ddc7a9, /** @src 13:52398:52450  \"ILendingPool(LENDING_POOL_ADDRESS).getReservesList()\" */ _2, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 4, /** @src 13:52398:52450  \"ILendingPool(LENDING_POOL_ADDRESS).getReservesList()\" */ _2, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _1)\n                /// @src 13:52398:52450  \"ILendingPool(LENDING_POOL_ADDRESS).getReservesList()\"\n                if iszero(_3) { revert_forward() }\n                let expr_mpos := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _1\n                /// @src 13:52398:52450  \"ILendingPool(LENDING_POOL_ADDRESS).getReservesList()\"\n                if _3\n                {\n                    let _4 := returndatasize()\n                    returndatacopy(_2, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _1, /** @src 13:52398:52450  \"ILendingPool(LENDING_POOL_ADDRESS).getReservesList()\" */ _4)\n                    finalize_allocation(_2, _4)\n                    expr_mpos := abi_decode_array_address_dyn_fromMemory(_2, add(_2, _4))\n                }\n                /// @src 13:52477:52494  \"aaveAssets.length\"\n                let expr := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 13:52477:52494  \"aaveAssets.length\" */ expr_mpos)\n                /// @src 13:52509:52518  \"uint256 i\"\n                let var_i := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _1\n                /// @src 13:52504:52640  \"for (uint256 i; i < length; i = _inc(i)) {...\"\n                for { }\n                /** @src 13:52520:52530  \"i < length\" */ lt(var_i, expr)\n                /// @src 13:52509:52518  \"uint256 i\"\n                {\n                    /// @src 13:52532:52543  \"i = _inc(i)\"\n                    var_i := /** @src 12:1287:1291  \"1000\" */ add(/** @src 13:52536:52543  \"_inc(i)\" */ var_i, /** @src 12:20244:20245  \"1\" */ 0x01)\n                }\n                /// @src 13:52532:52543  \"i = _inc(i)\"\n                {\n                    /// @src 13:52602:52629  \"IS_AAVE_ASSET[asset] = true\"\n                    update_storage_value_offsett_bool_to_bool(/** @src 13:52602:52622  \"IS_AAVE_ASSET[asset]\" */ mapping_index_access_mapping_address_bool_of_address(/** @src 13:52575:52588  \"aaveAssets[i]\" */ read_from_memoryt_address(memory_array_index_access_struct_Swap_dyn(expr_mpos, var_i))))\n                }\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                return(mload(64), _1)\n            }\n            function external_fun_swapExactTokensForTokens()\n            {\n                if callvalue() { revert(0, 0) }\n                let param, param_1, param_2, param_3, param_4, param_5 := abi_decode_uint256t_uint256t_array_address_dyn_calldatat_addresst_uint256(calldatasize())\n                /// @src 13:20128:20136  \"deadline\"\n                fun_ensure(param_5)\n                /// @src 13:20147:20193  \"address factory = OpenMevLibrary.SUSHI_FACTORY\"\n                let var_factory := /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ 0xc0aee478e3658e2610c5f7a4a2e1777ce9e4f2ac\n                /// @src 13:20203:20291  \"OpenMevLibrary.Swap[] memory swaps = OpenMevLibrary.getSwapsOut(factory, amountIn, path)\"\n                let var_swaps_mpos := /** @src 13:20240:20291  \"OpenMevLibrary.getSwapsOut(factory, amountIn, path)\" */ fun_getSwapsOut_16262(param, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ abi_decode_available_length_array_address_dyn(/** @src 13:20240:20291  \"OpenMevLibrary.getSwapsOut(factory, amountIn, path)\" */ param_2, param_3, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ calldatasize()))\n                /// @src 12:20452:20464  \"return i - 1\"\n                let var := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ add(mload(/** @src 13:20318:20330  \"swaps.length\" */ var_swaps_mpos), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ not(0))\n                /// @src 13:20340:20697  \"if (swaps[_dec(length)].amountOut < amountOutMin) {...\"\n                if /** @src 13:20344:20388  \"swaps[_dec(length)].amountOut < amountOutMin\" */ lt(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 13:20344:20373  \"swaps[_dec(length)].amountOut\" */ add(/** @src 13:20344:20363  \"swaps[_dec(length)]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, var)), /** @src 13:20344:20373  \"swaps[_dec(length)].amountOut\" */ 192)), /** @src 13:20344:20388  \"swaps[_dec(length)].amountOut < amountOutMin\" */ param_1)\n                /// @src 13:20340:20697  \"if (swaps[_dec(length)].amountOut < amountOutMin) {...\"\n                {\n                    /// @src 13:20492:20516  \"factory = BACKUP_FACTORY\"\n                    var_factory := /** @src 13:1522:1564  \"0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f\" */ 0x5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f\n                    /// @src 13:20530:20589  \"swaps = OpenMevLibrary.getSwapsOut(factory, amountIn, path)\"\n                    var_swaps_mpos := /** @src 13:20538:20589  \"OpenMevLibrary.getSwapsOut(factory, amountIn, path)\" */ fun_getSwapsOut(param, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ abi_decode_available_length_array_address_dyn(/** @src 13:20538:20589  \"OpenMevLibrary.getSwapsOut(factory, amountIn, path)\" */ param_2, param_3, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ calldatasize()))\n                    /// @src 13:20603:20686  \"if (swaps[_dec(length)].amountOut < amountOutMin) revert InsufficientOutputAmount()\"\n                    if /** @src 13:20607:20651  \"swaps[_dec(length)].amountOut < amountOutMin\" */ lt(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 13:20607:20636  \"swaps[_dec(length)].amountOut\" */ add(/** @src 13:20607:20626  \"swaps[_dec(length)]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, var)), /** @src 13:20344:20373  \"swaps[_dec(length)].amountOut\" */ 192)), /** @src 13:20607:20651  \"swaps[_dec(length)].amountOut < amountOutMin\" */ param_1)\n                    /// @src 13:20603:20686  \"if (swaps[_dec(length)].amountOut < amountOutMin) revert InsufficientOutputAmount()\"\n                    {\n                        /// @src 13:20660:20686  \"InsufficientOutputAmount()\"\n                        let _1 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                        /// @src 13:20660:20686  \"InsufficientOutputAmount()\"\n                        mstore(_1, /** @src 13:28588:28614  \"InsufficientOutputAmount()\" */ shl(224, 0x42301c23))\n                        /// @src 13:20660:20686  \"InsufficientOutputAmount()\"\n                        revert(_1, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 4)\n                    }\n                }\n                /// @src 13:20706:20720  \"ERC20(path[0])\"\n                let expr_address := cleanup_address(/** @src 13:20712:20719  \"path[0]\" */ read_from_calldatat_address(calldata_array_index_access_address_dyn_calldata_16264(param_2, param_3)))\n                /// @src 13:20765:20773  \"amountIn\"\n                fun_safeTransferFrom(expr_address, /** @src 13:20738:20748  \"msg.sender\" */ caller(), /** @src 13:20750:20763  \"swaps[0].pair\" */ read_from_memoryt_address(add(/** @src 13:20750:20758  \"swaps[0]\" */ mload(memory_array_index_access_struct_Swap_dyn_16265(var_swaps_mpos)), /** @src 13:20750:20763  \"swaps[0].pair\" */ 128)), /** @src 13:20765:20773  \"amountIn\" */ param)\n                /// @src 13:20784:20810  \"amounts = _swap(to, swaps)\"\n                let var_amounts_mpos := /** @src 13:20794:20810  \"_swap(to, swaps)\" */ fun_swap(param_4, var_swaps_mpos)\n                /// @src 13:20881:20886  \"swaps\"\n                fun_backrunSwaps(var_factory, var_swaps_mpos)\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_array_uint256_dyn(memPos, var_amounts_mpos), memPos))\n            }\n            function external_fun_swapTokensForExactETH()\n            {\n                if callvalue() { revert(0, 0) }\n                let param, param_1, param_2, param_3, param_4, param_5 := abi_decode_uint256t_uint256t_array_address_dyn_calldatat_addresst_uint256(calldatasize())\n                /// @src 13:25951:25959  \"deadline\"\n                fun_ensure(param_5)\n                /// @src 13:1431:1473  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\"\n                let _1 := 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\n                /// @src 13:26001:26058  \"if (path[_dec(path.length)] != weth) revert InvalidPath()\"\n                if /** @src 13:26005:26036  \"path[_dec(path.length)] != weth\" */ iszero(eq(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 13:26005:26028  \"path[_dec(path.length)]\" */ read_from_calldatat_address(calldata_array_index_access_address_dyn_calldata(param_2, param_3, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ add(/** @src 13:26015:26026  \"path.length\" */ param_3, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ not(0)))), sub(shl(160, 1), 1)), /** @src 13:1431:1473  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\" */ _1))\n                /// @src 13:26001:26058  \"if (path[_dec(path.length)] != weth) revert InvalidPath()\"\n                {\n                    /// @src 13:26045:26058  \"InvalidPath()\"\n                    let _2 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                    /// @src 13:26045:26058  \"InvalidPath()\"\n                    mstore(_2, /** @src 13:28052:28065  \"InvalidPath()\" */ shl(224, 0x20db8267))\n                    /// @src 13:26045:26058  \"InvalidPath()\"\n                    revert(_2, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 4)\n                }\n                /// @src 13:26068:26114  \"address factory = OpenMevLibrary.SUSHI_FACTORY\"\n                let var_factory := /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ 0xc0aee478e3658e2610c5f7a4a2e1777ce9e4f2ac\n                /// @src 13:26124:26212  \"OpenMevLibrary.Swap[] memory swaps = OpenMevLibrary.getSwapsIn(factory, amountOut, path)\"\n                let var_swaps_mpos := /** @src 13:26161:26212  \"OpenMevLibrary.getSwapsIn(factory, amountOut, path)\" */ fun_getSwapsIn(param, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ abi_decode_available_length_array_address_dyn(/** @src 13:26161:26212  \"OpenMevLibrary.getSwapsIn(factory, amountOut, path)\" */ param_2, param_3, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ calldatasize()))\n                /// @src 13:26222:26549  \"if (swaps[0].amountIn > amountInMax) {...\"\n                if /** @src 13:26226:26257  \"swaps[0].amountIn > amountInMax\" */ gt(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 13:26226:26243  \"swaps[0].amountIn\" */ add(/** @src 13:26226:26234  \"swaps[0]\" */ mload(memory_array_index_access_struct_Swap_dyn_16265(var_swaps_mpos)), /** @src 13:26226:26243  \"swaps[0].amountIn\" */ 160)), /** @src 13:26226:26257  \"swaps[0].amountIn > amountInMax\" */ param_1)\n                /// @src 13:26222:26549  \"if (swaps[0].amountIn > amountInMax) {...\"\n                {\n                    /// @src 13:26273:26297  \"factory = BACKUP_FACTORY\"\n                    var_factory := /** @src 13:1522:1564  \"0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f\" */ 0x5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f\n                    /// @src 13:26399:26458  \"swaps = OpenMevLibrary.getSwapsIn(factory, amountOut, path)\"\n                    var_swaps_mpos := /** @src 13:26407:26458  \"OpenMevLibrary.getSwapsIn(factory, amountOut, path)\" */ fun_getSwapsIn_16290(param, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ abi_decode_available_length_array_address_dyn(/** @src 13:26407:26458  \"OpenMevLibrary.getSwapsIn(factory, amountOut, path)\" */ param_2, param_3, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ calldatasize()))\n                    /// @src 13:26472:26538  \"if (swaps[0].amountIn > amountInMax) revert ExcessiveInputAmount()\"\n                    if /** @src 13:26476:26507  \"swaps[0].amountIn > amountInMax\" */ gt(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 13:26476:26493  \"swaps[0].amountIn\" */ add(/** @src 13:26476:26484  \"swaps[0]\" */ mload(memory_array_index_access_struct_Swap_dyn_16265(var_swaps_mpos)), /** @src 13:26226:26243  \"swaps[0].amountIn\" */ 160)), /** @src 13:26476:26507  \"swaps[0].amountIn > amountInMax\" */ param_1)\n                    /// @src 13:26472:26538  \"if (swaps[0].amountIn > amountInMax) revert ExcessiveInputAmount()\"\n                    {\n                        /// @src 13:26516:26538  \"ExcessiveInputAmount()\"\n                        let _3 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                        /// @src 13:26516:26538  \"ExcessiveInputAmount()\"\n                        mstore(_3, shl(224, 0xe1b0da4f))\n                        revert(_3, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 4)\n                    }\n                }\n                /// @src 13:26559:26573  \"ERC20(path[0])\"\n                let expr_address := cleanup_address(/** @src 13:26565:26572  \"path[0]\" */ read_from_calldatat_address(calldata_array_index_access_address_dyn_calldata_16264(param_2, param_3)))\n                /// @src 13:26603:26616  \"swaps[0].pair\"\n                let _4 := read_from_memoryt_address(add(/** @src 13:26603:26611  \"swaps[0]\" */ mload(memory_array_index_access_struct_Swap_dyn_16265(var_swaps_mpos)), /** @src 13:26603:26616  \"swaps[0].pair\" */ 128))\n                /// @src 13:26618:26635  \"swaps[0].amountIn\"\n                fun_safeTransferFrom(expr_address, /** @src 13:26591:26601  \"msg.sender\" */ caller(), /** @src 13:26618:26635  \"swaps[0].amountIn\" */ _4, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 13:26618:26635  \"swaps[0].amountIn\" */ add(/** @src 13:26618:26626  \"swaps[0]\" */ mload(memory_array_index_access_struct_Swap_dyn_16265(var_swaps_mpos)), /** @src 13:26226:26243  \"swaps[0].amountIn\" */ 160)))\n                /// @src 13:26646:26683  \"amounts = _swap(address(this), swaps)\"\n                let var_amounts_mpos := /** @src 13:26656:26683  \"_swap(address(this), swaps)\" */ fun_swap(/** @src 13:26670:26674  \"this\" */ address(), /** @src 13:26656:26683  \"_swap(address(this), swaps)\" */ var_swaps_mpos)\n                /// @src 13:26693:26724  \"IWETH(weth).withdraw(amountOut)\"\n                if iszero(extcodesize(/** @src 13:1431:1473  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\" */ _1))\n                /// @src 13:26693:26724  \"IWETH(weth).withdraw(amountOut)\"\n                {\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 13:26693:26724  \"IWETH(weth).withdraw(amountOut)\"\n                let _5 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                /// @src 13:26693:26724  \"IWETH(weth).withdraw(amountOut)\"\n                mstore(_5, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ shl(224, 0x2e1a7d4d))\n                /// @src 13:26693:26724  \"IWETH(weth).withdraw(amountOut)\"\n                let _6 := call(gas(), /** @src 13:1431:1473  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\" */ _1, /** @src -1:-1:-1 */ 0, /** @src 13:26693:26724  \"IWETH(weth).withdraw(amountOut)\" */ _5, sub(abi_encode_uint256(add(_5, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 4), /** @src 13:26693:26724  \"IWETH(weth).withdraw(amountOut)\" */ param), _5), _5, /** @src -1:-1:-1 */ 0)\n                /// @src 13:26693:26724  \"IWETH(weth).withdraw(amountOut)\"\n                if iszero(_6) { revert_forward() }\n                if _6\n                {\n                    finalize_allocation_16266(_5)\n                    abi_decode(_5, _5)\n                }\n                /// @src 13:26770:26779  \"amountOut\"\n                fun_safeTransferETH(param_4, param)\n                /// @src 13:26852:26857  \"swaps\"\n                fun_backrunSwaps(var_factory, var_swaps_mpos)\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_array_uint256_dyn(memPos, var_amounts_mpos), memPos))\n            }\n            function abi_decode_addresst_uint256t_uint256t_uint256t_addresst_uint256t_boolt_uint8t_bytes32t_bytes32(dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8, value9\n            {\n                if slt(add(dataEnd, not(3)), 320) { revert(0, 0) }\n                let value := calldataload(4)\n                validator_revert_address(value)\n                value0 := value\n                value1 := calldataload(36)\n                value2 := calldataload(68)\n                value3 := calldataload(100)\n                let value_1 := calldataload(132)\n                validator_revert_address(value_1)\n                value4 := value_1\n                value5 := calldataload(164)\n                let value_2 := calldataload(196)\n                if iszero(eq(value_2, iszero(iszero(value_2))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                value6 := value_2\n                let value_3 := calldataload(228)\n                if iszero(eq(value_3, and(value_3, 0xff)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                value7 := value_3\n                value8 := calldataload(260)\n                value9 := calldataload(292)\n            }\n            function external_fun_removeLiquidityETHWithPermitSupportingFeeOnTransferTokens()\n            {\n                if callvalue() { revert(0, 0) }\n                let param, param_1, param_2, param_3, param_4, param_5, param_6, param_7, param_8, param_9 := abi_decode_addresst_uint256t_uint256t_uint256t_addresst_uint256t_boolt_uint8t_bytes32t_bytes32(calldatasize())\n                /// @src 12:3399:3425  \"sortTokens(tokenA, tokenB)\"\n                let expr_component, expr_component_1 := fun_sortTokens_16297(param)\n                /// @src 13:17316:17406  \"IUniswapV2Pair(OpenMevLibrary.pairFor(OpenMevLibrary.SUSHI_FACTORY, token, WETH09)).permit\"\n                let expr_address := cleanup_address(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 12:3442:3478  \"_asmPairFor(factory, token0, token1)\" */ fun_asmPairFor_16298(expr_component, expr_component_1), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ sub(shl(160, 1), 1)))\n                /// @src 13:17471:17513  \"approveMax ? type(uint256).max : liquidity\"\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 13:17471:17513  \"approveMax ? type(uint256).max : liquidity\"\n                switch param_6\n                case 0 { expr := param_1 }\n                default {\n                    expr := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ not(0)\n                }\n                /// @src 13:17316:17590  \"IUniswapV2Pair(OpenMevLibrary.pairFor(OpenMevLibrary.SUSHI_FACTORY, token, WETH09)).permit(...\"\n                if iszero(extcodesize(expr_address))\n                {\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 13:17316:17590  \"IUniswapV2Pair(OpenMevLibrary.pairFor(OpenMevLibrary.SUSHI_FACTORY, token, WETH09)).permit(...\"\n                let _1 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                /// @src 13:17316:17590  \"IUniswapV2Pair(OpenMevLibrary.pairFor(OpenMevLibrary.SUSHI_FACTORY, token, WETH09)).permit(...\"\n                mstore(_1, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ shl(224, 0xd505accf))\n                /// @src 13:17316:17590  \"IUniswapV2Pair(OpenMevLibrary.pairFor(OpenMevLibrary.SUSHI_FACTORY, token, WETH09)).permit(...\"\n                let _2 := call(gas(), expr_address, /** @src -1:-1:-1 */ 0, /** @src 13:17316:17590  \"IUniswapV2Pair(OpenMevLibrary.pairFor(OpenMevLibrary.SUSHI_FACTORY, token, WETH09)).permit(...\" */ _1, sub(abi_encode_address_address_uint256_uint256_uint8_bytes32_bytes32(add(_1, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 4), /** @src 13:17420:17430  \"msg.sender\" */ caller(), /** @src 13:17452:17456  \"this\" */ address(), /** @src 13:17316:17590  \"IUniswapV2Pair(OpenMevLibrary.pairFor(OpenMevLibrary.SUSHI_FACTORY, token, WETH09)).permit(...\" */ expr, param_5, param_7, param_8, param_9), _1), _1, /** @src -1:-1:-1 */ 0)\n                /// @src 13:17316:17590  \"IUniswapV2Pair(OpenMevLibrary.pairFor(OpenMevLibrary.SUSHI_FACTORY, token, WETH09)).permit(...\"\n                if iszero(_2) { revert_forward() }\n                if _2\n                {\n                    finalize_allocation_16266(_1)\n                    abi_decode(_1, _1)\n                }\n                /// @src 13:17600:17803  \"amountETH = removeLiquidityETHSupportingFeeOnTransferTokens(...\"\n                let var_amountETH := /** @src 13:17612:17803  \"removeLiquidityETHSupportingFeeOnTransferTokens(...\" */ fun_removeLiquidityETHSupportingFeeOnTransferTokens(param, param_1, param_2, param_3, param_4, param_5)\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_uint256(memPos, var_amountETH), memPos))\n            }\n            function external_fun_swapExactTokensForTokensSupportingFeeOnTransferTokens()\n            {\n                if callvalue() { revert(0, 0) }\n                let param, param_1, param_2, param_3, param_4, param_5 := abi_decode_uint256t_uint256t_array_address_dyn_calldatat_addresst_uint256(calldatasize())\n                /// @src 13:33817:33825  \"deadline\"\n                fun_ensure(param_5)\n                /// @src 13:33892:33906  \"ERC20(path[0])\"\n                let expr_address := cleanup_address(/** @src 13:33898:33905  \"path[0]\" */ read_from_calldatat_address(calldata_array_index_access_address_dyn_calldata_16264(param_2, param_3)))\n                /// @src 13:33968:33975  \"path[0]\"\n                let expr := read_from_calldatat_address(calldata_array_index_access_address_dyn_calldata_16264(param_2, param_3))\n                /// @src 13:33987:33995  \"amountIn\"\n                fun_safeTransferFrom(expr_address, /** @src 13:33924:33934  \"msg.sender\" */ caller(), /** @src 13:33936:33985  \"OpenMevLibrary.pairFor(factory, path[0], path[1])\" */ fun_pairFor_16304(expr, /** @src 13:33977:33984  \"path[1]\" */ read_from_calldatat_address(calldata_array_index_access_address_dyn_calldata_16303(param_2, param_3))), /** @src 13:33987:33995  \"amountIn\" */ param)\n                /// @src 13:34041:34058  \"_dec(path.length)\"\n                let expr_1 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ add(/** @src 13:34046:34057  \"path.length\" */ param_3, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ not(0))\n                /// @src 13:34030:34070  \"ERC20(path[_dec(path.length)]).balanceOf\"\n                let expr_address_1 := cleanup_address(/** @src 13:34030:34060  \"ERC20(path[_dec(path.length)])\" */ cleanup_address(/** @src 13:34036:34059  \"path[_dec(path.length)]\" */ read_from_calldatat_address(calldata_array_index_access_address_dyn_calldata(param_2, param_3, expr_1))))\n                /// @src 13:34030:34074  \"ERC20(path[_dec(path.length)]).balanceOf(to)\"\n                let _1 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                /// @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\"\n                let _2 := shl(224, 0x70a08231)\n                /// @src 13:34030:34074  \"ERC20(path[_dec(path.length)]).balanceOf(to)\"\n                mstore(_1, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ _2)\n                /// @src 13:34030:34074  \"ERC20(path[_dec(path.length)]).balanceOf(to)\"\n                let _3 := 32\n                let _4 := staticcall(gas(), expr_address_1, _1, sub(abi_encode_tuple_address(add(_1, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 4), /** @src 13:34030:34074  \"ERC20(path[_dec(path.length)]).balanceOf(to)\" */ param_4), _1), _1, _3)\n                if iszero(_4) { revert_forward() }\n                let expr_2 := /** @src 13:33903:33904  \"0\" */ 0x00\n                /// @src 13:34030:34074  \"ERC20(path[_dec(path.length)]).balanceOf(to)\"\n                if _4\n                {\n                    let _5 := _3\n                    if gt(_3, returndatasize()) { _5 := returndatasize() }\n                    finalize_allocation(_1, _5)\n                    expr_2 := abi_decode_uint256_fromMemory(_1, add(_1, _5))\n                }\n                /// @src 13:34084:34137  \"_swapSupportingFeeOnTransferTokens(path, to, factory)\"\n                fun_swapSupportingFeeOnTransferTokens(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ abi_decode_available_length_array_address_dyn(/** @src 13:34084:34137  \"_swapSupportingFeeOnTransferTokens(path, to, factory)\" */ param_2, param_3, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ calldatasize()), /** @src 13:34084:34137  \"_swapSupportingFeeOnTransferTokens(path, to, factory)\" */ param_4)\n                /// @src 13:34151:34191  \"ERC20(path[_dec(path.length)]).balanceOf\"\n                let expr_address_2 := cleanup_address(/** @src 13:34151:34181  \"ERC20(path[_dec(path.length)])\" */ cleanup_address(/** @src 13:34157:34180  \"path[_dec(path.length)]\" */ read_from_calldatat_address(calldata_array_index_access_address_dyn_calldata(param_2, param_3, expr_1))))\n                /// @src 13:34151:34195  \"ERC20(path[_dec(path.length)]).balanceOf(to)\"\n                let _6 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                /// @src 13:34151:34195  \"ERC20(path[_dec(path.length)]).balanceOf(to)\"\n                mstore(_6, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ _2)\n                /// @src 13:34151:34195  \"ERC20(path[_dec(path.length)]).balanceOf(to)\"\n                let _7 := staticcall(gas(), expr_address_2, _6, sub(abi_encode_tuple_address(add(_6, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 4), /** @src 13:34151:34195  \"ERC20(path[_dec(path.length)]).balanceOf(to)\" */ param_4), _6), _6, /** @src 13:34030:34074  \"ERC20(path[_dec(path.length)]).balanceOf(to)\" */ _3)\n                /// @src 13:34151:34195  \"ERC20(path[_dec(path.length)]).balanceOf(to)\"\n                if iszero(_7) { revert_forward() }\n                let expr_3 := /** @src 13:33903:33904  \"0\" */ 0x00\n                /// @src 13:34151:34195  \"ERC20(path[_dec(path.length)]).balanceOf(to)\"\n                if _7\n                {\n                    let _8 := /** @src 13:34030:34074  \"ERC20(path[_dec(path.length)]).balanceOf(to)\" */ _3\n                    /// @src 13:34151:34195  \"ERC20(path[_dec(path.length)]).balanceOf(to)\"\n                    if gt(/** @src 13:34030:34074  \"ERC20(path[_dec(path.length)]).balanceOf(to)\" */ _3, /** @src 13:34151:34195  \"ERC20(path[_dec(path.length)]).balanceOf(to)\" */ returndatasize()) { _8 := returndatasize() }\n                    finalize_allocation(_6, _8)\n                    expr_3 := abi_decode_uint256_fromMemory(_6, add(_6, _8))\n                }\n                /// @src 13:34147:34273  \"if (ERC20(path[_dec(path.length)]).balanceOf(to) - balanceBefore < amountOutMin)...\"\n                if /** @src 13:34151:34226  \"ERC20(path[_dec(path.length)]).balanceOf(to) - balanceBefore < amountOutMin\" */ lt(/** @src 13:34151:34211  \"ERC20(path[_dec(path.length)]).balanceOf(to) - balanceBefore\" */ checked_sub_uint256(expr_3, expr_2), /** @src 13:34151:34226  \"ERC20(path[_dec(path.length)]).balanceOf(to) - balanceBefore < amountOutMin\" */ param_1)\n                /// @src 13:34147:34273  \"if (ERC20(path[_dec(path.length)]).balanceOf(to) - balanceBefore < amountOutMin)...\"\n                {\n                    /// @src 13:34247:34273  \"InsufficientOutputAmount()\"\n                    let _9 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                    /// @src 13:34247:34273  \"InsufficientOutputAmount()\"\n                    mstore(_9, /** @src 13:28588:28614  \"InsufficientOutputAmount()\" */ shl(224, 0x42301c23))\n                    /// @src 13:34247:34273  \"InsufficientOutputAmount()\"\n                    revert(_9, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 4)\n                }\n                return(mload(64), /** @src 13:33903:33904  \"0\" */ 0x00)\n            }\n            /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n            function external_fun_swapExactTokensForETHSupportingFeeOnTransferTokens()\n            {\n                if callvalue() { revert(0, 0) }\n                let param, param_1, param_2, param_3, param_4, param_5 := abi_decode_uint256t_uint256t_array_address_dyn_calldatat_addresst_uint256(calldatasize())\n                /// @src 13:36549:36557  \"deadline\"\n                fun_ensure(param_5)\n                /// @src 13:1431:1473  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\"\n                let _1 := 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\n                /// @src 13:36599:36656  \"if (path[_dec(path.length)] != weth) revert InvalidPath()\"\n                if /** @src 13:36603:36634  \"path[_dec(path.length)] != weth\" */ iszero(eq(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 13:36603:36626  \"path[_dec(path.length)]\" */ read_from_calldatat_address(calldata_array_index_access_address_dyn_calldata(param_2, param_3, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ add(/** @src 13:36613:36624  \"path.length\" */ param_3, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ not(0)))), sub(shl(160, 1), 1)), /** @src 13:1431:1473  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\" */ _1))\n                /// @src 13:36599:36656  \"if (path[_dec(path.length)] != weth) revert InvalidPath()\"\n                {\n                    /// @src 13:36643:36656  \"InvalidPath()\"\n                    let _2 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                    /// @src 13:36643:36656  \"InvalidPath()\"\n                    mstore(_2, /** @src 13:28052:28065  \"InvalidPath()\" */ shl(224, 0x20db8267))\n                    /// @src 13:36643:36656  \"InvalidPath()\"\n                    revert(_2, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 4)\n                }\n                /// @src 13:36722:36736  \"ERC20(path[0])\"\n                let expr_address := cleanup_address(/** @src 13:36728:36735  \"path[0]\" */ read_from_calldatat_address(calldata_array_index_access_address_dyn_calldata_16264(param_2, param_3)))\n                /// @src 13:36798:36805  \"path[0]\"\n                let expr := read_from_calldatat_address(calldata_array_index_access_address_dyn_calldata_16264(param_2, param_3))\n                /// @src 13:36817:36825  \"amountIn\"\n                fun_safeTransferFrom(expr_address, /** @src 13:36754:36764  \"msg.sender\" */ caller(), /** @src 13:36766:36815  \"OpenMevLibrary.pairFor(factory, path[0], path[1])\" */ fun_pairFor_16304(expr, /** @src 13:36807:36814  \"path[1]\" */ read_from_calldatat_address(calldata_array_index_access_address_dyn_calldata_16303(param_2, param_3))), /** @src 13:36817:36825  \"amountIn\" */ param)\n                /// @src 13:36860:36896  \"ERC20(weth).balanceOf(address(this))\"\n                let _3 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                /// @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\"\n                let _4 := shl(224, 0x70a08231)\n                /// @src 13:36860:36896  \"ERC20(weth).balanceOf(address(this))\"\n                mstore(_3, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ _4)\n                /// @src 13:36860:36896  \"ERC20(weth).balanceOf(address(this))\"\n                let _5 := 32\n                let _6 := staticcall(gas(), /** @src 13:1431:1473  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\" */ _1, /** @src 13:36860:36896  \"ERC20(weth).balanceOf(address(this))\" */ _3, sub(abi_encode_tuple_address(add(_3, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 4), /** @src 13:36890:36894  \"this\" */ address()), /** @src 13:36860:36896  \"ERC20(weth).balanceOf(address(this))\" */ _3), _3, _5)\n                if iszero(_6) { revert_forward() }\n                let expr_1 := /** @src 13:36733:36734  \"0\" */ 0x00\n                /// @src 13:36860:36896  \"ERC20(weth).balanceOf(address(this))\"\n                if _6\n                {\n                    let _7 := _5\n                    if gt(_5, returndatasize()) { _7 := returndatasize() }\n                    finalize_allocation(_3, _7)\n                    expr_1 := abi_decode_uint256_fromMemory(_3, add(_3, _7))\n                }\n                /// @src 13:36906:36970  \"_swapSupportingFeeOnTransferTokens(path, address(this), factory)\"\n                fun_swapSupportingFeeOnTransferTokens(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ abi_decode_available_length_array_address_dyn(/** @src 13:36906:36970  \"_swapSupportingFeeOnTransferTokens(path, address(this), factory)\" */ param_2, param_3, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ calldatasize()), /** @src 13:36890:36894  \"this\" */ address())\n                /// @src 13:37000:37036  \"ERC20(weth).balanceOf(address(this))\"\n                let _8 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                /// @src 13:37000:37036  \"ERC20(weth).balanceOf(address(this))\"\n                mstore(_8, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ _4)\n                /// @src 13:37000:37036  \"ERC20(weth).balanceOf(address(this))\"\n                let _9 := staticcall(gas(), /** @src 13:1431:1473  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\" */ _1, /** @src 13:37000:37036  \"ERC20(weth).balanceOf(address(this))\" */ _8, sub(abi_encode_tuple_address(add(_8, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 4), /** @src 13:36890:36894  \"this\" */ address()), /** @src 13:37000:37036  \"ERC20(weth).balanceOf(address(this))\" */ _8), _8, /** @src 13:36860:36896  \"ERC20(weth).balanceOf(address(this))\" */ _5)\n                /// @src 13:37000:37036  \"ERC20(weth).balanceOf(address(this))\"\n                if iszero(_9) { revert_forward() }\n                let expr_2 := /** @src 13:36733:36734  \"0\" */ 0x00\n                /// @src 13:37000:37036  \"ERC20(weth).balanceOf(address(this))\"\n                if _9\n                {\n                    let _10 := /** @src 13:36860:36896  \"ERC20(weth).balanceOf(address(this))\" */ _5\n                    /// @src 13:37000:37036  \"ERC20(weth).balanceOf(address(this))\"\n                    if gt(/** @src 13:36860:36896  \"ERC20(weth).balanceOf(address(this))\" */ _5, /** @src 13:37000:37036  \"ERC20(weth).balanceOf(address(this))\" */ returndatasize()) { _10 := returndatasize() }\n                    finalize_allocation(_8, _10)\n                    expr_2 := abi_decode_uint256_fromMemory(_8, add(_8, _10))\n                }\n                /// @src 13:37000:37052  \"ERC20(weth).balanceOf(address(this)) - balanceBefore\"\n                let expr_3 := checked_sub_uint256(expr_2, expr_1)\n                /// @src 13:37062:37125  \"if (amountOut < amountOutMin) revert InsufficientOutputAmount()\"\n                if /** @src 13:37066:37090  \"amountOut < amountOutMin\" */ lt(expr_3, param_1)\n                /// @src 13:37062:37125  \"if (amountOut < amountOutMin) revert InsufficientOutputAmount()\"\n                {\n                    /// @src 13:37099:37125  \"InsufficientOutputAmount()\"\n                    let _11 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                    /// @src 13:37099:37125  \"InsufficientOutputAmount()\"\n                    mstore(_11, /** @src 13:28588:28614  \"InsufficientOutputAmount()\" */ shl(224, 0x42301c23))\n                    /// @src 13:37099:37125  \"InsufficientOutputAmount()\"\n                    revert(_11, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 4)\n                }\n                /// @src 13:37135:37166  \"IWETH(weth).withdraw(amountOut)\"\n                if iszero(extcodesize(/** @src 13:1431:1473  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\" */ _1))\n                /// @src 13:37135:37166  \"IWETH(weth).withdraw(amountOut)\"\n                {\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    revert(/** @src 13:36733:36734  \"0\" */ 0x00, 0x00)\n                }\n                /// @src 13:37135:37166  \"IWETH(weth).withdraw(amountOut)\"\n                let _12 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                /// @src 13:37135:37166  \"IWETH(weth).withdraw(amountOut)\"\n                mstore(_12, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ shl(224, 0x2e1a7d4d))\n                /// @src 13:37135:37166  \"IWETH(weth).withdraw(amountOut)\"\n                let _13 := call(gas(), /** @src 13:1431:1473  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\" */ _1, /** @src 13:36733:36734  \"0\" */ 0x00, /** @src 13:37135:37166  \"IWETH(weth).withdraw(amountOut)\" */ _12, sub(abi_encode_uint256(add(_12, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 4), /** @src 13:37135:37166  \"IWETH(weth).withdraw(amountOut)\" */ expr_3), _12), _12, /** @src 13:36733:36734  \"0\" */ 0x00)\n                /// @src 13:37135:37166  \"IWETH(weth).withdraw(amountOut)\"\n                if iszero(_13) { revert_forward() }\n                if _13\n                {\n                    finalize_allocation_16266(_12)\n                    abi_decode(_12, _12)\n                }\n                /// @src 13:37212:37221  \"amountOut\"\n                fun_safeTransferETH(param_4, expr_3)\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                return(mload(64), /** @src 13:36733:36734  \"0\" */ 0x00)\n            }\n            /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n            function external_fun_acceptOwnership()\n            {\n                if callvalue() { revert(0, 0) }\n                let _1 := 0\n                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                let _2 := sload(/** @src 16:2777:2795  \"_newPotentialOwner\" */ 0x01)\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let _3 := sub(shl(160, 1), 1)\n                /// @src 16:2759:2818  \"if (msg.sender != _newPotentialOwner) revert Unauthorized()\"\n                if /** @src 16:2763:2795  \"msg.sender != _newPotentialOwner\" */ iszero(eq(/** @src 16:2763:2773  \"msg.sender\" */ caller(), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(_2, _3)))\n                /// @src 16:2759:2818  \"if (msg.sender != _newPotentialOwner) revert Unauthorized()\"\n                {\n                    /// @src 16:2804:2818  \"Unauthorized()\"\n                    let _4 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                    /// @src 16:2804:2818  \"Unauthorized()\"\n                    mstore(_4, shl(232, 8565801))\n                    revert(_4, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 4)\n                }\n                let _5 := shl(160, 0xffffffffffffffffffffffff)\n                sstore(/** @src 16:2777:2795  \"_newPotentialOwner\" */ 0x01, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(_2, _5))\n                let _6 := sload(_1)\n                /// @src 16:2870:2910  \"OwnershipTransferred(_owner, msg.sender)\"\n                let _7 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                /// @src 16:2870:2910  \"OwnershipTransferred(_owner, msg.sender)\"\n                log3(_7, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _1, /** @src 16:2870:2910  \"OwnershipTransferred(_owner, msg.sender)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(_6, _3), /** @src 16:2763:2773  \"msg.sender\" */ caller())\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                sstore(_1, or(and(_6, _5), /** @src 16:2763:2773  \"msg.sender\" */ caller()))\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                return(_7, _1)\n            }\n            function abi_decode_uint256t_array_address_dyn_calldatat_addresst_uint256(dataEnd) -> value0, value1, value2, value3, value4\n            {\n                if slt(add(dataEnd, not(3)), 128) { revert(0, 0) }\n                value0 := calldataload(4)\n                let offset := calldataload(36)\n                if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n                let value1_1, value2_1 := abi_decode_array_address_dyn_calldata(add(4, offset), dataEnd)\n                value1 := value1_1\n                value2 := value2_1\n                let value := calldataload(68)\n                validator_revert_address(value)\n                value3 := value\n                value4 := calldataload(100)\n            }\n            function external_fun_swapExactETHForTokens()\n            {\n                let param, param_1, param_2, param_3, param_4 := abi_decode_uint256t_array_address_dyn_calldatat_addresst_uint256(calldatasize())\n                /// @src 13:23873:23881  \"deadline\"\n                fun_ensure(param_4)\n                /// @src 13:1431:1473  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\"\n                let _1 := 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\n                /// @src 13:23923:23964  \"if (path[0] != weth) revert InvalidPath()\"\n                if /** @src 13:23927:23942  \"path[0] != weth\" */ iszero(eq(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 13:23927:23934  \"path[0]\" */ read_from_calldatat_address(calldata_array_index_access_address_dyn_calldata_16264(param_1, param_2)), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ sub(shl(160, 1), 1)), /** @src 13:1431:1473  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\" */ _1))\n                /// @src 13:23923:23964  \"if (path[0] != weth) revert InvalidPath()\"\n                {\n                    /// @src 13:23951:23964  \"InvalidPath()\"\n                    let _2 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                    /// @src 13:23951:23964  \"InvalidPath()\"\n                    mstore(_2, /** @src 13:28052:28065  \"InvalidPath()\" */ shl(224, 0x20db8267))\n                    /// @src 13:23951:23964  \"InvalidPath()\"\n                    revert(_2, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 4)\n                }\n                /// @src 13:23974:24020  \"address factory = OpenMevLibrary.SUSHI_FACTORY\"\n                let var_factory := /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ 0xc0aee478e3658e2610c5f7a4a2e1777ce9e4f2ac\n                /// @src 13:24030:24119  \"OpenMevLibrary.Swap[] memory swaps = OpenMevLibrary.getSwapsOut(factory, msg.value, path)\"\n                let var_swaps_mpos := /** @src 13:24067:24119  \"OpenMevLibrary.getSwapsOut(factory, msg.value, path)\" */ fun_getSwapsOut_16262(/** @src 13:24103:24112  \"msg.value\" */ callvalue(), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ abi_decode_available_length_array_address_dyn(/** @src 13:24067:24119  \"OpenMevLibrary.getSwapsOut(factory, msg.value, path)\" */ param_1, param_2, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ calldatasize()))\n                /// @src 13:24178:24190  \"_dec(length)\"\n                let expr := fun_dec(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 13:24146:24158  \"swaps.length\" */ var_swaps_mpos))\n                /// @src 13:24168:24526  \"if (swaps[_dec(length)].amountOut < amountOutMin) {...\"\n                if /** @src 13:24172:24216  \"swaps[_dec(length)].amountOut < amountOutMin\" */ lt(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 13:24172:24201  \"swaps[_dec(length)].amountOut\" */ add(/** @src 13:24172:24191  \"swaps[_dec(length)]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, expr)), /** @src 13:24172:24201  \"swaps[_dec(length)].amountOut\" */ 192)), /** @src 13:24172:24216  \"swaps[_dec(length)].amountOut < amountOutMin\" */ param)\n                /// @src 13:24168:24526  \"if (swaps[_dec(length)].amountOut < amountOutMin) {...\"\n                {\n                    /// @src 13:24232:24256  \"factory = BACKUP_FACTORY\"\n                    var_factory := /** @src 13:1522:1564  \"0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f\" */ 0x5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f\n                    /// @src 13:24358:24418  \"swaps = OpenMevLibrary.getSwapsOut(factory, msg.value, path)\"\n                    var_swaps_mpos := /** @src 13:24366:24418  \"OpenMevLibrary.getSwapsOut(factory, msg.value, path)\" */ fun_getSwapsOut(/** @src 13:24103:24112  \"msg.value\" */ callvalue(), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ abi_decode_available_length_array_address_dyn(/** @src 13:24366:24418  \"OpenMevLibrary.getSwapsOut(factory, msg.value, path)\" */ param_1, param_2, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ calldatasize()))\n                    /// @src 13:24432:24515  \"if (swaps[_dec(length)].amountOut < amountOutMin) revert InsufficientOutputAmount()\"\n                    if /** @src 13:24436:24480  \"swaps[_dec(length)].amountOut < amountOutMin\" */ lt(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 13:24436:24465  \"swaps[_dec(length)].amountOut\" */ add(/** @src 13:24436:24455  \"swaps[_dec(length)]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, expr)), /** @src 13:24172:24201  \"swaps[_dec(length)].amountOut\" */ 192)), /** @src 13:24436:24480  \"swaps[_dec(length)].amountOut < amountOutMin\" */ param)\n                    /// @src 13:24432:24515  \"if (swaps[_dec(length)].amountOut < amountOutMin) revert InsufficientOutputAmount()\"\n                    {\n                        /// @src 13:24489:24515  \"InsufficientOutputAmount()\"\n                        let _3 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                        /// @src 13:24489:24515  \"InsufficientOutputAmount()\"\n                        mstore(_3, /** @src 13:28588:28614  \"InsufficientOutputAmount()\" */ shl(224, 0x42301c23))\n                        /// @src 13:24489:24515  \"InsufficientOutputAmount()\"\n                        revert(_3, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 4)\n                    }\n                }\n                /// @src 13:24536:24577  \"IWETH(weth).deposit{ value: msg.value }()\"\n                if iszero(extcodesize(/** @src 13:1431:1473  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\" */ _1))\n                /// @src 13:24536:24577  \"IWETH(weth).deposit{ value: msg.value }()\"\n                {\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 13:24536:24577  \"IWETH(weth).deposit{ value: msg.value }()\"\n                let _4 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                /// @src 13:24536:24577  \"IWETH(weth).deposit{ value: msg.value }()\"\n                mstore(_4, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ shl(228, 0x0d0e30db))\n                /// @src 13:24536:24577  \"IWETH(weth).deposit{ value: msg.value }()\"\n                let _5 := call(gas(), /** @src 13:1431:1473  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\" */ _1, /** @src 13:24103:24112  \"msg.value\" */ callvalue(), /** @src 13:24536:24577  \"IWETH(weth).deposit{ value: msg.value }()\" */ _4, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 4, /** @src 13:24536:24577  \"IWETH(weth).deposit{ value: msg.value }()\" */ _4, /** @src -1:-1:-1 */ 0)\n                /// @src 13:24536:24577  \"IWETH(weth).deposit{ value: msg.value }()\"\n                if iszero(_5) { revert_forward() }\n                if _5\n                {\n                    finalize_allocation_16266(_4)\n                    abi_decode(_4, _4)\n                }\n                /// @src 13:24612:24625  \"swaps[0].pair\"\n                let _6 := read_from_memoryt_address(add(/** @src 13:24612:24620  \"swaps[0]\" */ mload(memory_array_index_access_struct_Swap_dyn_16265(var_swaps_mpos)), /** @src 13:24612:24625  \"swaps[0].pair\" */ 128))\n                /// @src 13:24627:24644  \"swaps[0].amountIn\"\n                fun_safeTransfer_16321(_6, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 13:24627:24644  \"swaps[0].amountIn\" */ add(/** @src 13:24627:24635  \"swaps[0]\" */ mload(memory_array_index_access_struct_Swap_dyn_16265(var_swaps_mpos)), /** @src 13:24627:24644  \"swaps[0].amountIn\" */ 160)))\n                /// @src 13:24655:24681  \"amounts = _swap(to, swaps)\"\n                let var_amounts_mpos := /** @src 13:24665:24681  \"_swap(to, swaps)\" */ fun_swap(param_3, var_swaps_mpos)\n                /// @src 13:24753:24758  \"swaps\"\n                fun_backrunSwaps(var_factory, var_swaps_mpos)\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_array_uint256_dyn(memPos, var_amounts_mpos), memPos))\n            }\n            function external_fun_getAmountIn()\n            {\n                if callvalue() { revert(0, 0) }\n                let param, param_1, param_2 := abi_decode_uint256t_uint256t_uint256(calldatasize())\n                let ret := /** @src 13:37884:37944  \"OpenMevLibrary.getAmountIn(amountOut, reserveIn, reserveOut)\" */ fun_getAmountIn(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ param, param_1, param_2)\n                let memPos := mload(64)\n                mstore(memPos, ret)\n                return(memPos, 32)\n            }\n            function external_fun_swapTokensForExactTokens()\n            {\n                if callvalue() { revert(0, 0) }\n                let param, param_1, param_2, param_3, param_4, param_5 := abi_decode_uint256t_uint256t_array_address_dyn_calldatat_addresst_uint256(calldatasize())\n                /// @src 13:22032:22040  \"deadline\"\n                fun_ensure(param_5)\n                /// @src 13:22051:22097  \"address factory = OpenMevLibrary.SUSHI_FACTORY\"\n                let var_factory := /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ 0xc0aee478e3658e2610c5f7a4a2e1777ce9e4f2ac\n                /// @src 13:22183:22271  \"OpenMevLibrary.Swap[] memory swaps = OpenMevLibrary.getSwapsIn(factory, amountOut, path)\"\n                let var_swaps_mpos := /** @src 13:22220:22271  \"OpenMevLibrary.getSwapsIn(factory, amountOut, path)\" */ fun_getSwapsIn_16324(param, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ abi_decode_available_length_array_address_dyn(/** @src 13:22220:22271  \"OpenMevLibrary.getSwapsIn(factory, amountOut, path)\" */ param_2, param_3, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ calldatasize()))\n                /// @src 13:22281:22608  \"if (swaps[0].amountIn > amountInMax) {...\"\n                if /** @src 13:22285:22316  \"swaps[0].amountIn > amountInMax\" */ gt(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 13:22285:22302  \"swaps[0].amountIn\" */ add(/** @src 13:22285:22293  \"swaps[0]\" */ mload(memory_array_index_access_struct_Swap_dyn_16265(var_swaps_mpos)), /** @src 13:22285:22302  \"swaps[0].amountIn\" */ 160)), /** @src 13:22285:22316  \"swaps[0].amountIn > amountInMax\" */ param_1)\n                /// @src 13:22281:22608  \"if (swaps[0].amountIn > amountInMax) {...\"\n                {\n                    /// @src 13:22332:22356  \"factory = BACKUP_FACTORY\"\n                    var_factory := /** @src 13:1522:1564  \"0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f\" */ 0x5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f\n                    /// @src 13:22458:22517  \"swaps = OpenMevLibrary.getSwapsIn(factory, amountOut, path)\"\n                    var_swaps_mpos := /** @src 13:22466:22517  \"OpenMevLibrary.getSwapsIn(factory, amountOut, path)\" */ fun_getSwapsIn_16326(param, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ abi_decode_available_length_array_address_dyn(/** @src 13:22466:22517  \"OpenMevLibrary.getSwapsIn(factory, amountOut, path)\" */ param_2, param_3, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ calldatasize()))\n                    /// @src 13:22531:22597  \"if (swaps[0].amountIn > amountInMax) revert ExcessiveInputAmount()\"\n                    if /** @src 13:22535:22566  \"swaps[0].amountIn > amountInMax\" */ gt(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 13:22535:22552  \"swaps[0].amountIn\" */ add(/** @src 13:22535:22543  \"swaps[0]\" */ mload(memory_array_index_access_struct_Swap_dyn_16265(var_swaps_mpos)), /** @src 13:22285:22302  \"swaps[0].amountIn\" */ 160)), /** @src 13:22535:22566  \"swaps[0].amountIn > amountInMax\" */ param_1)\n                    /// @src 13:22531:22597  \"if (swaps[0].amountIn > amountInMax) revert ExcessiveInputAmount()\"\n                    {\n                        /// @src 13:22575:22597  \"ExcessiveInputAmount()\"\n                        let _1 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                        /// @src 13:22575:22597  \"ExcessiveInputAmount()\"\n                        mstore(_1, /** @src 13:26516:26538  \"ExcessiveInputAmount()\" */ shl(224, 0xe1b0da4f))\n                        /// @src 13:22575:22597  \"ExcessiveInputAmount()\"\n                        revert(_1, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 4)\n                    }\n                }\n                /// @src 13:22618:22632  \"ERC20(path[0])\"\n                let expr_address := cleanup_address(/** @src 13:22624:22631  \"path[0]\" */ read_from_calldatat_address(calldata_array_index_access_address_dyn_calldata_16264(param_2, param_3)))\n                /// @src 13:22662:22675  \"swaps[0].pair\"\n                let _2 := read_from_memoryt_address(add(/** @src 13:22662:22670  \"swaps[0]\" */ mload(memory_array_index_access_struct_Swap_dyn_16265(var_swaps_mpos)), /** @src 13:22662:22675  \"swaps[0].pair\" */ 128))\n                /// @src 13:22677:22694  \"swaps[0].amountIn\"\n                fun_safeTransferFrom(expr_address, /** @src 13:22650:22660  \"msg.sender\" */ caller(), /** @src 13:22677:22694  \"swaps[0].amountIn\" */ _2, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 13:22677:22694  \"swaps[0].amountIn\" */ add(/** @src 13:22677:22685  \"swaps[0]\" */ mload(memory_array_index_access_struct_Swap_dyn_16265(var_swaps_mpos)), /** @src 13:22285:22302  \"swaps[0].amountIn\" */ 160)))\n                /// @src 13:22705:22731  \"amounts = _swap(to, swaps)\"\n                let var_amounts_mpos := /** @src 13:22715:22731  \"_swap(to, swaps)\" */ fun_swap(param_4, var_swaps_mpos)\n                /// @src 13:22802:22807  \"swaps\"\n                fun_backrunSwaps(var_factory, var_swaps_mpos)\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_array_uint256_dyn(memPos, var_amounts_mpos), memPos))\n            }\n            function abi_encode_address(value, pos)\n            {\n                mstore(pos, and(value, sub(shl(160, 1), 1)))\n            }\n            function abi_encode_address_16470(headStart) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, /** @src 13:1752:1794  \"0xF5BCE5077908a1b7370B9ae04AdC565EBd643966\" */ 0xf5bce5077908a1b7370b9ae04adc565ebd643966)\n            }\n            /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n            function abi_encode_tuple_address(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n            }\n            function external_fun_owner()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let cleaned := and(sload(0), sub(shl(160, 1), 1))\n                let memPos := mload(64)\n                mstore(memPos, cleaned)\n                return(memPos, 32)\n            }\n            function abi_encode_bool(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, iszero(iszero(value0)))\n            }\n            function external_fun_isOwner()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                /// @src 16:1659:1686  \"return msg.sender == _owner\"\n                let var := /** @src 16:1666:1686  \"msg.sender == _owner\" */ eq(/** @src 16:1666:1676  \"msg.sender\" */ caller(), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(sload(0), sub(shl(160, 1), 1)))\n                let memPos := mload(64)\n                mstore(memPos, var)\n                return(memPos, 32)\n            }\n            function external_fun_executeOperation()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 160)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let offset := calldataload(4)\n                let _1 := 0xffffffffffffffff\n                if gt(offset, _1)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let value0, value1 := abi_decode_array_address_dyn_calldata(add(4, offset), calldatasize())\n                let offset_1 := calldataload(36)\n                if gt(offset_1, _1)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let value2, value3 := abi_decode_array_address_dyn_calldata(add(4, offset_1), calldatasize())\n                let offset_2 := calldataload(68)\n                if gt(offset_2, _1)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let value4, value5 := abi_decode_array_address_dyn_calldata(add(4, offset_2), calldatasize())\n                let value := calldataload(100)\n                validator_revert_address(value)\n                let offset_3 := calldataload(132)\n                if gt(offset_3, _1)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let value7, value8 := abi_decode_bytes_calldata(add(4, offset_3), calldatasize())\n                let ret := fun_executeOperation(value0, value1, value2, value3, value4, value5, value, value7, value8)\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_bool(memPos, ret), memPos))\n            }\n            function external_fun_quote()\n            {\n                if callvalue() { revert(0, 0) }\n                let param, param_1, param_2 := abi_decode_uint256t_uint256t_uint256(calldatasize())\n                let ret := /** @src 13:37398:37447  \"OpenMevLibrary.quote(amountA, reserveA, reserveB)\" */ fun_quote(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ param, param_1, param_2)\n                let memPos := mload(64)\n                mstore(memPos, ret)\n                return(memPos, 32)\n            }\n            function external_fun_removeLiquidityETHSupportingFeeOnTransferTokens()\n            {\n                if callvalue() { revert(0, 0) }\n                let param, param_1, param_2, param_3, param_4, param_5 := abi_decode_addresst_uint256t_uint256t_uint256t_addresst_uint256(calldatasize())\n                let ret := fun_removeLiquidityETHSupportingFeeOnTransferTokens(param, param_1, param_2, param_3, param_4, param_5)\n                let memPos := mload(64)\n                mstore(memPos, ret)\n                return(memPos, 32)\n            }\n            function external_fun_harvest()\n            {\n                if slt(add(calldatasize(), not(3)), 96)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let _1 := 4\n                let value0 := calldataload(_1)\n                let offset := calldataload(36)\n                let _2 := 0xffffffffffffffff\n                if gt(offset, _2)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let value1, value2 := abi_decode_array_address_dyn_calldata(add(_1, offset), calldatasize())\n                let offset_1 := calldataload(68)\n                if gt(offset_1, _2)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let value3, value4 := abi_decode_array_address_dyn_calldata(add(_1, offset_1), calldatasize())\n                /// @src 16:1384:1520  \"modifier onlyOwner() {...\"\n                fun_onlyOwner()\n                /// @src 13:51190:51229  \"percentage > 100 || _isZero(percentage)\"\n                let expr := /** @src 13:51190:51206  \"percentage > 100\" */ gt(value0, /** @src 13:51203:51206  \"100\" */ 0x64)\n                /// @src 13:51190:51229  \"percentage > 100 || _isZero(percentage)\"\n                if iszero(expr)\n                {\n                    expr := /** @src 12:19729:19788  \"assembly {...\" */ iszero(/** @src 13:51210:51229  \"_isZero(percentage)\" */ value0)\n                }\n                /// @src 13:51186:51250  \"if (percentage > 100 || _isZero(percentage)) revert NotPercent()\"\n                if expr\n                {\n                    /// @src 13:51238:51250  \"NotPercent()\"\n                    let _3 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                    /// @src 13:51238:51250  \"NotPercent()\"\n                    mstore(_3, shl(228, 0x0caf861d))\n                    revert(_3, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _1)\n                }\n                /// @src 13:51309:51356  \"if (_isZero(numReceivers)) revert NoReceivers()\"\n                if /** @src 12:19729:19788  \"assembly {...\" */ iszero(/** @src 13:51313:51334  \"_isZero(numReceivers)\" */ value4)\n                /// @src 13:51309:51356  \"if (_isZero(numReceivers)) revert NoReceivers()\"\n                {\n                    /// @src 13:51343:51356  \"NoReceivers()\"\n                    let _4 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                    /// @src 13:51343:51356  \"NoReceivers()\"\n                    mstore(_4, shl(224, 0xcfebf47b))\n                    revert(_4, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _1)\n                }\n                /// @src 13:51409:51450  \"if (_isZero(numTokens)) revert NoTokens()\"\n                if /** @src 12:19729:19788  \"assembly {...\" */ iszero(/** @src 13:51413:51431  \"_isZero(numTokens)\" */ value2)\n                /// @src 13:51409:51450  \"if (_isZero(numTokens)) revert NoTokens()\"\n                {\n                    /// @src 13:51440:51450  \"NoTokens()\"\n                    let _5 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                    /// @src 13:51440:51450  \"NoTokens()\"\n                    mstore(_5, shl(224, 0xdf957883))\n                    revert(_5, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _1)\n                }\n                /// @src 13:51502:51511  \"uint256 i\"\n                let var_i := /** @src -1:-1:-1 */ 0\n                /// @src 13:51497:51932  \"for (uint256 i; i < numTokens; i = _inc(i)) {...\"\n                for { }\n                /** @src 13:51513:51526  \"i < numTokens\" */ lt(var_i, value2)\n                /// @src 13:51502:51511  \"uint256 i\"\n                {\n                    /// @src 13:51528:51539  \"i = _inc(i)\"\n                    var_i := /** @src 12:1287:1291  \"1000\" */ add(/** @src 13:51532:51539  \"_inc(i)\" */ var_i, /** @src 12:20244:20245  \"1\" */ 0x01)\n                }\n                /// @src 13:51528:51539  \"i = _inc(i)\"\n                {\n                    /// @src 13:51617:51629  \"ERC20(token)\"\n                    let expr_address := cleanup_address(/** @src 13:51571:51580  \"tokens[i]\" */ read_from_calldatat_address(calldata_array_index_access_address_dyn_calldata(value1, value2, var_i)))\n                    /// @src 13:51617:51654  \"ERC20(token).balanceOf(address(this))\"\n                    let _6 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                    /// @src 13:51617:51654  \"ERC20(token).balanceOf(address(this))\"\n                    mstore(_6, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ shl(224, 0x70a08231))\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    let _7 := 32\n                    /// @src 13:51617:51654  \"ERC20(token).balanceOf(address(this))\"\n                    let _8 := staticcall(gas(), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 13:51617:51639  \"ERC20(token).balanceOf\" */ expr_address, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ sub(shl(160, 1), 1)), /** @src 13:51617:51654  \"ERC20(token).balanceOf(address(this))\" */ _6, sub(abi_encode_tuple_address(add(_6, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _1), /** @src 13:51648:51652  \"this\" */ address()), /** @src 13:51617:51654  \"ERC20(token).balanceOf(address(this))\" */ _6), _6, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _7)\n                    /// @src 13:51617:51654  \"ERC20(token).balanceOf(address(this))\"\n                    if iszero(_8) { revert_forward() }\n                    let expr_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 13:51617:51654  \"ERC20(token).balanceOf(address(this))\"\n                    if _8\n                    {\n                        let _9 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _7\n                        /// @src 13:51617:51654  \"ERC20(token).balanceOf(address(this))\"\n                        if gt(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _7, /** @src 13:51617:51654  \"ERC20(token).balanceOf(address(this))\" */ returndatasize()) { _9 := returndatasize() }\n                        finalize_allocation(_6, _9)\n                        expr_1 := abi_decode_uint256_fromMemory(_6, add(_6, _9))\n                    }\n                    /// @src 13:51617:51667  \"ERC20(token).balanceOf(address(this)) * percentage\"\n                    let expr_2 := checked_mul_uint256(expr_1, value0)\n                    /// @src 13:51594:51691  \"balanceToDistribute = (ERC20(token).balanceOf(address(this)) * percentage) / (100 * numReceivers)\"\n                    let var_balanceToDistribute := /** @src 13:51616:51691  \"(ERC20(token).balanceOf(address(this)) * percentage) / (100 * numReceivers)\" */ checked_div_uint256(expr_2, /** @src 13:51672:51690  \"100 * numReceivers\" */ checked_mul_uint256_16334(value4))\n                    /// @src 13:51705:51922  \"if (_isNonZero(balanceToDistribute)) {...\"\n                    if /** @src 12:19970:20037  \"assembly {...\" */ iszero(iszero(/** @src 13:51709:51740  \"_isNonZero(balanceToDistribute)\" */ var_balanceToDistribute))\n                    /// @src 13:51705:51922  \"if (_isNonZero(balanceToDistribute)) {...\"\n                    {\n                        /// @src 13:51765:51774  \"uint256 j\"\n                        let var_j := /** @src -1:-1:-1 */ 0\n                        /// @src 13:51760:51908  \"for (uint256 j; j < numReceivers; j = _inc(j)) {...\"\n                        for { }\n                        /** @src 13:51776:51792  \"j < numReceivers\" */ lt(var_j, value4)\n                        /// @src 13:51765:51774  \"uint256 j\"\n                        {\n                            /// @src 13:51794:51805  \"j = _inc(j)\"\n                            var_j := /** @src 12:1287:1291  \"1000\" */ add(/** @src 13:51798:51805  \"_inc(j)\" */ var_j, /** @src 12:20244:20245  \"1\" */ 0x01)\n                        }\n                        /// @src 13:51794:51805  \"j = _inc(j)\"\n                        {\n                            /// @src 13:51869:51888  \"balanceToDistribute\"\n                            fun_safeTransfer(expr_address, /** @src 13:51855:51867  \"receivers[j]\" */ read_from_calldatat_address(calldata_array_index_access_address_dyn_calldata(value3, value4, var_j)), /** @src 13:51869:51888  \"balanceToDistribute\" */ var_balanceToDistribute)\n                        }\n                    }\n                }\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                return(mload(64), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n            function external_fun_swapExactETHForTokensSupportingFeeOnTransferTokens()\n            {\n                let param, param_1, param_2, param_3, param_4 := abi_decode_uint256t_array_address_dyn_calldatat_addresst_uint256(calldatasize())\n                /// @src 13:35086:35094  \"deadline\"\n                fun_ensure(param_4)\n                /// @src 13:1431:1473  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\"\n                let _1 := 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\n                /// @src 13:35136:35177  \"if (path[0] != weth) revert InvalidPath()\"\n                if /** @src 13:35140:35155  \"path[0] != weth\" */ iszero(eq(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 13:35140:35147  \"path[0]\" */ read_from_calldatat_address(calldata_array_index_access_address_dyn_calldata_16264(param_1, param_2)), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ sub(shl(160, 1), 1)), /** @src 13:1431:1473  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\" */ _1))\n                /// @src 13:35136:35177  \"if (path[0] != weth) revert InvalidPath()\"\n                {\n                    /// @src 13:35164:35177  \"InvalidPath()\"\n                    let _2 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                    /// @src 13:35164:35177  \"InvalidPath()\"\n                    mstore(_2, /** @src 13:28052:28065  \"InvalidPath()\" */ shl(224, 0x20db8267))\n                    /// @src 13:35164:35177  \"InvalidPath()\"\n                    revert(_2, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 4)\n                }\n                /// @src 13:35281:35321  \"IWETH(weth).deposit{ value: amountIn }()\"\n                if iszero(extcodesize(/** @src 13:1431:1473  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\" */ _1))\n                /// @src 13:35281:35321  \"IWETH(weth).deposit{ value: amountIn }()\"\n                {\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    revert(/** @src 13:35145:35146  \"0\" */ 0x00, 0x00)\n                }\n                /// @src 13:35281:35321  \"IWETH(weth).deposit{ value: amountIn }()\"\n                let _3 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                /// @src 13:35281:35321  \"IWETH(weth).deposit{ value: amountIn }()\"\n                mstore(_3, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ shl(228, 0x0d0e30db))\n                /// @src 13:35281:35321  \"IWETH(weth).deposit{ value: amountIn }()\"\n                let _4 := call(gas(), /** @src 13:1431:1473  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\" */ _1, /** @src 13:35262:35271  \"msg.value\" */ callvalue(), /** @src 13:35281:35321  \"IWETH(weth).deposit{ value: amountIn }()\" */ _3, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 4, /** @src 13:35281:35321  \"IWETH(weth).deposit{ value: amountIn }()\" */ _3, /** @src 13:35145:35146  \"0\" */ 0x00)\n                /// @src 13:35281:35321  \"IWETH(weth).deposit{ value: amountIn }()\"\n                if iszero(_4) { revert_forward() }\n                if _4\n                {\n                    finalize_allocation_16266(_3)\n                    abi_decode(_3, _3)\n                }\n                /// @src 13:35388:35395  \"path[0]\"\n                let expr := read_from_calldatat_address(calldata_array_index_access_address_dyn_calldata_16264(param_1, param_2))\n                /// @src 13:35407:35415  \"amountIn\"\n                fun_safeTransfer_16321(/** @src 13:35356:35405  \"OpenMevLibrary.pairFor(factory, path[0], path[1])\" */ fun_pairFor_16304(expr, /** @src 13:35397:35404  \"path[1]\" */ read_from_calldatat_address(calldata_array_index_access_address_dyn_calldata_16303(param_1, param_2))), /** @src 13:35262:35271  \"msg.value\" */ callvalue())\n                /// @src 13:35461:35478  \"_dec(path.length)\"\n                let expr_1 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ add(/** @src 13:35466:35477  \"path.length\" */ param_2, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ not(0))\n                /// @src 13:35450:35490  \"ERC20(path[_dec(path.length)]).balanceOf\"\n                let expr_address := cleanup_address(/** @src 13:35450:35480  \"ERC20(path[_dec(path.length)])\" */ cleanup_address(/** @src 13:35456:35479  \"path[_dec(path.length)]\" */ read_from_calldatat_address(calldata_array_index_access_address_dyn_calldata(param_1, param_2, expr_1))))\n                /// @src 13:35450:35494  \"ERC20(path[_dec(path.length)]).balanceOf(to)\"\n                let _5 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                /// @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\"\n                let _6 := shl(224, 0x70a08231)\n                /// @src 13:35450:35494  \"ERC20(path[_dec(path.length)]).balanceOf(to)\"\n                mstore(_5, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ _6)\n                /// @src 13:35450:35494  \"ERC20(path[_dec(path.length)]).balanceOf(to)\"\n                let _7 := 32\n                let _8 := staticcall(gas(), expr_address, _5, sub(abi_encode_tuple_address(add(_5, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 4), /** @src 13:35450:35494  \"ERC20(path[_dec(path.length)]).balanceOf(to)\" */ param_3), _5), _5, _7)\n                if iszero(_8) { revert_forward() }\n                let expr_2 := /** @src 13:35145:35146  \"0\" */ 0x00\n                /// @src 13:35450:35494  \"ERC20(path[_dec(path.length)]).balanceOf(to)\"\n                if _8\n                {\n                    let _9 := _7\n                    if gt(_7, returndatasize()) { _9 := returndatasize() }\n                    finalize_allocation(_5, _9)\n                    expr_2 := abi_decode_uint256_fromMemory(_5, add(_5, _9))\n                }\n                /// @src 13:35504:35557  \"_swapSupportingFeeOnTransferTokens(path, to, factory)\"\n                fun_swapSupportingFeeOnTransferTokens_16342(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ abi_decode_available_length_array_address_dyn(/** @src 13:35504:35557  \"_swapSupportingFeeOnTransferTokens(path, to, factory)\" */ param_1, param_2, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ calldatasize()), /** @src 13:35504:35557  \"_swapSupportingFeeOnTransferTokens(path, to, factory)\" */ param_3)\n                /// @src 13:35571:35611  \"ERC20(path[_dec(path.length)]).balanceOf\"\n                let expr_address_1 := cleanup_address(/** @src 13:35571:35601  \"ERC20(path[_dec(path.length)])\" */ cleanup_address(/** @src 13:35577:35600  \"path[_dec(path.length)]\" */ read_from_calldatat_address(calldata_array_index_access_address_dyn_calldata(param_1, param_2, expr_1))))\n                /// @src 13:35571:35615  \"ERC20(path[_dec(path.length)]).balanceOf(to)\"\n                let _10 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                /// @src 13:35571:35615  \"ERC20(path[_dec(path.length)]).balanceOf(to)\"\n                mstore(_10, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ _6)\n                /// @src 13:35571:35615  \"ERC20(path[_dec(path.length)]).balanceOf(to)\"\n                let _11 := staticcall(gas(), expr_address_1, _10, sub(abi_encode_tuple_address(add(_10, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 4), /** @src 13:35571:35615  \"ERC20(path[_dec(path.length)]).balanceOf(to)\" */ param_3), _10), _10, /** @src 13:35450:35494  \"ERC20(path[_dec(path.length)]).balanceOf(to)\" */ _7)\n                /// @src 13:35571:35615  \"ERC20(path[_dec(path.length)]).balanceOf(to)\"\n                if iszero(_11) { revert_forward() }\n                let expr_3 := /** @src 13:35145:35146  \"0\" */ 0x00\n                /// @src 13:35571:35615  \"ERC20(path[_dec(path.length)]).balanceOf(to)\"\n                if _11\n                {\n                    let _12 := /** @src 13:35450:35494  \"ERC20(path[_dec(path.length)]).balanceOf(to)\" */ _7\n                    /// @src 13:35571:35615  \"ERC20(path[_dec(path.length)]).balanceOf(to)\"\n                    if gt(/** @src 13:35450:35494  \"ERC20(path[_dec(path.length)]).balanceOf(to)\" */ _7, /** @src 13:35571:35615  \"ERC20(path[_dec(path.length)]).balanceOf(to)\" */ returndatasize()) { _12 := returndatasize() }\n                    finalize_allocation(_10, _12)\n                    expr_3 := abi_decode_uint256_fromMemory(_10, add(_10, _12))\n                }\n                /// @src 13:35567:35693  \"if (ERC20(path[_dec(path.length)]).balanceOf(to) - balanceBefore < amountOutMin)...\"\n                if /** @src 13:35571:35646  \"ERC20(path[_dec(path.length)]).balanceOf(to) - balanceBefore < amountOutMin\" */ lt(/** @src 13:35571:35631  \"ERC20(path[_dec(path.length)]).balanceOf(to) - balanceBefore\" */ checked_sub_uint256(expr_3, expr_2), /** @src 13:35571:35646  \"ERC20(path[_dec(path.length)]).balanceOf(to) - balanceBefore < amountOutMin\" */ param)\n                /// @src 13:35567:35693  \"if (ERC20(path[_dec(path.length)]).balanceOf(to) - balanceBefore < amountOutMin)...\"\n                {\n                    /// @src 13:35667:35693  \"InsufficientOutputAmount()\"\n                    let _13 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                    /// @src 13:35667:35693  \"InsufficientOutputAmount()\"\n                    mstore(_13, /** @src 13:28588:28614  \"InsufficientOutputAmount()\" */ shl(224, 0x42301c23))\n                    /// @src 13:35667:35693  \"InsufficientOutputAmount()\"\n                    revert(_13, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 4)\n                }\n                return(mload(64), /** @src 13:35145:35146  \"0\" */ 0x00)\n            }\n            /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n            function external_fun_removeLiquidity()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 224)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let value := calldataload(4)\n                validator_revert_address(value)\n                let value_1 := calldataload(36)\n                validator_revert_address(value_1)\n                let value_2 := calldataload(164)\n                validator_revert_address(value_2)\n                let ret, ret_1 := fun_removeLiquidity(value, value_1, calldataload(68), calldataload(100), calldataload(132), value_2, calldataload(196))\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_uint256_uint256(memPos, ret, ret_1), memPos))\n            }\n            function external_fun_getAmountsOut()\n            {\n                if callvalue() { revert(0, 0) }\n                let param, param_1, param_2 := abi_decode_uint256t_array_address_dyn_calldata(calldatasize())\n                let _1 := abi_decode_available_length_array_address_dyn(/** @src 13:38133:38207  \"OpenMevLibrary.getAmountsOut(OpenMevLibrary.SUSHI_FACTORY, amountIn, path)\" */ param_1, param_2, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ calldatasize())\n                /// @src 12:9514:9525  \"path.length\"\n                let expr := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 12:9514:9525  \"path.length\" */ _1)\n                /// @src 12:9535:9571  \"if (length < 2) revert InvalidPath()\"\n                if /** @src 12:9539:9549  \"length < 2\" */ lt(expr, /** @src 12:9548:9549  \"2\" */ 0x02)\n                /// @src 12:9535:9571  \"if (length < 2) revert InvalidPath()\"\n                {\n                    /// @src 12:9558:9571  \"InvalidPath()\"\n                    let _2 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                    /// @src 12:9558:9571  \"InvalidPath()\"\n                    mstore(_2, /** @src 13:28052:28065  \"InvalidPath()\" */ shl(224, 0x20db8267))\n                    /// @src 12:9558:9571  \"InvalidPath()\"\n                    revert(_2, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 4)\n                }\n                /// @src 12:9581:9612  \"amounts = new uint256[](length)\"\n                let var_amounts_mpos := /** @src 12:9591:9612  \"new uint256[](length)\" */ allocate_and_zero_memory_array_array_uint256_dyn(expr)\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                if iszero(mload(var_amounts_mpos)) { panic_error_0x32() }\n                mstore(add(var_amounts_mpos, 32), param)\n                /// @src 12:9658:9667  \"uint256 i\"\n                let var_i := /** @src -1:-1:-1 */ 0\n                /// @src 12:9669:9685  \"i < _dec(length)\"\n                let _3 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ add(/** @src 12:9673:9685  \"_dec(length)\" */ expr, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ not(0))\n                /// @src 12:9653:9891  \"for (uint256 i; i < _dec(length); i = _inc(i)) {...\"\n                for { }\n                /** @src 12:9669:9685  \"i < _dec(length)\" */ lt(var_i, _3)\n                /// @src 12:9658:9667  \"uint256 i\"\n                {\n                    /// @src 12:9687:9698  \"i = _inc(i)\"\n                    var_i := /** @src 12:1287:1291  \"1000\" */ add(/** @src 12:9691:9698  \"_inc(i)\" */ var_i, /** @src 12:20463:20464  \"1\" */ 0x01)\n                }\n                /// @src 12:9687:9698  \"i = _inc(i)\"\n                {\n                    /// @src 12:9777:9784  \"path[i]\"\n                    let _4 := read_from_memoryt_address(memory_array_index_access_struct_Swap_dyn(_1, var_i))\n                    /// @src 12:9791:9798  \"_inc(i)\"\n                    let expr_1 := /** @src 12:1287:1291  \"1000\" */ add(/** @src 12:9791:9798  \"_inc(i)\" */ var_i, /** @src 12:20463:20464  \"1\" */ 0x01)\n                    /// @src 12:9756:9800  \"getReserves(factory, path[i], path[_inc(i)])\"\n                    let expr_component, expr_component_1 := fun_getReserves_16268(_4, /** @src 12:9786:9799  \"path[_inc(i)]\" */ read_from_memoryt_address(memory_array_index_access_struct_Swap_dyn(_1, expr_1)))\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    mstore(/** @src 12:9814:9880  \"amounts[_inc(i)] = getAmountOut(amounts[i], reserveIn, reserveOut)\" */ memory_array_index_access_struct_Swap_dyn(var_amounts_mpos, expr_1), /** @src 12:9833:9880  \"getAmountOut(amounts[i], reserveIn, reserveOut)\" */ fun_getAmountOut(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 12:9846:9856  \"amounts[i]\" */ memory_array_index_access_struct_Swap_dyn(var_amounts_mpos, var_i)), /** @src 12:9833:9880  \"getAmountOut(amounts[i], reserveIn, reserveOut)\" */ expr_component, expr_component_1))\n                }\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_array_uint256_dyn(memPos, var_amounts_mpos), memPos))\n            }\n            function external_fun_updateAaveAsset()\n            {\n                if slt(add(calldatasize(), not(3)), 64)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let value := calldataload(4)\n                let _1 := iszero(iszero(value))\n                if iszero(eq(value, _1))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let value_1 := calldataload(36)\n                validator_revert_address(value_1)\n                /// @src 16:1384:1520  \"modifier onlyOwner() {...\"\n                fun_onlyOwner()\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(value_1, sub(shl(160, 1), 1)))\n                mstore(32, /** @src 13:52208:52221  \"IS_AAVE_ASSET\" */ 0x02)\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let _2 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 64)\n                let value_2 := and(sload(_2), not(255))\n                sstore(_2, or(value_2, and(_1, 255)))\n                return(mload(64), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n            function external_fun_removeLiquidityETHWithPermit()\n            {\n                if callvalue() { revert(0, 0) }\n                let param, param_1, param_2, param_3, param_4, param_5, param_6, param_7, param_8, param_9 := abi_decode_addresst_uint256t_uint256t_uint256t_addresst_uint256t_boolt_uint8t_bytes32t_bytes32(calldatasize())\n                /// @src 12:3399:3425  \"sortTokens(tokenA, tokenB)\"\n                let expr_component, expr_component_1 := fun_sortTokens_16297(param)\n                /// @src 13:14450:14540  \"IUniswapV2Pair(OpenMevLibrary.pairFor(OpenMevLibrary.SUSHI_FACTORY, token, WETH09)).permit\"\n                let expr_address := cleanup_address(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 12:3442:3478  \"_asmPairFor(factory, token0, token1)\" */ fun_asmPairFor_16298(expr_component, expr_component_1), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ sub(shl(160, 1), 1)))\n                /// @src 13:14605:14647  \"approveMax ? type(uint256).max : liquidity\"\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 13:14605:14647  \"approveMax ? type(uint256).max : liquidity\"\n                switch param_6\n                case 0 { expr := param_1 }\n                default {\n                    expr := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ not(0)\n                }\n                /// @src 13:14450:14724  \"IUniswapV2Pair(OpenMevLibrary.pairFor(OpenMevLibrary.SUSHI_FACTORY, token, WETH09)).permit(...\"\n                if iszero(extcodesize(expr_address))\n                {\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 13:14450:14724  \"IUniswapV2Pair(OpenMevLibrary.pairFor(OpenMevLibrary.SUSHI_FACTORY, token, WETH09)).permit(...\"\n                let _1 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                /// @src 13:14450:14724  \"IUniswapV2Pair(OpenMevLibrary.pairFor(OpenMevLibrary.SUSHI_FACTORY, token, WETH09)).permit(...\"\n                mstore(_1, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ shl(224, 0xd505accf))\n                /// @src 13:14450:14724  \"IUniswapV2Pair(OpenMevLibrary.pairFor(OpenMevLibrary.SUSHI_FACTORY, token, WETH09)).permit(...\"\n                let _2 := call(gas(), expr_address, /** @src -1:-1:-1 */ 0, /** @src 13:14450:14724  \"IUniswapV2Pair(OpenMevLibrary.pairFor(OpenMevLibrary.SUSHI_FACTORY, token, WETH09)).permit(...\" */ _1, sub(abi_encode_address_address_uint256_uint256_uint8_bytes32_bytes32(add(_1, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 4), /** @src 13:14554:14564  \"msg.sender\" */ caller(), /** @src 13:14586:14590  \"this\" */ address(), /** @src 13:14450:14724  \"IUniswapV2Pair(OpenMevLibrary.pairFor(OpenMevLibrary.SUSHI_FACTORY, token, WETH09)).permit(...\" */ expr, param_5, param_7, param_8, param_9), _1), _1, /** @src -1:-1:-1 */ 0)\n                /// @src 13:14450:14724  \"IUniswapV2Pair(OpenMevLibrary.pairFor(OpenMevLibrary.SUSHI_FACTORY, token, WETH09)).permit(...\"\n                if iszero(_2) { revert_forward() }\n                if _2\n                {\n                    finalize_allocation_16266(_1)\n                    abi_decode(_1, _1)\n                }\n                /// @src 13:14761:14841  \"removeLiquidityETH(token, liquidity, amountTokenMin, amountETHMin, to, deadline)\"\n                let expr_component_2, expr_component_3 := fun_removeLiquidityETH(param, param_1, param_2, param_3, param_4, param_5)\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_uint256_uint256(memPos, expr_component_2, expr_component_3), memPos))\n            }\n            function abi_encode_uint256_uint256_uint256(headStart, value0, value1, value2) -> tail\n            {\n                tail := add(headStart, 96)\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), value1)\n                mstore(add(headStart, 64), value2)\n            }\n            function external_fun_addLiquidity()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 256)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let value := calldataload(4)\n                validator_revert_address(value)\n                let value_1 := calldataload(36)\n                validator_revert_address(value_1)\n                let value_2 := calldataload(196)\n                validator_revert_address(value_2)\n                /// @src 13:6190:6198  \"deadline\"\n                fun_ensure(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ calldataload(228))\n                /// @src 13:6230:6315  \"_addLiquidity(tokenA, tokenB, amountADesired, amountBDesired, amountAMin, amountBMin)\"\n                let expr_component, expr_component_1 := fun_addLiquidity(value, value_1, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ calldataload(68), calldataload(100), calldataload(132), calldataload(164))\n                /// @src 12:3399:3425  \"sortTokens(tokenA, tokenB)\"\n                let expr_component_2, expr_component_3 := fun_sortTokens(value, value_1)\n                /// @src 12:3435:3478  \"pair = _asmPairFor(factory, token0, token1)\"\n                let var_pair := /** @src 12:3442:3478  \"_asmPairFor(factory, token0, token1)\" */ fun_asmPairFor_16298(expr_component_2, expr_component_3)\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let _1 := sub(shl(160, 1), 1)\n                /// @src 13:6467:6474  \"amountA\"\n                fun_safeTransferFrom(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 13:6418:6431  \"ERC20(tokenA)\" */ value, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _1), /** @src 13:6449:6459  \"msg.sender\" */ caller(), /** @src 13:6467:6474  \"amountA\" */ var_pair, expr_component)\n                /// @src 13:6534:6541  \"amountB\"\n                fun_safeTransferFrom(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 13:6485:6498  \"ERC20(tokenB)\" */ value_1, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _1), /** @src 13:6449:6459  \"msg.sender\" */ caller(), /** @src 13:6534:6541  \"amountB\" */ var_pair, expr_component_1)\n                /// @src 13:6564:6593  \"IUniswapV2Pair(pair).mint(to)\"\n                let _2 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                /// @src 13:6564:6593  \"IUniswapV2Pair(pair).mint(to)\"\n                mstore(_2, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ shl(225, 0x35313c21))\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                mstore(/** @src 13:6564:6593  \"IUniswapV2Pair(pair).mint(to)\" */ add(_2, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 4), and(value_2, _1))\n                /// @src 13:6564:6593  \"IUniswapV2Pair(pair).mint(to)\"\n                let _3 := call(gas(), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 13:6564:6584  \"IUniswapV2Pair(pair)\" */ var_pair, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _1), /** @src -1:-1:-1 */ 0, /** @src 13:6564:6593  \"IUniswapV2Pair(pair).mint(to)\" */ _2, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 36, /** @src 13:6564:6593  \"IUniswapV2Pair(pair).mint(to)\" */ _2, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 32)\n                /// @src 13:6564:6593  \"IUniswapV2Pair(pair).mint(to)\"\n                if iszero(_3) { revert_forward() }\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 13:6564:6593  \"IUniswapV2Pair(pair).mint(to)\"\n                if _3\n                {\n                    let _4 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 32\n                    /// @src 13:6564:6593  \"IUniswapV2Pair(pair).mint(to)\"\n                    if gt(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _4, /** @src 13:6564:6593  \"IUniswapV2Pair(pair).mint(to)\" */ returndatasize()) { _4 := returndatasize() }\n                    finalize_allocation(_2, _4)\n                    expr := abi_decode_uint256_fromMemory(_2, add(_2, _4))\n                }\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_uint256_uint256_uint256(memPos, expr_component, expr_component_1, expr), memPos))\n            }\n            function external_fun_transferOwnership()\n            {\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let value := calldataload(4)\n                validator_revert_address(value)\n                /// @src 16:1384:1520  \"modifier onlyOwner() {...\"\n                fun_onlyOwner()\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let _1 := and(/** @src 16:2059:2081  \"newOwner == address(0)\" */ value, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ sub(shl(160, 1), 1))\n                /// @src 16:2055:2103  \"if (newOwner == address(0)) revert ZeroAddress()\"\n                if /** @src 16:2059:2081  \"newOwner == address(0)\" */ iszero(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _1)\n                /// @src 16:2055:2103  \"if (newOwner == address(0)) revert ZeroAddress()\"\n                {\n                    /// @src 16:2090:2103  \"ZeroAddress()\"\n                    let _2 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                    /// @src 16:2090:2103  \"ZeroAddress()\"\n                    mstore(_2, shl(224, 0xd92e233d))\n                    revert(_2, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 4)\n                }\n                sstore(/** @src 16:2114:2143  \"_newPotentialOwner = newOwner\" */ 0x01, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ or(and(sload(/** @src 16:2114:2143  \"_newPotentialOwner = newOwner\" */ 0x01), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ shl(160, 0xffffffffffffffffffffffff)), _1))\n                return(mload(64), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n            function external_fun_addLiquidityETH()\n            {\n                let param, param_1, param_2, param_3, param_4, param_5 := abi_decode_addresst_uint256t_uint256t_uint256t_addresst_uint256(calldatasize())\n                /// @src 13:7816:7824  \"deadline\"\n                fun_ensure(param_5)\n                /// @src 13:7893:8062  \"_addLiquidity(...\"\n                let expr_component, expr_component_1 := fun_addLiquidity_16361(param, param_1, /** @src 13:7989:7998  \"msg.value\" */ callvalue(), /** @src 13:7893:8062  \"_addLiquidity(...\" */ param_2, param_3)\n                /// @src 13:8087:8152  \"OpenMevLibrary.pairFor(OpenMevLibrary.SUSHI_FACTORY, token, weth)\"\n                let expr := fun_pairFor_16362(param)\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let _1 := sub(shl(160, 1), 1)\n                /// @src 13:8210:8221  \"amountToken\"\n                fun_safeTransferFrom(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 13:8162:8174  \"ERC20(token)\" */ param, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _1), /** @src 13:8192:8202  \"msg.sender\" */ caller(), /** @src 13:8210:8221  \"amountToken\" */ expr, expr_component)\n                /// @src 13:1431:1473  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\"\n                let _2 := 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\n                /// @src 13:8232:8273  \"IWETH(weth).deposit{ value: amountETH }()\"\n                if iszero(extcodesize(/** @src 13:1431:1473  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\" */ _2))\n                /// @src 13:8232:8273  \"IWETH(weth).deposit{ value: amountETH }()\"\n                {\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 13:8232:8273  \"IWETH(weth).deposit{ value: amountETH }()\"\n                let _3 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                /// @src 13:8232:8273  \"IWETH(weth).deposit{ value: amountETH }()\"\n                mstore(_3, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ shl(228, 0x0d0e30db))\n                /// @src 13:8232:8273  \"IWETH(weth).deposit{ value: amountETH }()\"\n                let _4 := call(gas(), /** @src 13:1431:1473  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\" */ _2, /** @src 13:8232:8273  \"IWETH(weth).deposit{ value: amountETH }()\" */ expr_component_1, _3, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 4, /** @src 13:8232:8273  \"IWETH(weth).deposit{ value: amountETH }()\" */ _3, /** @src -1:-1:-1 */ 0)\n                /// @src 13:8232:8273  \"IWETH(weth).deposit{ value: amountETH }()\"\n                if iszero(_4) { revert_forward() }\n                if _4\n                {\n                    finalize_allocation_16266(_3)\n                    abi_decode(_3, _3)\n                }\n                /// @src 13:8314:8323  \"amountETH\"\n                fun_safeTransfer_16321(expr, expr_component_1)\n                /// @src 13:8346:8375  \"IUniswapV2Pair(pair).mint(to)\"\n                let _5 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                /// @src 13:8346:8375  \"IUniswapV2Pair(pair).mint(to)\"\n                mstore(_5, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ shl(225, 0x35313c21))\n                /// @src 13:8346:8375  \"IUniswapV2Pair(pair).mint(to)\"\n                let _6 := call(gas(), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 13:8346:8366  \"IUniswapV2Pair(pair)\" */ expr, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _1), /** @src -1:-1:-1 */ 0, /** @src 13:8346:8375  \"IUniswapV2Pair(pair).mint(to)\" */ _5, sub(abi_encode_tuple_address(add(_5, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 4), /** @src 13:8346:8375  \"IUniswapV2Pair(pair).mint(to)\" */ param_4), _5), _5, 32)\n                if iszero(_6) { revert_forward() }\n                let expr_1 := /** @src -1:-1:-1 */ 0\n                /// @src 13:8346:8375  \"IUniswapV2Pair(pair).mint(to)\"\n                if _6\n                {\n                    let _7 := 32\n                    if gt(_7, returndatasize()) { _7 := returndatasize() }\n                    finalize_allocation(_5, _7)\n                    expr_1 := abi_decode_uint256_fromMemory(_5, add(_5, _7))\n                }\n                /// @src 13:8420:8513  \"if (msg.value > amountETH) SafeTransferLib.safeTransferETH(msg.sender, msg.value - amountETH)\"\n                if /** @src 13:8424:8445  \"msg.value > amountETH\" */ gt(/** @src 13:7989:7998  \"msg.value\" */ callvalue(), /** @src 13:8424:8445  \"msg.value > amountETH\" */ expr_component_1)\n                /// @src 13:8420:8513  \"if (msg.value > amountETH) SafeTransferLib.safeTransferETH(msg.sender, msg.value - amountETH)\"\n                {\n                    /// @src 13:8491:8512  \"msg.value - amountETH\"\n                    fun_safeTransferETH(/** @src 13:8192:8202  \"msg.sender\" */ caller(), /** @src 13:8491:8512  \"msg.value - amountETH\" */ checked_sub_uint256(/** @src 13:7989:7998  \"msg.value\" */ callvalue(), /** @src 13:8491:8512  \"msg.value - amountETH\" */ expr_component_1))\n                }\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_uint256_uint256_uint256(memPos, expr_component, expr_component_1, expr_1), memPos))\n            }\n            function external_fun_swapETHForExactTokens()\n            {\n                let param, param_1, param_2, param_3, param_4 := abi_decode_uint256t_array_address_dyn_calldatat_addresst_uint256(calldatasize())\n                /// @src 13:30053:30061  \"deadline\"\n                fun_ensure(param_4)\n                /// @src 13:1431:1473  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\"\n                let _1 := 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\n                /// @src 13:30103:30144  \"if (path[0] != weth) revert InvalidPath()\"\n                if /** @src 13:30107:30122  \"path[0] != weth\" */ iszero(eq(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 13:30107:30114  \"path[0]\" */ read_from_calldatat_address(calldata_array_index_access_address_dyn_calldata_16264(param_1, param_2)), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ sub(shl(160, 1), 1)), /** @src 13:1431:1473  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\" */ _1))\n                /// @src 13:30103:30144  \"if (path[0] != weth) revert InvalidPath()\"\n                {\n                    /// @src 13:30131:30144  \"InvalidPath()\"\n                    let _2 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                    /// @src 13:30131:30144  \"InvalidPath()\"\n                    mstore(_2, /** @src 13:28052:28065  \"InvalidPath()\" */ shl(224, 0x20db8267))\n                    /// @src 13:30131:30144  \"InvalidPath()\"\n                    revert(_2, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 4)\n                }\n                /// @src 13:30154:30200  \"address factory = OpenMevLibrary.SUSHI_FACTORY\"\n                let var_factory := /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ 0xc0aee478e3658e2610c5f7a4a2e1777ce9e4f2ac\n                /// @src 13:30210:30298  \"OpenMevLibrary.Swap[] memory swaps = OpenMevLibrary.getSwapsIn(factory, amountOut, path)\"\n                let var_swaps_mpos := /** @src 13:30247:30298  \"OpenMevLibrary.getSwapsIn(factory, amountOut, path)\" */ fun_getSwapsIn_16324(param, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ abi_decode_available_length_array_address_dyn(/** @src 13:30247:30298  \"OpenMevLibrary.getSwapsIn(factory, amountOut, path)\" */ param_1, param_2, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ calldatasize()))\n                /// @src 13:30312:30329  \"swaps[0].amountIn\"\n                let _3 := 160\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let _4 := mload(/** @src 13:30312:30329  \"swaps[0].amountIn\" */ add(/** @src 13:30312:30320  \"swaps[0]\" */ mload(memory_array_index_access_struct_Swap_dyn_16265(var_swaps_mpos)), /** @src 13:30312:30329  \"swaps[0].amountIn\" */ _3))\n                /// @src 13:30308:30631  \"if (swaps[0].amountIn > msg.value) {...\"\n                if /** @src 13:30312:30341  \"swaps[0].amountIn > msg.value\" */ gt(_4, /** @src 13:30332:30341  \"msg.value\" */ callvalue())\n                /// @src 13:30308:30631  \"if (swaps[0].amountIn > msg.value) {...\"\n                {\n                    /// @src 13:30357:30381  \"factory = BACKUP_FACTORY\"\n                    var_factory := /** @src 13:1522:1564  \"0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f\" */ 0x5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f\n                    /// @src 13:30483:30542  \"swaps = OpenMevLibrary.getSwapsIn(factory, amountOut, path)\"\n                    var_swaps_mpos := /** @src 13:30491:30542  \"OpenMevLibrary.getSwapsIn(factory, amountOut, path)\" */ fun_getSwapsIn_16326(param, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ abi_decode_available_length_array_address_dyn(/** @src 13:30491:30542  \"OpenMevLibrary.getSwapsIn(factory, amountOut, path)\" */ param_1, param_2, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ calldatasize()))\n                    /// @src 13:30556:30620  \"if (swaps[0].amountIn > msg.value) revert ExcessiveInputAmount()\"\n                    if /** @src 13:30560:30589  \"swaps[0].amountIn > msg.value\" */ gt(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 13:30560:30577  \"swaps[0].amountIn\" */ add(/** @src 13:30560:30568  \"swaps[0]\" */ mload(memory_array_index_access_struct_Swap_dyn_16265(var_swaps_mpos)), /** @src 13:30312:30329  \"swaps[0].amountIn\" */ _3)), /** @src 13:30332:30341  \"msg.value\" */ callvalue())\n                    /// @src 13:30556:30620  \"if (swaps[0].amountIn > msg.value) revert ExcessiveInputAmount()\"\n                    {\n                        /// @src 13:30598:30620  \"ExcessiveInputAmount()\"\n                        let _5 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                        /// @src 13:30598:30620  \"ExcessiveInputAmount()\"\n                        mstore(_5, /** @src 13:26516:26538  \"ExcessiveInputAmount()\" */ shl(224, 0xe1b0da4f))\n                        /// @src 13:30598:30620  \"ExcessiveInputAmount()\"\n                        revert(_5, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 4)\n                    }\n                }\n                let _6 := mload(/** @src 13:30669:30686  \"swaps[0].amountIn\" */ add(/** @src 13:30669:30677  \"swaps[0]\" */ mload(memory_array_index_access_struct_Swap_dyn_16265(var_swaps_mpos)), /** @src 13:30312:30329  \"swaps[0].amountIn\" */ _3))\n                /// @src 13:30641:30690  \"IWETH(weth).deposit{ value: swaps[0].amountIn }()\"\n                if iszero(extcodesize(/** @src 13:1431:1473  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\" */ _1))\n                /// @src 13:30641:30690  \"IWETH(weth).deposit{ value: swaps[0].amountIn }()\"\n                {\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 13:30641:30690  \"IWETH(weth).deposit{ value: swaps[0].amountIn }()\"\n                let _7 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                /// @src 13:30641:30690  \"IWETH(weth).deposit{ value: swaps[0].amountIn }()\"\n                mstore(_7, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ shl(228, 0x0d0e30db))\n                /// @src 13:30641:30690  \"IWETH(weth).deposit{ value: swaps[0].amountIn }()\"\n                let _8 := call(gas(), /** @src 13:1431:1473  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\" */ _1, /** @src 13:30641:30690  \"IWETH(weth).deposit{ value: swaps[0].amountIn }()\" */ _6, _7, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 4, /** @src 13:30641:30690  \"IWETH(weth).deposit{ value: swaps[0].amountIn }()\" */ _7, /** @src -1:-1:-1 */ 0)\n                /// @src 13:30641:30690  \"IWETH(weth).deposit{ value: swaps[0].amountIn }()\"\n                if iszero(_8) { revert_forward() }\n                if _8\n                {\n                    finalize_allocation_16266(_7)\n                    abi_decode(_7, _7)\n                }\n                /// @src 13:30725:30738  \"swaps[0].pair\"\n                let _9 := read_from_memoryt_address(add(/** @src 13:30725:30733  \"swaps[0]\" */ mload(memory_array_index_access_struct_Swap_dyn_16265(var_swaps_mpos)), /** @src 13:30725:30738  \"swaps[0].pair\" */ 128))\n                /// @src 13:30740:30757  \"swaps[0].amountIn\"\n                fun_safeTransfer_16321(_9, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 13:30740:30757  \"swaps[0].amountIn\" */ add(/** @src 13:30740:30748  \"swaps[0]\" */ mload(memory_array_index_access_struct_Swap_dyn_16265(var_swaps_mpos)), /** @src 13:30312:30329  \"swaps[0].amountIn\" */ _3)))\n                /// @src 13:30768:30794  \"amounts = _swap(to, swaps)\"\n                let var_amounts_mpos := /** @src 13:30778:30794  \"_swap(to, swaps)\" */ fun_swap(param_3, var_swaps_mpos)\n                /// @src 13:30839:30948  \"if (msg.value > swaps[0].amountIn) SafeTransferLib.safeTransferETH(msg.sender, msg.value - swaps[0].amountIn)\"\n                if /** @src 13:30843:30872  \"msg.value > swaps[0].amountIn\" */ gt(/** @src 13:30332:30341  \"msg.value\" */ callvalue(), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 13:30855:30872  \"swaps[0].amountIn\" */ add(/** @src 13:30855:30863  \"swaps[0]\" */ mload(memory_array_index_access_struct_Swap_dyn_16265(var_swaps_mpos)), /** @src 13:30312:30329  \"swaps[0].amountIn\" */ _3)))\n                /// @src 13:30839:30948  \"if (msg.value > swaps[0].amountIn) SafeTransferLib.safeTransferETH(msg.sender, msg.value - swaps[0].amountIn)\"\n                {\n                    /// @src 13:30918:30947  \"msg.value - swaps[0].amountIn\"\n                    fun_safeTransferETH(/** @src 13:30906:30916  \"msg.sender\" */ caller(), /** @src 13:30918:30947  \"msg.value - swaps[0].amountIn\" */ checked_sub_uint256(/** @src 13:30332:30341  \"msg.value\" */ callvalue(), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 13:30930:30947  \"swaps[0].amountIn\" */ add(/** @src 13:30930:30938  \"swaps[0]\" */ mload(memory_array_index_access_struct_Swap_dyn_16265(var_swaps_mpos)), /** @src 13:30312:30329  \"swaps[0].amountIn\" */ _3))))\n                }\n                /// @src 13:31020:31025  \"swaps\"\n                fun_backrunSwaps(var_factory, var_swaps_mpos)\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_array_uint256_dyn(memPos, var_amounts_mpos), memPos))\n            }\n            /// @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\"\n            function panic_error_0x41()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            function finalize_allocation_16266(memPtr)\n            {\n                if gt(memPtr, 0xffffffffffffffff) { panic_error_0x41() }\n                mstore(64, memPtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function abi_decode_uint256_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32)\n                {\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    revert(0, 0)\n                }\n                /// @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\"\n                value0 := mload(headStart)\n            }\n            function revert_forward()\n            {\n                let pos := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                /// @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\"\n                returndatacopy(pos, 0, returndatasize())\n                revert(pos, returndatasize())\n            }\n            /// @ast-id 1906 @src 12:3221:3485  \"function pairFor(...\"\n            function fun_pairFor(var_tokenA) -> var_pair\n            {\n                /// @src 12:3399:3425  \"sortTokens(tokenA, tokenB)\"\n                let var_token0 := /** @src -1:-1:-1 */ 0\n                /// @src 12:3399:3425  \"sortTokens(tokenA, tokenB)\"\n                let var_token1 := /** @src -1:-1:-1 */ var_token0\n                /// @src 13:1431:1473  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\"\n                let _1 := 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\n                /// @src 12:2377:2426  \"if (tokenA == tokenB) revert IdenticalAddresses()\"\n                if /** @src 12:2381:2397  \"tokenA == tokenB\" */ eq(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 12:2381:2397  \"tokenA == tokenB\" */ var_tokenA, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ sub(shl(160, 1), 1)), /** @src 13:1431:1473  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\" */ _1)\n                /// @src 12:2377:2426  \"if (tokenA == tokenB) revert IdenticalAddresses()\"\n                {\n                    /// @src 12:2406:2426  \"IdenticalAddresses()\"\n                    let _2 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                    /// @src 12:2406:2426  \"IdenticalAddresses()\"\n                    mstore(_2, shl(228, 0x0bd969eb))\n                    revert(_2, 4)\n                }\n                /// @src 12:2464:2802  \"assembly {...\"\n                switch lt(shl(96, var_tokenA), shl(97, 0x6015551cd911ff4685072e2793f56c841e3ab661))\n                case 0 {\n                    var_token0 := /** @src 13:1431:1473  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\" */ _1\n                    /// @src 12:2464:2802  \"assembly {...\"\n                    var_token1 := var_tokenA\n                }\n                default {\n                    var_token0 := var_tokenA\n                    var_token1 := /** @src 13:1431:1473  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\" */ _1\n                }\n                /// @src 12:2811:2850  \"if (isZeroAddress) revert ZeroAddress()\"\n                if /** @src 12:2464:2802  \"assembly {...\" */ iszero(var_token0)\n                /// @src 12:2811:2850  \"if (isZeroAddress) revert ZeroAddress()\"\n                {\n                    /// @src 12:2837:2850  \"ZeroAddress()\"\n                    let _3 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                    /// @src 12:2837:2850  \"ZeroAddress()\"\n                    mstore(_3, /** @src 16:2090:2103  \"ZeroAddress()\" */ shl(224, 0xd92e233d))\n                    /// @src 12:2837:2850  \"ZeroAddress()\"\n                    revert(_3, 4)\n                }\n                /// @src 12:3435:3478  \"pair = _asmPairFor(factory, token0, token1)\"\n                var_pair := /** @src 12:3442:3478  \"_asmPairFor(factory, token0, token1)\" */ fun_asmPairFor_16298(var_token0, var_token1)\n            }\n            /// @ast-id 1906 @src 12:3221:3485  \"function pairFor(...\"\n            function fun_pairFor_16304(var_tokenA, var_tokenB) -> var_pair\n            {\n                /// @src 12:3399:3425  \"sortTokens(tokenA, tokenB)\"\n                let expr_component, expr_component_1 := fun_sortTokens(var_tokenA, var_tokenB)\n                /// @src 12:3435:3478  \"pair = _asmPairFor(factory, token0, token1)\"\n                var_pair := /** @src 12:3442:3478  \"_asmPairFor(factory, token0, token1)\" */ fun_asmPairFor_16298(expr_component, expr_component_1)\n            }\n            /// @ast-id 1906 @src 12:3221:3485  \"function pairFor(...\"\n            function fun_pairFor_16362(var_tokenA) -> var_pair\n            {\n                /// @src 12:3399:3425  \"sortTokens(tokenA, tokenB)\"\n                let expr_component, expr_component_1 := fun_sortTokens_16297(var_tokenA)\n                /// @src 12:3435:3478  \"pair = _asmPairFor(factory, token0, token1)\"\n                var_pair := /** @src 12:3442:3478  \"_asmPairFor(factory, token0, token1)\" */ fun_asmPairFor_16298(expr_component, expr_component_1)\n            }\n            /// @ast-id 1876 @src 12:2260:2857  \"function sortTokens(address tokenA, address tokenB) internal pure returns (address token0, address token1) {...\"\n            function fun_sortTokens_16297(var_tokenA) -> var_token0, var_token1\n            {\n                /// @src 13:1431:1473  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\"\n                let _1 := 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\n                /// @src 12:2377:2426  \"if (tokenA == tokenB) revert IdenticalAddresses()\"\n                if /** @src 12:2381:2397  \"tokenA == tokenB\" */ eq(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 12:2381:2397  \"tokenA == tokenB\" */ var_tokenA, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ sub(shl(160, 1), 1)), /** @src 13:1431:1473  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\" */ _1)\n                /// @src 12:2377:2426  \"if (tokenA == tokenB) revert IdenticalAddresses()\"\n                {\n                    /// @src 12:2406:2426  \"IdenticalAddresses()\"\n                    let _2 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                    /// @src 12:2406:2426  \"IdenticalAddresses()\"\n                    mstore(_2, shl(228, 0x0bd969eb))\n                    revert(_2, 4)\n                }\n                /// @src 12:2464:2802  \"assembly {...\"\n                switch lt(shl(96, var_tokenA), shl(97, 0x6015551cd911ff4685072e2793f56c841e3ab661))\n                case 0 {\n                    var_token0 := /** @src 13:1431:1473  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\" */ _1\n                    /// @src 12:2464:2802  \"assembly {...\"\n                    var_token1 := var_tokenA\n                }\n                default {\n                    var_token0 := var_tokenA\n                    var_token1 := /** @src 13:1431:1473  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\" */ _1\n                }\n                /// @src 12:2811:2850  \"if (isZeroAddress) revert ZeroAddress()\"\n                if /** @src 12:2464:2802  \"assembly {...\" */ iszero(var_token0)\n                /// @src 12:2811:2850  \"if (isZeroAddress) revert ZeroAddress()\"\n                {\n                    /// @src 12:2837:2850  \"ZeroAddress()\"\n                    let _3 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                    /// @src 12:2837:2850  \"ZeroAddress()\"\n                    mstore(_3, /** @src 16:2090:2103  \"ZeroAddress()\" */ shl(224, 0xd92e233d))\n                    /// @src 12:2837:2850  \"ZeroAddress()\"\n                    revert(_3, 4)\n                }\n            }\n            /// @ast-id 1876 @src 12:2260:2857  \"function sortTokens(address tokenA, address tokenB) internal pure returns (address token0, address token1) {...\"\n            function fun_sortTokens(var_tokenA, var_tokenB) -> var_token0, var_token1\n            {\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let _1 := sub(shl(160, 1), 1)\n                /// @src 12:2377:2426  \"if (tokenA == tokenB) revert IdenticalAddresses()\"\n                if /** @src 12:2381:2397  \"tokenA == tokenB\" */ eq(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 12:2381:2397  \"tokenA == tokenB\" */ var_tokenA, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _1), and(/** @src 12:2381:2397  \"tokenA == tokenB\" */ var_tokenB, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _1))\n                /// @src 12:2377:2426  \"if (tokenA == tokenB) revert IdenticalAddresses()\"\n                {\n                    /// @src 12:2406:2426  \"IdenticalAddresses()\"\n                    let _2 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                    /// @src 12:2406:2426  \"IdenticalAddresses()\"\n                    mstore(_2, shl(228, 0x0bd969eb))\n                    revert(_2, 4)\n                }\n                /// @src 12:2464:2802  \"assembly {...\"\n                switch lt(shl(96, var_tokenA), shl(96, var_tokenB))\n                case 0 {\n                    var_token0 := var_tokenB\n                    var_token1 := var_tokenA\n                }\n                default {\n                    var_token0 := var_tokenA\n                    var_token1 := var_tokenB\n                }\n                /// @src 12:2811:2850  \"if (isZeroAddress) revert ZeroAddress()\"\n                if /** @src 12:2464:2802  \"assembly {...\" */ iszero(var_token0)\n                /// @src 12:2811:2850  \"if (isZeroAddress) revert ZeroAddress()\"\n                {\n                    /// @src 12:2837:2850  \"ZeroAddress()\"\n                    let _3 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                    /// @src 12:2837:2850  \"ZeroAddress()\"\n                    mstore(_3, /** @src 16:2090:2103  \"ZeroAddress()\" */ shl(224, 0xd92e233d))\n                    /// @src 12:2837:2850  \"ZeroAddress()\"\n                    revert(_3, 4)\n                }\n            }\n            /// @ast-id 1928 @src 12:3872:5028  \"function _asmPairFor(...\"\n            function fun_asmPairFor_16298(var_token0, var_token1) -> var_pair\n            {\n                /// @src 12:4523:5022  \"assembly {...\"\n                let usr$ptr := mload(0x40)\n                mstore(usr$ptr, shl(96, var_token0))\n                mstore(add(usr$ptr, 0x14), shl(96, var_token1))\n                let usr$salt := keccak256(usr$ptr, 0x28)\n                mstore(usr$ptr, /** @src 12:1051:1117  \"0xFFC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac0000000000000000000000\" */ shl(90, 0x3ff02bb91e38d9638984317de928b85ddf3a793cab))\n                /// @src 12:4523:5022  \"assembly {...\"\n                mstore(add(usr$ptr, 0x15), usr$salt)\n                mstore(add(usr$ptr, 0x35), /** @src 12:814:880  \"0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303\" */ 0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303)\n                /// @src 12:4523:5022  \"assembly {...\"\n                var_pair := keccak256(usr$ptr, 0x55)\n            }\n            /// @ast-id 1928 @src 12:3872:5028  \"function _asmPairFor(...\"\n            function fun_asmPairFor_42213(var_token0, var_token1) -> var_pair\n            {\n                /// @src 12:4523:5022  \"assembly {...\"\n                let usr$ptr := mload(0x40)\n                mstore(usr$ptr, shl(96, var_token0))\n                mstore(add(usr$ptr, 0x14), shl(96, var_token1))\n                let usr$salt := keccak256(usr$ptr, 0x28)\n                mstore(usr$ptr, /** @src 12:1169:1235  \"0xFF5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f0000000000000000000000\" */ shl(88, 0xff5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f))\n                /// @src 12:4523:5022  \"assembly {...\"\n                mstore(add(usr$ptr, 0x15), usr$salt)\n                mstore(add(usr$ptr, 0x35), /** @src 12:934:1000  \"0x96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f\" */ 0x96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f)\n                /// @src 12:4523:5022  \"assembly {...\"\n                var_pair := keccak256(usr$ptr, 0x55)\n            }\n            /// @ast-id 1928 @src 12:3872:5028  \"function _asmPairFor(...\"\n            function fun_asmPairFor(var_factory, var_token0, var_token1) -> var_pair\n            {\n                /// @src 12:4063:4083  \"factoryHash(factory)\"\n                let var_initCodeHash := /** @src -1:-1:-1 */ 0\n                /// @src 12:4063:4083  \"factoryHash(factory)\"\n                let var_ffFactory := /** @src -1:-1:-1 */ var_initCodeHash\n                /// @src 12:1683:1921  \"if (factory == SUSHI_FACTORY) {...\"\n                switch /** @src 12:1687:1711  \"factory == SUSHI_FACTORY\" */ eq(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 12:1687:1711  \"factory == SUSHI_FACTORY\" */ var_factory, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ sub(shl(160, 1), 1)), /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ 0xc0aee478e3658e2610c5f7a4a2e1777ce9e4f2ac)\n                case /** @src 12:1683:1921  \"if (factory == SUSHI_FACTORY) {...\" */ 0 {\n                    /// @src 12:1833:1867  \"initCodeHash = BACKUP_FACTORY_HASH\"\n                    var_initCodeHash := /** @src 12:934:1000  \"0x96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f\" */ 0x96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f\n                    /// @src 12:1881:1910  \"ffFactory = FF_BACKUP_FACTORY\"\n                    var_ffFactory := /** @src 12:1169:1235  \"0xFF5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f0000000000000000000000\" */ shl(88, 0xff5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f)\n                }\n                default /// @src 12:1683:1921  \"if (factory == SUSHI_FACTORY) {...\"\n                {\n                    /// @src 12:1727:1760  \"initCodeHash = SUSHI_FACTORY_HASH\"\n                    var_initCodeHash := /** @src 12:814:880  \"0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303\" */ 0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303\n                    /// @src 12:1774:1802  \"ffFactory = FF_SUSHI_FACTORY\"\n                    var_ffFactory := /** @src 12:1051:1117  \"0xFFC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac0000000000000000000000\" */ shl(90, 0x3ff02bb91e38d9638984317de928b85ddf3a793cab)\n                }\n                /// @src 12:4523:5022  \"assembly {...\"\n                let usr$ptr := mload(0x40)\n                mstore(usr$ptr, shl(96, var_token0))\n                mstore(add(usr$ptr, 0x14), shl(96, var_token1))\n                let usr$salt := keccak256(usr$ptr, 0x28)\n                mstore(usr$ptr, var_ffFactory)\n                mstore(add(usr$ptr, 0x15), usr$salt)\n                mstore(add(usr$ptr, 0x35), var_initCodeHash)\n                var_pair := keccak256(usr$ptr, 0x55)\n            }\n            /// @ast-id 3318 @src 13:2746:2859  \"function ensure(uint256 deadline) internal view {...\"\n            function fun_ensure(var_deadline)\n            {\n                /// @src 13:2804:2852  \"if (deadline < block.timestamp) revert Expired()\"\n                if /** @src 13:2808:2834  \"deadline < block.timestamp\" */ lt(var_deadline, /** @src 13:2819:2834  \"block.timestamp\" */ timestamp())\n                /// @src 13:2804:2852  \"if (deadline < block.timestamp) revert Expired()\"\n                {\n                    /// @src 13:2843:2852  \"Expired()\"\n                    let _1 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                    /// @src 13:2843:2852  \"Expired()\"\n                    mstore(_1, shl(227, 0x0407b05b))\n                    revert(_1, 4)\n                }\n            }\n            /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n            function abi_decode_address_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                let value := mload(headStart)\n                validator_revert_address(value)\n                value0 := value\n            }\n            function abi_encode_address_address_42202(headStart, value0) -> tail\n            {\n                tail := add(headStart, 64)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                mstore(add(headStart, 32), /** @src 13:1431:1473  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\" */ 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2)\n            }\n            /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n            function abi_encode_address_address(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                let _1 := sub(shl(160, 1), 1)\n                mstore(headStart, and(value0, _1))\n                mstore(add(headStart, 32), and(value1, _1))\n            }\n            /// @ast-id 3456 @src 13:3488:4927  \"function _addLiquidity(...\"\n            function fun_addLiquidity_16361(var_tokenA, var_amountADesired, var_amountBDesired, var_amountAMin, var_amountBMin) -> var_amountA, var_amountB\n            {\n                /// @src 13:3866:3916  \"IUniswapV2Factory(factory).getPair(tokenA, tokenB)\"\n                let _1 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                /// @src 13:3866:3916  \"IUniswapV2Factory(factory).getPair(tokenA, tokenB)\"\n                mstore(_1, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ shl(224, 0xe6a43905))\n                /// @src 13:3866:3916  \"IUniswapV2Factory(factory).getPair(tokenA, tokenB)\"\n                let _2 := 32\n                let _3 := sub(abi_encode_address_address_42202(add(_1, 4), var_tokenA), _1)\n                /// @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\"\n                let _4 := 0xc0aee478e3658e2610c5f7a4a2e1777ce9e4f2ac\n                /// @src 13:3866:3916  \"IUniswapV2Factory(factory).getPair(tokenA, tokenB)\"\n                let _5 := staticcall(gas(), /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ _4, /** @src 13:3866:3916  \"IUniswapV2Factory(factory).getPair(tokenA, tokenB)\" */ _1, _3, _1, _2)\n                if iszero(_5) { revert_forward() }\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 13:3866:3916  \"IUniswapV2Factory(factory).getPair(tokenA, tokenB)\"\n                if _5\n                {\n                    let _6 := _2\n                    if gt(_2, returndatasize()) { _6 := returndatasize() }\n                    finalize_allocation(_1, _6)\n                    expr := abi_decode_address_fromMemory(_1, add(_1, _6))\n                }\n                /// @src 13:3862:4010  \"if (IUniswapV2Factory(factory).getPair(tokenA, tokenB) == address(0)) {...\"\n                if /** @src 13:3866:3930  \"IUniswapV2Factory(factory).getPair(tokenA, tokenB) == address(0)\" */ iszero(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 13:3866:3930  \"IUniswapV2Factory(factory).getPair(tokenA, tokenB) == address(0)\" */ expr, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ sub(shl(160, 1), 1)))\n                /// @src 13:3862:4010  \"if (IUniswapV2Factory(factory).getPair(tokenA, tokenB) == address(0)) {...\"\n                {\n                    /// @src 13:3946:3999  \"IUniswapV2Factory(factory).createPair(tokenA, tokenB)\"\n                    let _7 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                    /// @src 13:3946:3999  \"IUniswapV2Factory(factory).createPair(tokenA, tokenB)\"\n                    mstore(_7, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ shl(225, 0x64e329cb))\n                    /// @src 13:3946:3999  \"IUniswapV2Factory(factory).createPair(tokenA, tokenB)\"\n                    let _8 := call(gas(), /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ _4, /** @src -1:-1:-1 */ 0, /** @src 13:3946:3999  \"IUniswapV2Factory(factory).createPair(tokenA, tokenB)\" */ _7, sub(abi_encode_address_address_42202(add(_7, /** @src 13:3866:3916  \"IUniswapV2Factory(factory).getPair(tokenA, tokenB)\" */ 4), /** @src 13:3946:3999  \"IUniswapV2Factory(factory).createPair(tokenA, tokenB)\" */ var_tokenA), _7), _7, /** @src 13:3866:3916  \"IUniswapV2Factory(factory).getPair(tokenA, tokenB)\" */ _2)\n                    /// @src 13:3946:3999  \"IUniswapV2Factory(factory).createPair(tokenA, tokenB)\"\n                    if iszero(_8) { revert_forward() }\n                    if _8\n                    {\n                        let _9 := /** @src 13:3866:3916  \"IUniswapV2Factory(factory).getPair(tokenA, tokenB)\" */ _2\n                        /// @src 13:3946:3999  \"IUniswapV2Factory(factory).createPair(tokenA, tokenB)\"\n                        if gt(/** @src 13:3866:3916  \"IUniswapV2Factory(factory).getPair(tokenA, tokenB)\" */ _2, /** @src 13:3946:3999  \"IUniswapV2Factory(factory).createPair(tokenA, tokenB)\" */ returndatasize()) { _9 := returndatasize() }\n                        finalize_allocation(_7, _9)\n                        pop(abi_decode_address_fromMemory(_7, add(_7, _9)))\n                    }\n                }\n                /// @src 13:4058:4109  \"OpenMevLibrary.getReserves(factory, tokenA, tokenB)\"\n                let expr_component, expr_component_1 := fun_getReserves(var_tokenA)\n                /// @src 13:4123:4161  \"_isZero(reserveA) && _isZero(reserveB)\"\n                let expr_1 := /** @src 12:19729:19788  \"assembly {...\" */ iszero(/** @src 13:4123:4140  \"_isZero(reserveA)\" */ expr_component)\n                /// @src 13:4123:4161  \"_isZero(reserveA) && _isZero(reserveB)\"\n                if expr_1\n                {\n                    expr_1 := /** @src 12:19729:19788  \"assembly {...\" */ iszero(/** @src 13:4144:4161  \"_isZero(reserveB)\" */ expr_component_1)\n                }\n                /// @src 13:4119:4921  \"if (_isZero(reserveA) && _isZero(reserveB)) {...\"\n                switch expr_1\n                case 0 {\n                    /// @src 13:4286:4342  \"OpenMevLibrary.quote(amountADesired, reserveA, reserveB)\"\n                    let expr_2 := fun_quote(var_amountADesired, expr_component, expr_component_1)\n                    /// @src 13:4356:4911  \"if (amountBOptimal > amountBDesired) {...\"\n                    switch /** @src 13:4360:4391  \"amountBOptimal > amountBDesired\" */ gt(expr_2, var_amountBDesired)\n                    case /** @src 13:4356:4911  \"if (amountBOptimal > amountBDesired) {...\" */ 0 {\n                        /// @src 13:4764:4825  \"if (amountBOptimal < amountBMin) revert InsufficientBAmount()\"\n                        if /** @src 13:4768:4795  \"amountBOptimal < amountBMin\" */ lt(expr_2, var_amountBMin)\n                        /// @src 13:4764:4825  \"if (amountBOptimal < amountBMin) revert InsufficientBAmount()\"\n                        {\n                            /// @src 13:4804:4825  \"InsufficientBAmount()\"\n                            let _10 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                            /// @src 13:4804:4825  \"InsufficientBAmount()\"\n                            mstore(_10, shl(224, 0xef71d091))\n                            revert(_10, /** @src 13:3866:3916  \"IUniswapV2Factory(factory).getPair(tokenA, tokenB)\" */ 4)\n                        }\n                        /// @src 13:4843:4896  \"(amountA, amountB) = (amountADesired, amountBOptimal)\"\n                        var_amountB := expr_2\n                        var_amountA := var_amountADesired\n                    }\n                    default /// @src 13:4356:4911  \"if (amountBOptimal > amountBDesired) {...\"\n                    {\n                        /// @src 13:4436:4492  \"OpenMevLibrary.quote(amountBDesired, reserveB, reserveA)\"\n                        let expr_3 := fun_quote(var_amountBDesired, expr_component_1, expr_component)\n                        /// @src 13:4510:4575  \"if (amountAOptimal > amountADesired) revert InsufficientAAmount()\"\n                        if /** @src 13:4514:4545  \"amountAOptimal > amountADesired\" */ gt(expr_3, var_amountADesired)\n                        /// @src 13:4510:4575  \"if (amountAOptimal > amountADesired) revert InsufficientAAmount()\"\n                        {\n                            /// @src 13:4554:4575  \"InsufficientAAmount()\"\n                            let _11 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                            /// @src 13:4554:4575  \"InsufficientAAmount()\"\n                            mstore(_11, shl(224, 0x8dc525d1))\n                            revert(_11, /** @src 13:3866:3916  \"IUniswapV2Factory(factory).getPair(tokenA, tokenB)\" */ 4)\n                        }\n                        /// @src 13:4593:4654  \"if (amountAOptimal < amountAMin) revert InsufficientAAmount()\"\n                        if /** @src 13:4597:4624  \"amountAOptimal < amountAMin\" */ lt(expr_3, var_amountAMin)\n                        /// @src 13:4593:4654  \"if (amountAOptimal < amountAMin) revert InsufficientAAmount()\"\n                        {\n                            /// @src 13:4633:4654  \"InsufficientAAmount()\"\n                            let _12 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                            /// @src 13:4633:4654  \"InsufficientAAmount()\"\n                            mstore(_12, /** @src 13:4554:4575  \"InsufficientAAmount()\" */ shl(224, 0x8dc525d1))\n                            /// @src 13:4633:4654  \"InsufficientAAmount()\"\n                            revert(_12, /** @src 13:3866:3916  \"IUniswapV2Factory(factory).getPair(tokenA, tokenB)\" */ 4)\n                        }\n                        /// @src 13:4672:4725  \"(amountA, amountB) = (amountAOptimal, amountBDesired)\"\n                        var_amountB := var_amountBDesired\n                        var_amountA := expr_3\n                    }\n                }\n                default /// @src 13:4119:4921  \"if (_isZero(reserveA) && _isZero(reserveB)) {...\"\n                {\n                    /// @src 13:4177:4230  \"(amountA, amountB) = (amountADesired, amountBDesired)\"\n                    var_amountB := var_amountBDesired\n                    var_amountA := var_amountADesired\n                }\n            }\n            /// @ast-id 3456 @src 13:3488:4927  \"function _addLiquidity(...\"\n            function fun_addLiquidity(var_tokenA, var_tokenB, var_amountADesired, var_amountBDesired, var_amountAMin, var_amountBMin) -> var_amountA, var_amountB\n            {\n                /// @src 13:3866:3916  \"IUniswapV2Factory(factory).getPair(tokenA, tokenB)\"\n                let _1 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                /// @src 13:3866:3916  \"IUniswapV2Factory(factory).getPair(tokenA, tokenB)\"\n                mstore(_1, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ shl(224, 0xe6a43905))\n                /// @src 13:3866:3916  \"IUniswapV2Factory(factory).getPair(tokenA, tokenB)\"\n                let _2 := 32\n                let _3 := sub(abi_encode_address_address(add(_1, 4), var_tokenA, var_tokenB), _1)\n                /// @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\"\n                let _4 := 0xc0aee478e3658e2610c5f7a4a2e1777ce9e4f2ac\n                /// @src 13:3866:3916  \"IUniswapV2Factory(factory).getPair(tokenA, tokenB)\"\n                let _5 := staticcall(gas(), /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ _4, /** @src 13:3866:3916  \"IUniswapV2Factory(factory).getPair(tokenA, tokenB)\" */ _1, _3, _1, _2)\n                if iszero(_5) { revert_forward() }\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 13:3866:3916  \"IUniswapV2Factory(factory).getPair(tokenA, tokenB)\"\n                if _5\n                {\n                    let _6 := _2\n                    if gt(_2, returndatasize()) { _6 := returndatasize() }\n                    finalize_allocation(_1, _6)\n                    expr := abi_decode_address_fromMemory(_1, add(_1, _6))\n                }\n                /// @src 13:3862:4010  \"if (IUniswapV2Factory(factory).getPair(tokenA, tokenB) == address(0)) {...\"\n                if /** @src 13:3866:3930  \"IUniswapV2Factory(factory).getPair(tokenA, tokenB) == address(0)\" */ iszero(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 13:3866:3930  \"IUniswapV2Factory(factory).getPair(tokenA, tokenB) == address(0)\" */ expr, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ sub(shl(160, 1), 1)))\n                /// @src 13:3862:4010  \"if (IUniswapV2Factory(factory).getPair(tokenA, tokenB) == address(0)) {...\"\n                {\n                    /// @src 13:3946:3999  \"IUniswapV2Factory(factory).createPair(tokenA, tokenB)\"\n                    let _7 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                    /// @src 13:3946:3999  \"IUniswapV2Factory(factory).createPair(tokenA, tokenB)\"\n                    mstore(_7, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ shl(225, 0x64e329cb))\n                    /// @src 13:3946:3999  \"IUniswapV2Factory(factory).createPair(tokenA, tokenB)\"\n                    let _8 := call(gas(), /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ _4, /** @src -1:-1:-1 */ 0, /** @src 13:3946:3999  \"IUniswapV2Factory(factory).createPair(tokenA, tokenB)\" */ _7, sub(abi_encode_address_address(add(_7, /** @src 13:3866:3916  \"IUniswapV2Factory(factory).getPair(tokenA, tokenB)\" */ 4), /** @src 13:3946:3999  \"IUniswapV2Factory(factory).createPair(tokenA, tokenB)\" */ var_tokenA, var_tokenB), _7), _7, /** @src 13:3866:3916  \"IUniswapV2Factory(factory).getPair(tokenA, tokenB)\" */ _2)\n                    /// @src 13:3946:3999  \"IUniswapV2Factory(factory).createPair(tokenA, tokenB)\"\n                    if iszero(_8) { revert_forward() }\n                    if _8\n                    {\n                        let _9 := /** @src 13:3866:3916  \"IUniswapV2Factory(factory).getPair(tokenA, tokenB)\" */ _2\n                        /// @src 13:3946:3999  \"IUniswapV2Factory(factory).createPair(tokenA, tokenB)\"\n                        if gt(/** @src 13:3866:3916  \"IUniswapV2Factory(factory).getPair(tokenA, tokenB)\" */ _2, /** @src 13:3946:3999  \"IUniswapV2Factory(factory).createPair(tokenA, tokenB)\" */ returndatasize()) { _9 := returndatasize() }\n                        finalize_allocation(_7, _9)\n                        pop(abi_decode_address_fromMemory(_7, add(_7, _9)))\n                    }\n                }\n                /// @src 13:4058:4109  \"OpenMevLibrary.getReserves(factory, tokenA, tokenB)\"\n                let expr_3374_component, expr_3374_component_1 := fun_getReserves_16268(var_tokenA, var_tokenB)\n                /// @src 13:4123:4161  \"_isZero(reserveA) && _isZero(reserveB)\"\n                let expr_1 := /** @src 12:19729:19788  \"assembly {...\" */ iszero(/** @src 13:4123:4140  \"_isZero(reserveA)\" */ expr_3374_component)\n                /// @src 13:4123:4161  \"_isZero(reserveA) && _isZero(reserveB)\"\n                if expr_1\n                {\n                    expr_1 := /** @src 12:19729:19788  \"assembly {...\" */ iszero(/** @src 13:4144:4161  \"_isZero(reserveB)\" */ expr_3374_component_1)\n                }\n                /// @src 13:4119:4921  \"if (_isZero(reserveA) && _isZero(reserveB)) {...\"\n                switch expr_1\n                case 0 {\n                    /// @src 13:4286:4342  \"OpenMevLibrary.quote(amountADesired, reserveA, reserveB)\"\n                    let expr_2 := fun_quote(var_amountADesired, expr_3374_component, expr_3374_component_1)\n                    /// @src 13:4356:4911  \"if (amountBOptimal > amountBDesired) {...\"\n                    switch /** @src 13:4360:4391  \"amountBOptimal > amountBDesired\" */ gt(expr_2, var_amountBDesired)\n                    case /** @src 13:4356:4911  \"if (amountBOptimal > amountBDesired) {...\" */ 0 {\n                        /// @src 13:4764:4825  \"if (amountBOptimal < amountBMin) revert InsufficientBAmount()\"\n                        if /** @src 13:4768:4795  \"amountBOptimal < amountBMin\" */ lt(expr_2, var_amountBMin)\n                        /// @src 13:4764:4825  \"if (amountBOptimal < amountBMin) revert InsufficientBAmount()\"\n                        {\n                            /// @src 13:4804:4825  \"InsufficientBAmount()\"\n                            let _10 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                            /// @src 13:4804:4825  \"InsufficientBAmount()\"\n                            mstore(_10, shl(224, 0xef71d091))\n                            revert(_10, /** @src 13:3866:3916  \"IUniswapV2Factory(factory).getPair(tokenA, tokenB)\" */ 4)\n                        }\n                        /// @src 13:4843:4896  \"(amountA, amountB) = (amountADesired, amountBOptimal)\"\n                        var_amountB := expr_2\n                        var_amountA := var_amountADesired\n                    }\n                    default /// @src 13:4356:4911  \"if (amountBOptimal > amountBDesired) {...\"\n                    {\n                        /// @src 13:4436:4492  \"OpenMevLibrary.quote(amountBDesired, reserveB, reserveA)\"\n                        let expr_3 := fun_quote(var_amountBDesired, expr_3374_component_1, expr_3374_component)\n                        /// @src 13:4510:4575  \"if (amountAOptimal > amountADesired) revert InsufficientAAmount()\"\n                        if /** @src 13:4514:4545  \"amountAOptimal > amountADesired\" */ gt(expr_3, var_amountADesired)\n                        /// @src 13:4510:4575  \"if (amountAOptimal > amountADesired) revert InsufficientAAmount()\"\n                        {\n                            /// @src 13:4554:4575  \"InsufficientAAmount()\"\n                            let _11 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                            /// @src 13:4554:4575  \"InsufficientAAmount()\"\n                            mstore(_11, shl(224, 0x8dc525d1))\n                            revert(_11, /** @src 13:3866:3916  \"IUniswapV2Factory(factory).getPair(tokenA, tokenB)\" */ 4)\n                        }\n                        /// @src 13:4593:4654  \"if (amountAOptimal < amountAMin) revert InsufficientAAmount()\"\n                        if /** @src 13:4597:4624  \"amountAOptimal < amountAMin\" */ lt(expr_3, var_amountAMin)\n                        /// @src 13:4593:4654  \"if (amountAOptimal < amountAMin) revert InsufficientAAmount()\"\n                        {\n                            /// @src 13:4633:4654  \"InsufficientAAmount()\"\n                            let _12 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                            /// @src 13:4633:4654  \"InsufficientAAmount()\"\n                            mstore(_12, /** @src 13:4554:4575  \"InsufficientAAmount()\" */ shl(224, 0x8dc525d1))\n                            /// @src 13:4633:4654  \"InsufficientAAmount()\"\n                            revert(_12, /** @src 13:3866:3916  \"IUniswapV2Factory(factory).getPair(tokenA, tokenB)\" */ 4)\n                        }\n                        /// @src 13:4672:4725  \"(amountA, amountB) = (amountAOptimal, amountBDesired)\"\n                        var_amountB := var_amountBDesired\n                        var_amountA := expr_3\n                    }\n                }\n                default /// @src 13:4119:4921  \"if (_isZero(reserveA) && _isZero(reserveB)) {...\"\n                {\n                    /// @src 13:4177:4230  \"(amountA, amountB) = (amountADesired, amountBDesired)\"\n                    var_amountB := var_amountBDesired\n                    var_amountA := var_amountADesired\n                }\n            }\n            /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n            function abi_decode_uint112_fromMemory(offset) -> value\n            {\n                value := mload(offset)\n                if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffff))) { revert(0, 0) }\n            }\n            function abi_decode_uint112t_uint112t_uint32_fromMemory(headStart, dataEnd) -> value0, value1, value2\n            {\n                if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n                value0 := abi_decode_uint112_fromMemory(headStart)\n                value1 := abi_decode_uint112_fromMemory(add(headStart, 32))\n                let value := mload(add(headStart, 64))\n                if iszero(eq(value, and(value, 0xffffffff)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                value2 := value\n            }\n            /// @ast-id 1981 @src 12:5295:5744  \"function getReserves(...\"\n            function fun_getReserves(var_tokenA) -> var_reserveA, var_reserveB\n            {\n                /// @src 12:5499:5525  \"sortTokens(tokenA, tokenB)\"\n                let expr_component, expr_component_1 := fun_sortTokens_16297(var_tokenA)\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 12:5591:5627  \"_asmPairFor(factory, token0, token1)\" */ fun_asmPairFor_16298(expr_component, expr_component_1), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _1)\n                /// @src 12:5576:5642  \"IUniswapV2Pair(_asmPairFor(factory, token0, token1)).getReserves()\"\n                let _3 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                /// @src 12:5576:5642  \"IUniswapV2Pair(_asmPairFor(factory, token0, token1)).getReserves()\"\n                mstore(_3, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ shl(226, 0x0240bc6b))\n                /// @src 12:5576:5642  \"IUniswapV2Pair(_asmPairFor(factory, token0, token1)).getReserves()\"\n                let _4 := staticcall(gas(), _2, _3, 4, _3, 96)\n                if iszero(_4) { revert_forward() }\n                let expr_component_2 := /** @src -1:-1:-1 */ 0\n                let expr_component_3 := expr_component_2\n                /// @src 12:5576:5642  \"IUniswapV2Pair(_asmPairFor(factory, token0, token1)).getReserves()\"\n                if _4\n                {\n                    let _5 := 96\n                    if gt(_5, returndatasize()) { _5 := returndatasize() }\n                    finalize_allocation(_3, _5)\n                    let expr_component_4, expr_component_5, expr_component_6 := abi_decode_uint112t_uint112t_uint32_fromMemory(_3, add(_3, _5))\n                    expr_component_2 := expr_component_4\n                    expr_component_3 := expr_component_5\n                }\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let _6 := 0xffffffffffffffffffffffffffff\n                /// @src 12:5535:5642  \"(uint256 reserve0, uint256 reserve1, ) = IUniswapV2Pair(_asmPairFor(factory, token0, token1)).getReserves()\"\n                let var_reserve0 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 12:5535:5642  \"(uint256 reserve0, uint256 reserve1, ) = IUniswapV2Pair(_asmPairFor(factory, token0, token1)).getReserves()\" */ expr_component_2, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _6)\n                /// @src 12:5535:5642  \"(uint256 reserve0, uint256 reserve1, ) = IUniswapV2Pair(_asmPairFor(factory, token0, token1)).getReserves()\"\n                let var_reserve1 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 12:5535:5642  \"(uint256 reserve0, uint256 reserve1, ) = IUniswapV2Pair(_asmPairFor(factory, token0, token1)).getReserves()\" */ expr_component_3, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _6)\n                /// @src 12:5675:5737  \"tokenA == token0 ? (reserve0, reserve1) : (reserve1, reserve0)\"\n                let expr_component_7 := /** @src -1:-1:-1 */ 0\n                let expr_component_8 := expr_component_7\n                /// @src 12:5675:5737  \"tokenA == token0 ? (reserve0, reserve1) : (reserve1, reserve0)\"\n                switch /** @src 12:5675:5691  \"tokenA == token0\" */ eq(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 12:5675:5691  \"tokenA == token0\" */ var_tokenA, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _1), and(/** @src 12:5675:5691  \"tokenA == token0\" */ expr_component, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _1))\n                case /** @src 12:5675:5737  \"tokenA == token0 ? (reserve0, reserve1) : (reserve1, reserve0)\" */ 0 {\n                    expr_component_7 := var_reserve1\n                    expr_component_8 := var_reserve0\n                }\n                default {\n                    expr_component_7 := var_reserve0\n                    expr_component_8 := var_reserve1\n                }\n                /// @src 12:5652:5737  \"(reserveA, reserveB) = tokenA == token0 ? (reserve0, reserve1) : (reserve1, reserve0)\"\n                var_reserveB := expr_component_8\n                var_reserveA := expr_component_7\n            }\n            /// @ast-id 1981 @src 12:5295:5744  \"function getReserves(...\"\n            function fun_getReserves_16268(var_tokenA, var_tokenB) -> var_reserveA, var_reserveB\n            {\n                /// @src 12:5499:5525  \"sortTokens(tokenA, tokenB)\"\n                let expr_component, expr_component_1 := fun_sortTokens(var_tokenA, var_tokenB)\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 12:5591:5627  \"_asmPairFor(factory, token0, token1)\" */ fun_asmPairFor_16298(expr_component, expr_component_1), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _1)\n                /// @src 12:5576:5642  \"IUniswapV2Pair(_asmPairFor(factory, token0, token1)).getReserves()\"\n                let _3 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                /// @src 12:5576:5642  \"IUniswapV2Pair(_asmPairFor(factory, token0, token1)).getReserves()\"\n                mstore(_3, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ shl(226, 0x0240bc6b))\n                /// @src 12:5576:5642  \"IUniswapV2Pair(_asmPairFor(factory, token0, token1)).getReserves()\"\n                let _4 := staticcall(gas(), _2, _3, 4, _3, 96)\n                if iszero(_4) { revert_forward() }\n                let expr_component_2 := /** @src -1:-1:-1 */ 0\n                let expr_component_3 := expr_component_2\n                /// @src 12:5576:5642  \"IUniswapV2Pair(_asmPairFor(factory, token0, token1)).getReserves()\"\n                if _4\n                {\n                    let _5 := 96\n                    if gt(_5, returndatasize()) { _5 := returndatasize() }\n                    finalize_allocation(_3, _5)\n                    let expr_component_4, expr_component_5, expr_component_6 := abi_decode_uint112t_uint112t_uint32_fromMemory(_3, add(_3, _5))\n                    expr_component_2 := expr_component_4\n                    expr_component_3 := expr_component_5\n                }\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let _6 := 0xffffffffffffffffffffffffffff\n                /// @src 12:5535:5642  \"(uint256 reserve0, uint256 reserve1, ) = IUniswapV2Pair(_asmPairFor(factory, token0, token1)).getReserves()\"\n                let var_reserve0 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 12:5535:5642  \"(uint256 reserve0, uint256 reserve1, ) = IUniswapV2Pair(_asmPairFor(factory, token0, token1)).getReserves()\" */ expr_component_2, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _6)\n                /// @src 12:5535:5642  \"(uint256 reserve0, uint256 reserve1, ) = IUniswapV2Pair(_asmPairFor(factory, token0, token1)).getReserves()\"\n                let var_reserve1 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 12:5535:5642  \"(uint256 reserve0, uint256 reserve1, ) = IUniswapV2Pair(_asmPairFor(factory, token0, token1)).getReserves()\" */ expr_component_3, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _6)\n                /// @src 12:5675:5737  \"tokenA == token0 ? (reserve0, reserve1) : (reserve1, reserve0)\"\n                let expr_1977_component := /** @src -1:-1:-1 */ 0\n                let expr_component_7 := expr_1977_component\n                /// @src 12:5675:5737  \"tokenA == token0 ? (reserve0, reserve1) : (reserve1, reserve0)\"\n                switch /** @src 12:5675:5691  \"tokenA == token0\" */ eq(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 12:5675:5691  \"tokenA == token0\" */ var_tokenA, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _1), and(/** @src 12:5675:5691  \"tokenA == token0\" */ expr_component, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _1))\n                case /** @src 12:5675:5737  \"tokenA == token0 ? (reserve0, reserve1) : (reserve1, reserve0)\" */ 0 {\n                    expr_1977_component := var_reserve1\n                    expr_component_7 := var_reserve0\n                }\n                default {\n                    expr_1977_component := var_reserve0\n                    expr_component_7 := var_reserve1\n                }\n                /// @src 12:5652:5737  \"(reserveA, reserveB) = tokenA == token0 ? (reserve0, reserve1) : (reserve1, reserve0)\"\n                var_reserveB := expr_component_7\n                var_reserveA := expr_1977_component\n            }\n            /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n            function panic_error_0x11()\n            {\n                mstore(0, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ shl(224, 0x4e487b71))\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                mstore(4, 0x11)\n                revert(0, 0x24)\n            }\n            function checked_mul_uint256_16334(y) -> product\n            {\n                if and(1, gt(y, 0x028f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f)) { panic_error_0x11() }\n                product := mul(/** @src 13:51203:51206  \"100\" */ 0x64, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ y)\n            }\n            function checked_mul_uint256_16471(x) -> product\n            {\n                if and(iszero(iszero(x)), gt(/** @src 13:41057:41058  \"5\" */ 0x05, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ div(not(0), x))) { panic_error_0x11() }\n                product := mul(x, /** @src 13:41057:41058  \"5\" */ 0x05)\n            }\n            /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n            function checked_mul_uint256_16473(x) -> product\n            {\n                if and(iszero(iszero(x)), gt(/** @src 13:41301:41302  \"9\" */ 0x09, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ div(not(0), x))) { panic_error_0x11() }\n                product := mul(x, /** @src 13:41301:41302  \"9\" */ 0x09)\n            }\n            /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n            function checked_mul_uint256(x, y) -> product\n            {\n                if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n                product := mul(x, y)\n            }\n            function checked_div_uint256_16472(x) -> r\n            {\n                r := div(x, /** @src 13:41062:41067  \"10000\" */ 0x2710)\n            }\n            /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n            function checked_div_uint256(x, y) -> r\n            {\n                if iszero(y)\n                {\n                    mstore(0, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ shl(224, 0x4e487b71))\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    mstore(4, 0x12)\n                    revert(0, 0x24)\n                }\n                r := div(x, y)\n            }\n            /// @ast-id 2021 @src 12:6106:6437  \"function quote(...\"\n            function fun_quote(var_amountA, var_reserveA, var_reserveB) -> var_amountB\n            {\n                /// @src 12:6254:6295  \"if (_isZero(amountA)) revert ZeroAmount()\"\n                if /** @src 12:19729:19788  \"assembly {...\" */ iszero(/** @src 12:6258:6274  \"_isZero(amountA)\" */ var_amountA)\n                /// @src 12:6254:6295  \"if (_isZero(amountA)) revert ZeroAmount()\"\n                {\n                    /// @src 12:6283:6295  \"ZeroAmount()\"\n                    let _1 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                    /// @src 12:6283:6295  \"ZeroAmount()\"\n                    mstore(_1, shl(224, 0x1f2a2005))\n                    revert(_1, 4)\n                }\n                /// @src 12:6309:6347  \"_isZero(reserveA) || _isZero(reserveB)\"\n                let expr := /** @src 12:19729:19788  \"assembly {...\" */ iszero(/** @src 12:6309:6326  \"_isZero(reserveA)\" */ var_reserveA)\n                /// @src 12:6309:6347  \"_isZero(reserveA) || _isZero(reserveB)\"\n                if iszero(expr)\n                {\n                    expr := /** @src 12:19729:19788  \"assembly {...\" */ iszero(/** @src 12:6330:6347  \"_isZero(reserveB)\" */ var_reserveB)\n                }\n                /// @src 12:6305:6379  \"if (_isZero(reserveA) || _isZero(reserveB)) revert InsufficientLiquidity()\"\n                if expr\n                {\n                    /// @src 12:6356:6379  \"InsufficientLiquidity()\"\n                    let _2 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                    /// @src 12:6356:6379  \"InsufficientLiquidity()\"\n                    mstore(_2, shl(224, 0xbb55fd27))\n                    revert(_2, 4)\n                }\n                /// @src 12:6389:6430  \"amountB = (amountA * reserveB) / reserveA\"\n                var_amountB := /** @src 12:6399:6430  \"(amountA * reserveB) / reserveA\" */ checked_div_uint256(/** @src 12:6400:6418  \"amountA * reserveB\" */ checked_mul_uint256(var_amountA, var_reserveB), /** @src 12:6399:6430  \"(amountA * reserveB) / reserveA\" */ var_reserveA)\n            }\n            /// @src 13:1431:1473  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\"\n            function checked_sub_uint256_16414(x) -> diff\n            {\n                if lt(x, /** @src 12:13642:13643  \"2\" */ 0x02)\n                /// @src 13:1431:1473  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\"\n                { panic_error_0x11() }\n                diff := add(x, not(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 1))\n            }\n            /// @src 13:1431:1473  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\"\n            function checked_sub_uint256(x, y) -> diff\n            {\n                if lt(x, y) { panic_error_0x11() }\n                diff := sub(x, y)\n            }\n            /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n            function abi_decode_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n            {\n                if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n                value0 := /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ mload(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ headStart)\n                value1 := /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ mload(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ add(headStart, 32))\n            }\n            /// @ast-id 3740 @src 13:9185:10035  \"function removeLiquidity(...\"\n            function fun_removeLiquidity_16385(var_tokenA, var_liquidity, var_amountAMin, var_amountBMin, var_to, var_deadline) -> var_amountA, var_amountB\n            {\n                /// @src 13:9468:9476  \"deadline\"\n                fun_ensure(var_deadline)\n                /// @src 13:9502:9570  \"OpenMevLibrary.pairFor(OpenMevLibrary.SUSHI_FACTORY, tokenA, tokenB)\"\n                let expr := fun_pairFor(var_tokenA)\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 13:9580:9591  \"ERC20(pair)\" */ expr, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _1)\n                /// @src 13:9627:9636  \"liquidity\"\n                fun_safeTransferFrom(_2, /** @src 13:9609:9619  \"msg.sender\" */ caller(), /** @src 13:9627:9636  \"liquidity\" */ expr, var_liquidity)\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let _3 := 64\n                /// @src 13:9710:9739  \"IUniswapV2Pair(pair).burn(to)\"\n                let _4 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(_3)\n                /// @src 13:9710:9739  \"IUniswapV2Pair(pair).burn(to)\"\n                mstore(_4, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ shl(226, 0x226bf2d1))\n                /// @src 13:9710:9739  \"IUniswapV2Pair(pair).burn(to)\"\n                let _5 := sub(abi_encode_tuple_address(add(_4, 4), var_to), _4)\n                let _6 := call(gas(), _2, 0, _4, _5, _4, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _3)\n                /// @src 13:9710:9739  \"IUniswapV2Pair(pair).burn(to)\"\n                if iszero(_6) { revert_forward() }\n                let expr_component := 0\n                let expr_component_1 := expr_component\n                if _6\n                {\n                    let _7 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _3\n                    /// @src 13:9710:9739  \"IUniswapV2Pair(pair).burn(to)\"\n                    if gt(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _3, /** @src 13:9710:9739  \"IUniswapV2Pair(pair).burn(to)\" */ returndatasize()) { _7 := returndatasize() }\n                    finalize_allocation(_4, _7)\n                    let expr_component_2, expr_component_3 := abi_decode_uint256t_uint256_fromMemory(_4, add(_4, _7))\n                    expr_component := expr_component_2\n                    expr_component_1 := expr_component_3\n                }\n                /// @src 13:9770:9811  \"OpenMevLibrary.sortTokens(tokenA, tokenB)\"\n                let expr_component_4, expr_component_5 := fun_sortTokens_16297(var_tokenA)\n                /// @src 13:9842:9900  \"tokenA == token0 ? (amount0, amount1) : (amount1, amount0)\"\n                let expr_component_6 := /** @src 13:9710:9739  \"IUniswapV2Pair(pair).burn(to)\" */ 0\n                let expr_component_7 := expr_component_6\n                /// @src 13:9842:9900  \"tokenA == token0 ? (amount0, amount1) : (amount1, amount0)\"\n                switch /** @src 13:9842:9858  \"tokenA == token0\" */ eq(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 13:9842:9858  \"tokenA == token0\" */ var_tokenA, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _1), and(/** @src 13:9842:9858  \"tokenA == token0\" */ expr_component_4, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _1))\n                case /** @src 13:9842:9900  \"tokenA == token0 ? (amount0, amount1) : (amount1, amount0)\" */ 0 {\n                    expr_component_6 := expr_component_1\n                    expr_component_7 := expr_component\n                }\n                default {\n                    expr_component_6 := expr_component\n                    expr_component_7 := expr_component_1\n                }\n                /// @src 13:9821:9900  \"(amountA, amountB) = tokenA == token0 ? (amount0, amount1) : (amount1, amount0)\"\n                var_amountB := expr_component_7\n                var_amountA := expr_component_6\n                /// @src 13:9910:9964  \"if (amountA < amountAMin) revert InsufficientAAmount()\"\n                if /** @src 13:9914:9934  \"amountA < amountAMin\" */ lt(expr_component_6, var_amountAMin)\n                /// @src 13:9910:9964  \"if (amountA < amountAMin) revert InsufficientAAmount()\"\n                {\n                    /// @src 13:9943:9964  \"InsufficientAAmount()\"\n                    let _8 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(_3)\n                    /// @src 13:9943:9964  \"InsufficientAAmount()\"\n                    mstore(_8, /** @src 13:4554:4575  \"InsufficientAAmount()\" */ shl(224, 0x8dc525d1))\n                    /// @src 13:9943:9964  \"InsufficientAAmount()\"\n                    revert(_8, /** @src 13:9710:9739  \"IUniswapV2Pair(pair).burn(to)\" */ 4)\n                }\n                /// @src 13:9974:10028  \"if (amountB < amountBMin) revert InsufficientBAmount()\"\n                if /** @src 13:9978:9998  \"amountB < amountBMin\" */ lt(expr_component_7, var_amountBMin)\n                /// @src 13:9974:10028  \"if (amountB < amountBMin) revert InsufficientBAmount()\"\n                {\n                    /// @src 13:10007:10028  \"InsufficientBAmount()\"\n                    let _9 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(_3)\n                    /// @src 13:10007:10028  \"InsufficientBAmount()\"\n                    mstore(_9, /** @src 13:4804:4825  \"InsufficientBAmount()\" */ shl(224, 0xef71d091))\n                    /// @src 13:10007:10028  \"InsufficientBAmount()\"\n                    revert(_9, /** @src 13:9710:9739  \"IUniswapV2Pair(pair).burn(to)\" */ 4)\n                }\n            }\n            /// @ast-id 3740 @src 13:9185:10035  \"function removeLiquidity(...\"\n            function fun_removeLiquidity(var_tokenA, var_tokenB, var_liquidity, var_amountAMin, var_amountBMin, var_to, var_deadline) -> var_amountA, var_amountB\n            {\n                /// @src 13:9468:9476  \"deadline\"\n                fun_ensure(var_deadline)\n                /// @src 13:9502:9570  \"OpenMevLibrary.pairFor(OpenMevLibrary.SUSHI_FACTORY, tokenA, tokenB)\"\n                let expr := fun_pairFor_16304(var_tokenA, var_tokenB)\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 13:9580:9591  \"ERC20(pair)\" */ expr, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _1)\n                /// @src 13:9627:9636  \"liquidity\"\n                fun_safeTransferFrom(_2, /** @src 13:9609:9619  \"msg.sender\" */ caller(), /** @src 13:9627:9636  \"liquidity\" */ expr, var_liquidity)\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let _3 := 64\n                /// @src 13:9710:9739  \"IUniswapV2Pair(pair).burn(to)\"\n                let _4 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(_3)\n                /// @src 13:9710:9739  \"IUniswapV2Pair(pair).burn(to)\"\n                mstore(_4, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ shl(226, 0x226bf2d1))\n                /// @src 13:9710:9739  \"IUniswapV2Pair(pair).burn(to)\"\n                let _5 := sub(abi_encode_tuple_address(add(_4, 4), var_to), _4)\n                let _6 := call(gas(), _2, 0, _4, _5, _4, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _3)\n                /// @src 13:9710:9739  \"IUniswapV2Pair(pair).burn(to)\"\n                if iszero(_6) { revert_forward() }\n                let expr_3700_component := 0\n                let expr_3700_component_1 := expr_3700_component\n                if _6\n                {\n                    let _7 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _3\n                    /// @src 13:9710:9739  \"IUniswapV2Pair(pair).burn(to)\"\n                    if gt(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _3, /** @src 13:9710:9739  \"IUniswapV2Pair(pair).burn(to)\" */ returndatasize()) { _7 := returndatasize() }\n                    finalize_allocation(_4, _7)\n                    let expr_component, expr_3700_component_2 := abi_decode_uint256t_uint256_fromMemory(_4, add(_4, _7))\n                    expr_3700_component := expr_component\n                    expr_3700_component_1 := expr_3700_component_2\n                }\n                /// @src 13:9770:9811  \"OpenMevLibrary.sortTokens(tokenA, tokenB)\"\n                let expr_3708_component, expr_3708_component_1 := fun_sortTokens(var_tokenA, var_tokenB)\n                /// @src 13:9842:9900  \"tokenA == token0 ? (amount0, amount1) : (amount1, amount0)\"\n                let expr_3722_component := /** @src 13:9710:9739  \"IUniswapV2Pair(pair).burn(to)\" */ 0\n                let expr_3722_component_1 := expr_3722_component\n                /// @src 13:9842:9900  \"tokenA == token0 ? (amount0, amount1) : (amount1, amount0)\"\n                switch /** @src 13:9842:9858  \"tokenA == token0\" */ eq(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 13:9842:9858  \"tokenA == token0\" */ var_tokenA, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _1), and(/** @src 13:9842:9858  \"tokenA == token0\" */ expr_3708_component, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _1))\n                case /** @src 13:9842:9900  \"tokenA == token0 ? (amount0, amount1) : (amount1, amount0)\" */ 0 {\n                    expr_3722_component := expr_3700_component_1\n                    expr_3722_component_1 := expr_3700_component\n                }\n                default {\n                    expr_3722_component := expr_3700_component\n                    expr_3722_component_1 := expr_3700_component_1\n                }\n                /// @src 13:9821:9900  \"(amountA, amountB) = tokenA == token0 ? (amount0, amount1) : (amount1, amount0)\"\n                var_amountB := expr_3722_component_1\n                var_amountA := expr_3722_component\n                /// @src 13:9910:9964  \"if (amountA < amountAMin) revert InsufficientAAmount()\"\n                if /** @src 13:9914:9934  \"amountA < amountAMin\" */ lt(expr_3722_component, var_amountAMin)\n                /// @src 13:9910:9964  \"if (amountA < amountAMin) revert InsufficientAAmount()\"\n                {\n                    /// @src 13:9943:9964  \"InsufficientAAmount()\"\n                    let _8 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(_3)\n                    /// @src 13:9943:9964  \"InsufficientAAmount()\"\n                    mstore(_8, /** @src 13:4554:4575  \"InsufficientAAmount()\" */ shl(224, 0x8dc525d1))\n                    /// @src 13:9943:9964  \"InsufficientAAmount()\"\n                    revert(_8, /** @src 13:9710:9739  \"IUniswapV2Pair(pair).burn(to)\" */ 4)\n                }\n                /// @src 13:9974:10028  \"if (amountB < amountBMin) revert InsufficientBAmount()\"\n                if /** @src 13:9978:9998  \"amountB < amountBMin\" */ lt(expr_3722_component_1, var_amountBMin)\n                /// @src 13:9974:10028  \"if (amountB < amountBMin) revert InsufficientBAmount()\"\n                {\n                    /// @src 13:10007:10028  \"InsufficientBAmount()\"\n                    let _9 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(_3)\n                    /// @src 13:10007:10028  \"InsufficientBAmount()\"\n                    mstore(_9, /** @src 13:4804:4825  \"InsufficientBAmount()\" */ shl(224, 0xef71d091))\n                    /// @src 13:10007:10028  \"InsufficientBAmount()\"\n                    revert(_9, /** @src 13:9710:9739  \"IUniswapV2Pair(pair).burn(to)\" */ 4)\n                }\n            }\n            /// @ast-id 3833 @src 13:10677:11582  \"function removeLiquidityETH(...\"\n            function fun_removeLiquidityETH(var_token, var_liquidity, var_amountTokenMin, var_amountETHMin, var_to, var_deadline) -> var_amountToken, var_amountETH\n            {\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let _1 := and(/** @src 13:10998:11010  \"ERC20(token)\" */ var_token, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ sub(shl(160, 1), 1))\n                /// @src 13:10998:11035  \"ERC20(token).balanceOf(address(this))\"\n                let _2 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                /// @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\"\n                let _3 := shl(224, 0x70a08231)\n                /// @src 13:10998:11035  \"ERC20(token).balanceOf(address(this))\"\n                mstore(_2, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ _3)\n                /// @src 13:10998:11035  \"ERC20(token).balanceOf(address(this))\"\n                let _4 := 32\n                let _5 := staticcall(gas(), _1, _2, sub(abi_encode_tuple_address(add(_2, 4), /** @src 13:11029:11033  \"this\" */ address()), /** @src 13:10998:11035  \"ERC20(token).balanceOf(address(this))\" */ _2), _2, _4)\n                if iszero(_5) { revert_forward() }\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 13:10998:11035  \"ERC20(token).balanceOf(address(this))\"\n                if _5\n                {\n                    let _6 := _4\n                    if gt(_4, returndatasize()) { _6 := returndatasize() }\n                    finalize_allocation(_2, _6)\n                    expr := abi_decode_uint256_fromMemory(_2, add(_2, _6))\n                }\n                /// @src 13:11072:11260  \"removeLiquidity(...\"\n                let expr_3790_component, expr_3790_component_1 := fun_removeLiquidity_16385(var_token, var_liquidity, var_amountTokenMin, var_amountETHMin, /** @src 13:11029:11033  \"this\" */ address(), /** @src 13:11072:11260  \"removeLiquidity(...\" */ var_deadline)\n                /// @src 13:11045:11260  \"(amountToken, amountETH) = removeLiquidity(...\"\n                var_amountETH := expr_3790_component_1\n                var_amountToken := expr_3790_component\n                /// @src 13:11342:11379  \"ERC20(token).balanceOf(address(this))\"\n                let _7 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                /// @src 13:11342:11379  \"ERC20(token).balanceOf(address(this))\"\n                mstore(_7, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ _3)\n                /// @src 13:11342:11379  \"ERC20(token).balanceOf(address(this))\"\n                let _8 := staticcall(gas(), _1, _7, sub(abi_encode_tuple_address(add(_7, /** @src 13:10998:11035  \"ERC20(token).balanceOf(address(this))\" */ 4), /** @src 13:11029:11033  \"this\" */ address()), /** @src 13:11342:11379  \"ERC20(token).balanceOf(address(this))\" */ _7), _7, /** @src 13:10998:11035  \"ERC20(token).balanceOf(address(this))\" */ _4)\n                /// @src 13:11342:11379  \"ERC20(token).balanceOf(address(this))\"\n                if iszero(_8) { revert_forward() }\n                let expr_1 := /** @src -1:-1:-1 */ 0\n                /// @src 13:11342:11379  \"ERC20(token).balanceOf(address(this))\"\n                if _8\n                {\n                    let _9 := /** @src 13:10998:11035  \"ERC20(token).balanceOf(address(this))\" */ _4\n                    /// @src 13:11342:11379  \"ERC20(token).balanceOf(address(this))\"\n                    if gt(/** @src 13:10998:11035  \"ERC20(token).balanceOf(address(this))\" */ _4, /** @src 13:11342:11379  \"ERC20(token).balanceOf(address(this))\" */ returndatasize()) { _9 := returndatasize() }\n                    finalize_allocation(_7, _9)\n                    expr_1 := abi_decode_uint256_fromMemory(_7, add(_7, _9))\n                }\n                /// @src 13:11323:11426  \"if (amountToken != ERC20(token).balanceOf(address(this)) - balanceBefore) revert TokenIsFeeOnTransfer()\"\n                if /** @src 13:11327:11395  \"amountToken != ERC20(token).balanceOf(address(this)) - balanceBefore\" */ iszero(eq(expr_3790_component, /** @src 13:11342:11395  \"ERC20(token).balanceOf(address(this)) - balanceBefore\" */ checked_sub_uint256(expr_1, expr)))\n                /// @src 13:11323:11426  \"if (amountToken != ERC20(token).balanceOf(address(this)) - balanceBefore) revert TokenIsFeeOnTransfer()\"\n                {\n                    /// @src 13:11404:11426  \"TokenIsFeeOnTransfer()\"\n                    let _10 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                    /// @src 13:11404:11426  \"TokenIsFeeOnTransfer()\"\n                    mstore(_10, shl(224, 0xa4de03c7))\n                    revert(_10, /** @src 13:10998:11035  \"ERC20(token).balanceOf(address(this))\" */ 4)\n                }\n                /// @src 13:11466:11477  \"amountToken\"\n                fun_safeTransfer(_1, var_to, expr_3790_component)\n                /// @src 13:1431:1473  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\"\n                let _11 := 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\n                /// @src 13:11488:11519  \"IWETH(weth).withdraw(amountETH)\"\n                if iszero(extcodesize(/** @src 13:1431:1473  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\" */ _11))\n                /// @src 13:11488:11519  \"IWETH(weth).withdraw(amountETH)\"\n                {\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 13:11488:11519  \"IWETH(weth).withdraw(amountETH)\"\n                let _12 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                /// @src 13:11488:11519  \"IWETH(weth).withdraw(amountETH)\"\n                mstore(_12, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ shl(224, 0x2e1a7d4d))\n                /// @src 13:11488:11519  \"IWETH(weth).withdraw(amountETH)\"\n                let _13 := call(gas(), /** @src 13:1431:1473  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\" */ _11, /** @src -1:-1:-1 */ 0, /** @src 13:11488:11519  \"IWETH(weth).withdraw(amountETH)\" */ _12, sub(abi_encode_uint256(add(_12, /** @src 13:10998:11035  \"ERC20(token).balanceOf(address(this))\" */ 4), /** @src 13:11488:11519  \"IWETH(weth).withdraw(amountETH)\" */ expr_3790_component_1), _12), _12, /** @src -1:-1:-1 */ 0)\n                /// @src 13:11488:11519  \"IWETH(weth).withdraw(amountETH)\"\n                if iszero(_13) { revert_forward() }\n                if _13\n                {\n                    finalize_allocation_16266(_12)\n                    abi_decode(_12, _12)\n                }\n                /// @src 13:11565:11574  \"amountETH\"\n                fun_safeTransferETH(var_to, expr_3790_component_1)\n            }\n            /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n            function abi_encode_address_address_uint256_uint256_uint8_bytes32_bytes32(headStart, value0, value1, value2, value3, value4, value5, value6) -> tail\n            {\n                tail := add(headStart, 224)\n                let _1 := sub(shl(160, 1), 1)\n                mstore(headStart, and(value0, _1))\n                mstore(add(headStart, 32), and(value1, _1))\n                mstore(add(headStart, 64), value2)\n                mstore(add(headStart, 96), value3)\n                mstore(add(headStart, 128), and(value4, 0xff))\n                mstore(add(headStart, 160), value5)\n                mstore(add(headStart, 192), value6)\n            }\n            /// @ast-id 3908 @src 13:12468:13229  \"function removeLiquidityWithPermit(...\"\n            function fun_removeLiquidityWithPermit(var_tokenA, var_tokenB, var_liquidity, var_amountAMin, var_amountBMin, var_to, var_deadline, var_approveMax, var_v, var_r, var_s) -> var_amountA, var_amountB\n            {\n                /// @src 12:3399:3425  \"sortTokens(tokenA, tokenB)\"\n                let expr_component, expr_component_1 := fun_sortTokens(var_tokenA, var_tokenB)\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let _1 := and(/** @src 12:3442:3478  \"_asmPairFor(factory, token0, token1)\" */ fun_asmPairFor_16298(expr_component, expr_component_1), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ sub(shl(160, 1), 1))\n                /// @src 13:12992:13034  \"approveMax ? type(uint256).max : liquidity\"\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 13:12992:13034  \"approveMax ? type(uint256).max : liquidity\"\n                switch var_approveMax\n                case 0 { expr := var_liquidity }\n                default {\n                    expr := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ not(0)\n                }\n                /// @src 13:12836:13111  \"IUniswapV2Pair(OpenMevLibrary.pairFor(OpenMevLibrary.SUSHI_FACTORY, tokenA, tokenB)).permit(...\"\n                if iszero(extcodesize(_1))\n                {\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 13:12836:13111  \"IUniswapV2Pair(OpenMevLibrary.pairFor(OpenMevLibrary.SUSHI_FACTORY, tokenA, tokenB)).permit(...\"\n                let _2 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                /// @src 13:12836:13111  \"IUniswapV2Pair(OpenMevLibrary.pairFor(OpenMevLibrary.SUSHI_FACTORY, tokenA, tokenB)).permit(...\"\n                mstore(_2, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ shl(224, 0xd505accf))\n                /// @src 13:12836:13111  \"IUniswapV2Pair(OpenMevLibrary.pairFor(OpenMevLibrary.SUSHI_FACTORY, tokenA, tokenB)).permit(...\"\n                let _3 := call(gas(), _1, /** @src -1:-1:-1 */ 0, /** @src 13:12836:13111  \"IUniswapV2Pair(OpenMevLibrary.pairFor(OpenMevLibrary.SUSHI_FACTORY, tokenA, tokenB)).permit(...\" */ _2, sub(abi_encode_address_address_uint256_uint256_uint8_bytes32_bytes32(add(_2, 4), /** @src 13:12941:12951  \"msg.sender\" */ caller(), /** @src 13:12973:12977  \"this\" */ address(), /** @src 13:12836:13111  \"IUniswapV2Pair(OpenMevLibrary.pairFor(OpenMevLibrary.SUSHI_FACTORY, tokenA, tokenB)).permit(...\" */ expr, var_deadline, var_v, var_r, var_s), _2), _2, /** @src -1:-1:-1 */ 0)\n                /// @src 13:12836:13111  \"IUniswapV2Pair(OpenMevLibrary.pairFor(OpenMevLibrary.SUSHI_FACTORY, tokenA, tokenB)).permit(...\"\n                if iszero(_3) { revert_forward() }\n                if _3 { finalize_allocation_16266(_2) }\n                /// @src 13:13142:13222  \"removeLiquidity(tokenA, tokenB, liquidity, amountAMin, amountBMin, to, deadline)\"\n                let expr_3904_component, expr_3904_component_1 := fun_removeLiquidity(var_tokenA, var_tokenB, var_liquidity, var_amountAMin, var_amountBMin, var_to, var_deadline)\n                /// @src 13:13121:13222  \"(amountA, amountB) = removeLiquidity(tokenA, tokenB, liquidity, amountAMin, amountBMin, to, deadline)\"\n                var_amountB := expr_3904_component_1\n                var_amountA := expr_3904_component\n            }\n            /// @ast-id 4063 @src 13:15461:16145  \"function removeLiquidityETHSupportingFeeOnTransferTokens(...\"\n            function fun_removeLiquidityETHSupportingFeeOnTransferTokens(var_token, var_liquidity, var_amountTokenMin, var_amountETHMin, var_to, var_deadline) -> var_amountETH\n            {\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let _1 := and(/** @src 13:15790:15802  \"ERC20(token)\" */ var_token, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ sub(shl(160, 1), 1))\n                /// @src 13:15790:15827  \"ERC20(token).balanceOf(address(this))\"\n                let _2 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                /// @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\"\n                let _3 := shl(224, 0x70a08231)\n                /// @src 13:15790:15827  \"ERC20(token).balanceOf(address(this))\"\n                mstore(_2, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ _3)\n                /// @src 13:15790:15827  \"ERC20(token).balanceOf(address(this))\"\n                let _4 := 32\n                let _5 := staticcall(gas(), _1, _2, sub(abi_encode_tuple_address(add(_2, 4), /** @src 13:15821:15825  \"this\" */ address()), /** @src 13:15790:15827  \"ERC20(token).balanceOf(address(this))\" */ _2), _2, _4)\n                if iszero(_5) { revert_forward() }\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 13:15790:15827  \"ERC20(token).balanceOf(address(this))\"\n                if _5\n                {\n                    let _6 := _4\n                    if gt(_4, returndatasize()) { _6 := returndatasize() }\n                    finalize_allocation(_2, _6)\n                    expr := abi_decode_uint256_fromMemory(_2, add(_2, _6))\n                }\n                /// @src 13:15853:15947  \"removeLiquidity(token, weth, liquidity, amountTokenMin, amountETHMin, address(this), deadline)\"\n                let expr_4027_component, expr_4027_component_1 := fun_removeLiquidity_16385(var_token, var_liquidity, var_amountTokenMin, var_amountETHMin, /** @src 13:15821:15825  \"this\" */ address(), /** @src 13:15853:15947  \"removeLiquidity(token, weth, liquidity, amountTokenMin, amountETHMin, address(this), deadline)\" */ var_deadline)\n                /// @src 13:15837:15947  \"(, amountETH) = removeLiquidity(token, weth, liquidity, amountTokenMin, amountETHMin, address(this), deadline)\"\n                var_amountETH := expr_4027_component_1\n                /// @src 13:15987:16024  \"ERC20(token).balanceOf(address(this))\"\n                let _7 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                /// @src 13:15987:16024  \"ERC20(token).balanceOf(address(this))\"\n                mstore(_7, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ _3)\n                /// @src 13:15987:16024  \"ERC20(token).balanceOf(address(this))\"\n                let _8 := staticcall(gas(), _1, _7, sub(abi_encode_tuple_address(add(_7, /** @src 13:15790:15827  \"ERC20(token).balanceOf(address(this))\" */ 4), /** @src 13:15821:15825  \"this\" */ address()), /** @src 13:15987:16024  \"ERC20(token).balanceOf(address(this))\" */ _7), _7, /** @src 13:15790:15827  \"ERC20(token).balanceOf(address(this))\" */ _4)\n                /// @src 13:15987:16024  \"ERC20(token).balanceOf(address(this))\"\n                if iszero(_8) { revert_forward() }\n                let expr_1 := /** @src -1:-1:-1 */ 0\n                /// @src 13:15987:16024  \"ERC20(token).balanceOf(address(this))\"\n                if _8\n                {\n                    let _9 := /** @src 13:15790:15827  \"ERC20(token).balanceOf(address(this))\" */ _4\n                    /// @src 13:15987:16024  \"ERC20(token).balanceOf(address(this))\"\n                    if gt(/** @src 13:15790:15827  \"ERC20(token).balanceOf(address(this))\" */ _4, /** @src 13:15987:16024  \"ERC20(token).balanceOf(address(this))\" */ returndatasize()) { _9 := returndatasize() }\n                    finalize_allocation(_7, _9)\n                    expr_1 := abi_decode_uint256_fromMemory(_7, add(_7, _9))\n                }\n                /// @src 13:15987:16040  \"ERC20(token).balanceOf(address(this)) - balanceBefore\"\n                fun_safeTransfer(_1, var_to, checked_sub_uint256(expr_1, expr))\n                /// @src 13:1431:1473  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\"\n                let _10 := 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\n                /// @src 13:16051:16082  \"IWETH(weth).withdraw(amountETH)\"\n                if iszero(extcodesize(/** @src 13:1431:1473  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\" */ _10))\n                /// @src 13:16051:16082  \"IWETH(weth).withdraw(amountETH)\"\n                {\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 13:16051:16082  \"IWETH(weth).withdraw(amountETH)\"\n                let _11 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                /// @src 13:16051:16082  \"IWETH(weth).withdraw(amountETH)\"\n                mstore(_11, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ shl(224, 0x2e1a7d4d))\n                /// @src 13:16051:16082  \"IWETH(weth).withdraw(amountETH)\"\n                let _12 := call(gas(), /** @src 13:1431:1473  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\" */ _10, /** @src -1:-1:-1 */ 0, /** @src 13:16051:16082  \"IWETH(weth).withdraw(amountETH)\" */ _11, sub(abi_encode_uint256(add(_11, /** @src 13:15790:15827  \"ERC20(token).balanceOf(address(this))\" */ 4), /** @src 13:16051:16082  \"IWETH(weth).withdraw(amountETH)\" */ expr_4027_component_1), _11), _11, /** @src -1:-1:-1 */ 0)\n                /// @src 13:16051:16082  \"IWETH(weth).withdraw(amountETH)\"\n                if iszero(_12) { revert_forward() }\n                if _12\n                {\n                    finalize_allocation_16266(_11)\n                    abi_decode(_11, _11)\n                }\n                /// @src 13:16128:16137  \"amountETH\"\n                fun_safeTransferETH(var_to, expr_4027_component_1)\n            }\n            /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n            function array_allocation_size_array_address_dyn(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n                size := add(shl(5, length), 0x20)\n            }\n            function abi_decode_available_length_array_address_dyn(offset, length, end) -> array\n            {\n                let _1 := array_allocation_size_array_address_dyn(length)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _1)\n                array := memPtr\n                let dst := memPtr\n                mstore(memPtr, length)\n                let _2 := 0x20\n                dst := add(memPtr, _2)\n                let srcEnd := add(offset, shl(5, length))\n                if gt(srcEnd, end)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let src := offset\n                for { } lt(src, srcEnd) { src := add(src, _2) }\n                {\n                    let value := calldataload(src)\n                    validator_revert_address(value)\n                    mstore(dst, value)\n                    dst := add(dst, _2)\n                }\n            }\n            function panic_error_0x32()\n            {\n                mstore(0, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ shl(224, 0x4e487b71))\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                mstore(4, 0x32)\n                revert(0, 0x24)\n            }\n            function memory_array_index_access_struct_Swap_dyn_16265(baseRef) -> addr\n            {\n                if iszero(mload(baseRef)) { panic_error_0x32() }\n                addr := add(baseRef, 32)\n            }\n            function memory_array_index_access_struct_Swap_dyn(baseRef, index) -> addr\n            {\n                if iszero(lt(index, mload(baseRef))) { panic_error_0x32() }\n                addr := add(add(baseRef, shl(5, index)), 32)\n            }\n            /// @src 13:1522:1564  \"0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f\"\n            function calldata_array_index_access_address_dyn_calldata_16264(base_ref, length) -> addr\n            {\n                if iszero(length) { panic_error_0x32() }\n                addr := base_ref\n            }\n            function calldata_array_index_access_address_dyn_calldata_16303(base_ref, length) -> addr\n            {\n                if iszero(lt(/** @src 13:33982:33983  \"1\" */ 0x01, /** @src 13:1522:1564  \"0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f\" */ length)) { panic_error_0x32() }\n                addr := add(base_ref, 32)\n            }\n            function calldata_array_index_access_address_dyn_calldata(base_ref, length, index) -> addr\n            {\n                if iszero(lt(index, length)) { panic_error_0x32() }\n                addr := add(base_ref, shl(5, index))\n            }\n            function read_from_calldatat_address(ptr) -> returnValue\n            {\n                let value := calldataload(ptr)\n                validator_revert_address(value)\n                returnValue := value\n            }\n            function read_from_memoryt_address(ptr) -> returnValue\n            {\n                returnValue := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 13:1522:1564  \"0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f\" */ mload(ptr), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ sub(shl(160, 1), 1))\n            }\n            function allocate_and_zero_memory_array_array_struct_Swap_dyn(length) -> memPtr\n            {\n                let _1 := array_allocation_size_array_address_dyn(length)\n                let _2 := 64\n                let memPtr_1 := mload(_2)\n                finalize_allocation(memPtr_1, _1)\n                mstore(memPtr_1, length)\n                memPtr := memPtr_1\n                let _3 := add(array_allocation_size_array_address_dyn(length), /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ not(31))\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                for { } lt(i, _3) { i := add(i, 32) }\n                {\n                    let memPtr_2 := mload(_2)\n                    /// @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\"\n                    let newFreePtr := add(memPtr_2, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 224)\n                    /// @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\"\n                    if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr_2)) { panic_error_0x41() }\n                    mstore(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _2, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ newFreePtr)\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    mstore(memPtr_2, /** @src -1:-1:-1 */ 0)\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    let _4 := 32\n                    mstore(add(memPtr_2, _4), /** @src -1:-1:-1 */ 0)\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    mstore(add(memPtr_2, _2), /** @src -1:-1:-1 */ 0)\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    mstore(add(memPtr_2, 96), /** @src -1:-1:-1 */ 0)\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    mstore(add(memPtr_2, 128), /** @src -1:-1:-1 */ 0)\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    mstore(add(memPtr_2, 160), /** @src -1:-1:-1 */ 0)\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    mstore(add(memPtr_2, 192), /** @src -1:-1:-1 */ 0)\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    mstore(add(add(memPtr_1, i), _4), memPtr_2)\n                }\n            }\n            function write_to_memory_bool(memPtr, value)\n            {\n                mstore(memPtr, iszero(iszero(value)))\n            }\n            function write_to_memory_address(memPtr, value)\n            {\n                mstore(memPtr, and(value, sub(shl(160, 1), 1)))\n            }\n            /// @ast-id 2474 @src 12:10312:11777  \"function getSwapsOut(...\"\n            function fun_getSwapsOut_16262(var_amountIn, var_path_mpos) -> var_swaps_mpos\n            {\n                /// @src 12:10492:10503  \"path.length\"\n                let expr := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 12:10492:10503  \"path.length\" */ var_path_mpos)\n                /// @src 12:10513:10549  \"if (length < 2) revert InvalidPath()\"\n                if /** @src 12:10517:10527  \"length < 2\" */ lt(expr, /** @src 12:10526:10527  \"2\" */ 0x02)\n                /// @src 12:10513:10549  \"if (length < 2) revert InvalidPath()\"\n                {\n                    /// @src 12:10536:10549  \"InvalidPath()\"\n                    let _1 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                    /// @src 12:10536:10549  \"InvalidPath()\"\n                    mstore(_1, /** @src 13:28052:28065  \"InvalidPath()\" */ shl(224, 0x20db8267))\n                    /// @src 12:10536:10549  \"InvalidPath()\"\n                    revert(_1, 4)\n                }\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let diff := add(expr, not(0))\n                /// @src 12:10559:10591  \"swaps = new Swap[](_dec(length))\"\n                var_swaps_mpos := /** @src 12:10567:10591  \"new Swap[](_dec(length))\" */ allocate_and_zero_memory_array_array_struct_Swap_dyn(diff)\n                /// @src 12:10601:10618  \"swaps[0].amountIn\"\n                let _2 := 160\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                mstore(/** @src 12:10601:10618  \"swaps[0].amountIn\" */ add(/** @src 12:10601:10609  \"swaps[0]\" */ mload(memory_array_index_access_struct_Swap_dyn_16265(var_swaps_mpos)), /** @src 12:10601:10618  \"swaps[0].amountIn\" */ _2), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ var_amountIn)\n                /// @src 12:10644:10653  \"uint256 i\"\n                let var_i := /** @src -1:-1:-1 */ 0\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let diff_1 := add(expr, /** @src 13:1431:1473  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\" */ not(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 1))\n                /// @src 12:10639:11771  \"for (uint256 i; i < _dec(length); i = _inc(i)) {...\"\n                for { }\n                /** @src 12:10655:10671  \"i < _dec(length)\" */ lt(var_i, diff)\n                /// @src 12:10644:10653  \"uint256 i\"\n                {\n                    /// @src 12:10673:10684  \"i = _inc(i)\"\n                    var_i := /** @src 12:1287:1291  \"1000\" */ add(var_i, /** @src 12:20463:20464  \"1\" */ 0x01)\n                }\n                /// @src 12:10673:10684  \"i = _inc(i)\"\n                {\n                    /// @src 12:10739:10746  \"path[i]\"\n                    let _3 := read_from_memoryt_address(memory_array_index_access_struct_Swap_dyn(var_path_mpos, var_i))\n                    /// @src 12:1287:1291  \"1000\"\n                    let sum := add(var_i, /** @src 12:20463:20464  \"1\" */ 0x01)\n                    /// @src 12:10748:10761  \"path[_inc(i)]\"\n                    let _4 := read_from_memoryt_address(memory_array_index_access_struct_Swap_dyn(var_path_mpos, sum))\n                    /// @src 12:10811:10840  \"sortTokens(tokenIn, tokenOut)\"\n                    let expr_component, expr_component_1 := fun_sortTokens(_3, _4)\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    let _5 := sub(shl(160, 1), 1)\n                    /// @src 12:10871:10889  \"tokenOut == token0\"\n                    let expr_1 := eq(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 12:10871:10889  \"tokenOut == token0\" */ _4, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _5), and(/** @src 12:10871:10889  \"tokenOut == token0\" */ expr_component, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _5))\n                    /// @src 12:10918:10954  \"_asmPairFor(factory, token0, token1)\"\n                    let expr_2 := fun_asmPairFor_16298(expr_component, expr_component_1)\n                    /// @src 12:10968:10998  \"swaps[i].isReverse = isReverse\"\n                    write_to_memory_bool(/** @src 12:10968:10976  \"swaps[i]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, var_i)), /** @src 12:10968:10998  \"swaps[i].isReverse = isReverse\" */ expr_1)\n                    /// @src 12:11012:11028  \"swaps[i].tokenIn\"\n                    let _6 := 64\n                    /// @src 12:11012:11038  \"swaps[i].tokenIn = tokenIn\"\n                    write_to_memory_address(/** @src 12:11012:11028  \"swaps[i].tokenIn\" */ add(/** @src 12:11012:11020  \"swaps[i]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, var_i)), /** @src 12:11012:11028  \"swaps[i].tokenIn\" */ _6), /** @src 12:11012:11038  \"swaps[i].tokenIn = tokenIn\" */ _3)\n                    /// @src 12:11052:11069  \"swaps[i].tokenOut\"\n                    let _7 := 96\n                    /// @src 12:11052:11080  \"swaps[i].tokenOut = tokenOut\"\n                    write_to_memory_address(/** @src 12:11052:11069  \"swaps[i].tokenOut\" */ add(/** @src 12:11052:11060  \"swaps[i]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, var_i)), /** @src 12:11052:11069  \"swaps[i].tokenOut\" */ _7), /** @src 12:11052:11080  \"swaps[i].tokenOut = tokenOut\" */ _4)\n                    /// @src 12:11094:11114  \"swaps[i].pair = pair\"\n                    write_to_memory_address(/** @src 12:11094:11107  \"swaps[i].pair\" */ add(/** @src 12:11094:11102  \"swaps[i]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, var_i)), /** @src 12:11094:11107  \"swaps[i].pair\" */ 128), /** @src 12:11094:11114  \"swaps[i].pair = pair\" */ expr_2)\n                    /// @src 12:11250:11284  \"IUniswapV2Pair(pair).getReserves()\"\n                    let _8 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 12:11012:11028  \"swaps[i].tokenIn\" */ _6)\n                    /// @src 12:11250:11284  \"IUniswapV2Pair(pair).getReserves()\"\n                    mstore(_8, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ shl(226, 0x0240bc6b))\n                    /// @src 12:11250:11284  \"IUniswapV2Pair(pair).getReserves()\"\n                    let _9 := staticcall(gas(), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 12:11250:11270  \"IUniswapV2Pair(pair)\" */ expr_2, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _5), /** @src 12:11250:11284  \"IUniswapV2Pair(pair).getReserves()\" */ _8, 4, _8, /** @src 12:11052:11069  \"swaps[i].tokenOut\" */ _7)\n                    /// @src 12:11250:11284  \"IUniswapV2Pair(pair).getReserves()\"\n                    if iszero(_9) { revert_forward() }\n                    let expr_component_2 := /** @src -1:-1:-1 */ 0\n                    let expr_component_3 := expr_component_2\n                    /// @src 12:11250:11284  \"IUniswapV2Pair(pair).getReserves()\"\n                    if _9\n                    {\n                        let _10 := /** @src 12:11052:11069  \"swaps[i].tokenOut\" */ _7\n                        /// @src 12:11250:11284  \"IUniswapV2Pair(pair).getReserves()\"\n                        if gt(/** @src 12:11052:11069  \"swaps[i].tokenOut\" */ _7, /** @src 12:11250:11284  \"IUniswapV2Pair(pair).getReserves()\" */ returndatasize()) { _10 := returndatasize() }\n                        finalize_allocation(_8, _10)\n                        let expr_component_4, expr_component_5, expr_component_6 := abi_decode_uint112t_uint112t_uint32_fromMemory(_8, add(_8, _10))\n                        expr_component_2 := expr_component_4\n                        expr_component_3 := expr_component_5\n                    }\n                    /// @src 12:11328:11383  \"isReverse ? (reserve1, reserve0) : (reserve0, reserve1)\"\n                    let expr_component_7 := /** @src -1:-1:-1 */ 0\n                    let expr_component_8 := expr_component_7\n                    /// @src 12:11328:11383  \"isReverse ? (reserve1, reserve0) : (reserve0, reserve1)\"\n                    switch expr_1\n                    case 0 {\n                        expr_component_7 := expr_component_2\n                        expr_component_8 := expr_component_3\n                    }\n                    default {\n                        expr_component_7 := expr_component_3\n                        expr_component_8 := expr_component_2\n                    }\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    let _11 := mload(/** @src 12:11445:11462  \"swaps[i].amountIn\" */ add(/** @src 12:11445:11453  \"swaps[i]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, var_i)), /** @src 12:10601:10618  \"swaps[0].amountIn\" */ _2))\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    let _12 := 0xffffffffffffffffffffffffffff\n                    /// @src 12:11432:11486  \"getAmountOut(swaps[i].amountIn, reserveIn, reserveOut)\"\n                    let _13 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 12:11432:11486  \"getAmountOut(swaps[i].amountIn, reserveIn, reserveOut)\" */ expr_component_7, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _12)\n                    /// @src 12:11432:11486  \"getAmountOut(swaps[i].amountIn, reserveIn, reserveOut)\"\n                    let _14 := fun_getAmountOut(_11, _13, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 12:11432:11486  \"getAmountOut(swaps[i].amountIn, reserveIn, reserveOut)\" */ expr_component_8, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _12))\n                    /// @src 12:11411:11429  \"swaps[i].amountOut\"\n                    let _15 := 192\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    mstore(/** @src 12:11411:11429  \"swaps[i].amountOut\" */ add(/** @src 12:11411:11419  \"swaps[i]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, var_i)), /** @src 12:11411:11429  \"swaps[i].amountOut\" */ _15), /** @src 12:11432:11486  \"getAmountOut(swaps[i].amountIn, reserveIn, reserveOut)\" */ _14)\n                    /// @src 12:11528:11604  \"swaps[i].isBackrunnable = _isNonZero((1000 * swaps[i].amountIn) / reserveIn)\"\n                    write_to_memory_bool(/** @src 12:11528:11551  \"swaps[i].isBackrunnable\" */ add(/** @src 12:11528:11536  \"swaps[i]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, var_i)), /** @src 12:11528:11551  \"swaps[i].isBackrunnable\" */ 32), /** @src 12:11554:11604  \"_isNonZero((1000 * swaps[i].amountIn) / reserveIn)\" */ cleanup_bool(/** @src 12:11565:11603  \"(1000 * swaps[i].amountIn) / reserveIn\" */ checked_div_uint256(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mul(/** @src 12:11566:11570  \"1000\" */ 0x03e8, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 12:11573:11590  \"swaps[i].amountIn\" */ add(/** @src 12:11573:11581  \"swaps[i]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, var_i)), /** @src 12:10601:10618  \"swaps[0].amountIn\" */ _2))), /** @src 12:11565:11603  \"(1000 * swaps[i].amountIn) / reserveIn\" */ _13)))\n                    /// @src 12:11688:11760  \"if (i < _dec(_dec(length))) swaps[_inc(i)].amountIn = swaps[i].amountOut\"\n                    if /** @src 12:11692:11714  \"i < _dec(_dec(length))\" */ lt(var_i, diff_1)\n                    /// @src 12:11688:11760  \"if (i < _dec(_dec(length))) swaps[_inc(i)].amountIn = swaps[i].amountOut\"\n                    {\n                        /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                        mstore(/** @src 12:11716:11739  \"swaps[_inc(i)].amountIn\" */ add(/** @src 12:11716:11730  \"swaps[_inc(i)]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, sum)), /** @src 12:10601:10618  \"swaps[0].amountIn\" */ _2), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 12:11742:11760  \"swaps[i].amountOut\" */ add(/** @src 12:11742:11750  \"swaps[i]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, var_i)), /** @src 12:11411:11429  \"swaps[i].amountOut\" */ _15)))\n                    }\n                }\n            }\n            /// @ast-id 2474 @src 12:10312:11777  \"function getSwapsOut(...\"\n            function fun_getSwapsOut(var_amountIn, var_path_mpos) -> var_swaps_mpos\n            {\n                /// @src 12:10492:10503  \"path.length\"\n                let expr := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 12:10492:10503  \"path.length\" */ var_path_mpos)\n                /// @src 12:10513:10549  \"if (length < 2) revert InvalidPath()\"\n                if /** @src 12:10517:10527  \"length < 2\" */ lt(expr, /** @src 12:10526:10527  \"2\" */ 0x02)\n                /// @src 12:10513:10549  \"if (length < 2) revert InvalidPath()\"\n                {\n                    /// @src 12:10536:10549  \"InvalidPath()\"\n                    let _1 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                    /// @src 12:10536:10549  \"InvalidPath()\"\n                    mstore(_1, /** @src 13:28052:28065  \"InvalidPath()\" */ shl(224, 0x20db8267))\n                    /// @src 12:10536:10549  \"InvalidPath()\"\n                    revert(_1, 4)\n                }\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let diff := add(expr, not(0))\n                /// @src 12:10559:10591  \"swaps = new Swap[](_dec(length))\"\n                var_swaps_mpos := /** @src 12:10567:10591  \"new Swap[](_dec(length))\" */ allocate_and_zero_memory_array_array_struct_Swap_dyn(diff)\n                /// @src 12:10601:10618  \"swaps[0].amountIn\"\n                let _2 := 160\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                mstore(/** @src 12:10601:10618  \"swaps[0].amountIn\" */ add(/** @src 12:10601:10609  \"swaps[0]\" */ mload(memory_array_index_access_struct_Swap_dyn_16265(var_swaps_mpos)), /** @src 12:10601:10618  \"swaps[0].amountIn\" */ _2), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ var_amountIn)\n                /// @src 12:10644:10653  \"uint256 i\"\n                let var_i := /** @src -1:-1:-1 */ 0\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let diff_1 := add(expr, /** @src 13:1431:1473  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\" */ not(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 1))\n                /// @src 12:10639:11771  \"for (uint256 i; i < _dec(length); i = _inc(i)) {...\"\n                for { }\n                /** @src 12:10655:10671  \"i < _dec(length)\" */ lt(var_i, diff)\n                /// @src 12:10644:10653  \"uint256 i\"\n                {\n                    /// @src 12:10673:10684  \"i = _inc(i)\"\n                    var_i := /** @src 12:1287:1291  \"1000\" */ add(var_i, /** @src 12:20463:20464  \"1\" */ 0x01)\n                }\n                /// @src 12:10673:10684  \"i = _inc(i)\"\n                {\n                    /// @src 12:10739:10746  \"path[i]\"\n                    let _3 := read_from_memoryt_address(memory_array_index_access_struct_Swap_dyn(var_path_mpos, var_i))\n                    /// @src 12:1287:1291  \"1000\"\n                    let sum := add(var_i, /** @src 12:20463:20464  \"1\" */ 0x01)\n                    /// @src 12:10748:10761  \"path[_inc(i)]\"\n                    let _4 := read_from_memoryt_address(memory_array_index_access_struct_Swap_dyn(var_path_mpos, sum))\n                    /// @src 12:10811:10840  \"sortTokens(tokenIn, tokenOut)\"\n                    let expr_component, expr_component_1 := fun_sortTokens(_3, _4)\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    let _5 := sub(shl(160, 1), 1)\n                    /// @src 12:10871:10889  \"tokenOut == token0\"\n                    let expr_1 := eq(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 12:10871:10889  \"tokenOut == token0\" */ _4, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _5), and(/** @src 12:10871:10889  \"tokenOut == token0\" */ expr_component, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _5))\n                    /// @src 12:10918:10954  \"_asmPairFor(factory, token0, token1)\"\n                    let expr_2 := fun_asmPairFor_42213(expr_component, expr_component_1)\n                    /// @src 12:10968:10998  \"swaps[i].isReverse = isReverse\"\n                    write_to_memory_bool(/** @src 12:10968:10976  \"swaps[i]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, var_i)), /** @src 12:10968:10998  \"swaps[i].isReverse = isReverse\" */ expr_1)\n                    /// @src 12:11012:11028  \"swaps[i].tokenIn\"\n                    let _6 := 64\n                    /// @src 12:11012:11038  \"swaps[i].tokenIn = tokenIn\"\n                    write_to_memory_address(/** @src 12:11012:11028  \"swaps[i].tokenIn\" */ add(/** @src 12:11012:11020  \"swaps[i]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, var_i)), /** @src 12:11012:11028  \"swaps[i].tokenIn\" */ _6), /** @src 12:11012:11038  \"swaps[i].tokenIn = tokenIn\" */ _3)\n                    /// @src 12:11052:11069  \"swaps[i].tokenOut\"\n                    let _7 := 96\n                    /// @src 12:11052:11080  \"swaps[i].tokenOut = tokenOut\"\n                    write_to_memory_address(/** @src 12:11052:11069  \"swaps[i].tokenOut\" */ add(/** @src 12:11052:11060  \"swaps[i]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, var_i)), /** @src 12:11052:11069  \"swaps[i].tokenOut\" */ _7), /** @src 12:11052:11080  \"swaps[i].tokenOut = tokenOut\" */ _4)\n                    /// @src 12:11094:11114  \"swaps[i].pair = pair\"\n                    write_to_memory_address(/** @src 12:11094:11107  \"swaps[i].pair\" */ add(/** @src 12:11094:11102  \"swaps[i]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, var_i)), /** @src 12:11094:11107  \"swaps[i].pair\" */ 128), /** @src 12:11094:11114  \"swaps[i].pair = pair\" */ expr_2)\n                    /// @src 12:11250:11284  \"IUniswapV2Pair(pair).getReserves()\"\n                    let _8 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 12:11012:11028  \"swaps[i].tokenIn\" */ _6)\n                    /// @src 12:11250:11284  \"IUniswapV2Pair(pair).getReserves()\"\n                    mstore(_8, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ shl(226, 0x0240bc6b))\n                    /// @src 12:11250:11284  \"IUniswapV2Pair(pair).getReserves()\"\n                    let _9 := staticcall(gas(), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 12:11250:11270  \"IUniswapV2Pair(pair)\" */ expr_2, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _5), /** @src 12:11250:11284  \"IUniswapV2Pair(pair).getReserves()\" */ _8, 4, _8, /** @src 12:11052:11069  \"swaps[i].tokenOut\" */ _7)\n                    /// @src 12:11250:11284  \"IUniswapV2Pair(pair).getReserves()\"\n                    if iszero(_9) { revert_forward() }\n                    let expr_component_2 := /** @src -1:-1:-1 */ 0\n                    let expr_component_3 := expr_component_2\n                    /// @src 12:11250:11284  \"IUniswapV2Pair(pair).getReserves()\"\n                    if _9\n                    {\n                        let _10 := /** @src 12:11052:11069  \"swaps[i].tokenOut\" */ _7\n                        /// @src 12:11250:11284  \"IUniswapV2Pair(pair).getReserves()\"\n                        if gt(/** @src 12:11052:11069  \"swaps[i].tokenOut\" */ _7, /** @src 12:11250:11284  \"IUniswapV2Pair(pair).getReserves()\" */ returndatasize()) { _10 := returndatasize() }\n                        finalize_allocation(_8, _10)\n                        let expr_component_4, expr_component_5, expr_component_6 := abi_decode_uint112t_uint112t_uint32_fromMemory(_8, add(_8, _10))\n                        expr_component_2 := expr_component_4\n                        expr_component_3 := expr_component_5\n                    }\n                    /// @src 12:11328:11383  \"isReverse ? (reserve1, reserve0) : (reserve0, reserve1)\"\n                    let expr_component_7 := /** @src -1:-1:-1 */ 0\n                    let expr_component_8 := expr_component_7\n                    /// @src 12:11328:11383  \"isReverse ? (reserve1, reserve0) : (reserve0, reserve1)\"\n                    switch expr_1\n                    case 0 {\n                        expr_component_7 := expr_component_2\n                        expr_component_8 := expr_component_3\n                    }\n                    default {\n                        expr_component_7 := expr_component_3\n                        expr_component_8 := expr_component_2\n                    }\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    let _11 := mload(/** @src 12:11445:11462  \"swaps[i].amountIn\" */ add(/** @src 12:11445:11453  \"swaps[i]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, var_i)), /** @src 12:10601:10618  \"swaps[0].amountIn\" */ _2))\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    let _12 := 0xffffffffffffffffffffffffffff\n                    /// @src 12:11432:11486  \"getAmountOut(swaps[i].amountIn, reserveIn, reserveOut)\"\n                    let _13 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 12:11432:11486  \"getAmountOut(swaps[i].amountIn, reserveIn, reserveOut)\" */ expr_component_7, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _12)\n                    /// @src 12:11432:11486  \"getAmountOut(swaps[i].amountIn, reserveIn, reserveOut)\"\n                    let _14 := fun_getAmountOut(_11, _13, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 12:11432:11486  \"getAmountOut(swaps[i].amountIn, reserveIn, reserveOut)\" */ expr_component_8, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _12))\n                    /// @src 12:11411:11429  \"swaps[i].amountOut\"\n                    let _15 := 192\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    mstore(/** @src 12:11411:11429  \"swaps[i].amountOut\" */ add(/** @src 12:11411:11419  \"swaps[i]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, var_i)), /** @src 12:11411:11429  \"swaps[i].amountOut\" */ _15), /** @src 12:11432:11486  \"getAmountOut(swaps[i].amountIn, reserveIn, reserveOut)\" */ _14)\n                    /// @src 12:11528:11604  \"swaps[i].isBackrunnable = _isNonZero((1000 * swaps[i].amountIn) / reserveIn)\"\n                    write_to_memory_bool(/** @src 12:11528:11551  \"swaps[i].isBackrunnable\" */ add(/** @src 12:11528:11536  \"swaps[i]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, var_i)), /** @src 12:11528:11551  \"swaps[i].isBackrunnable\" */ 32), /** @src 12:11554:11604  \"_isNonZero((1000 * swaps[i].amountIn) / reserveIn)\" */ cleanup_bool(/** @src 12:11565:11603  \"(1000 * swaps[i].amountIn) / reserveIn\" */ checked_div_uint256(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mul(/** @src 12:11566:11570  \"1000\" */ 0x03e8, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 12:11573:11590  \"swaps[i].amountIn\" */ add(/** @src 12:11573:11581  \"swaps[i]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, var_i)), /** @src 12:10601:10618  \"swaps[0].amountIn\" */ _2))), /** @src 12:11565:11603  \"(1000 * swaps[i].amountIn) / reserveIn\" */ _13)))\n                    /// @src 12:11688:11760  \"if (i < _dec(_dec(length))) swaps[_inc(i)].amountIn = swaps[i].amountOut\"\n                    if /** @src 12:11692:11714  \"i < _dec(_dec(length))\" */ lt(var_i, diff_1)\n                    /// @src 12:11688:11760  \"if (i < _dec(_dec(length))) swaps[_inc(i)].amountIn = swaps[i].amountOut\"\n                    {\n                        /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                        mstore(/** @src 12:11716:11739  \"swaps[_inc(i)].amountIn\" */ add(/** @src 12:11716:11730  \"swaps[_inc(i)]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, sum)), /** @src 12:10601:10618  \"swaps[0].amountIn\" */ _2), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 12:11742:11760  \"swaps[i].amountOut\" */ add(/** @src 12:11742:11750  \"swaps[i]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, var_i)), /** @src 12:11411:11429  \"swaps[i].amountOut\" */ _15)))\n                    }\n                }\n            }\n            /// @ast-id 2095 @src 12:6827:7562  \"function getAmountOut(...\"\n            function fun_getAmountOut(var_amountIn, var_reserveIn, var_reserveOut) -> var_amountOut\n            {\n                /// @src 12:6988:7030  \"if (_isZero(amountIn)) revert ZeroAmount()\"\n                if /** @src 12:19729:19788  \"assembly {...\" */ iszero(/** @src 12:6992:7009  \"_isZero(amountIn)\" */ var_amountIn)\n                /// @src 12:6988:7030  \"if (_isZero(amountIn)) revert ZeroAmount()\"\n                {\n                    /// @src 12:7018:7030  \"ZeroAmount()\"\n                    let _1 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                    /// @src 12:7018:7030  \"ZeroAmount()\"\n                    mstore(_1, /** @src 12:6283:6295  \"ZeroAmount()\" */ shl(224, 0x1f2a2005))\n                    /// @src 12:7018:7030  \"ZeroAmount()\"\n                    revert(_1, 4)\n                }\n                /// @src 12:1287:1291  \"1000\"\n                let _2 := 0x03e8\n                /// @src 12:7044:7107  \"reserveIn < MINIMUM_LIQUIDITY || reserveOut < MINIMUM_LIQUIDITY\"\n                let expr := /** @src 12:7044:7073  \"reserveIn < MINIMUM_LIQUIDITY\" */ lt(var_reserveIn, /** @src 12:1287:1291  \"1000\" */ _2)\n                /// @src 12:7044:7107  \"reserveIn < MINIMUM_LIQUIDITY || reserveOut < MINIMUM_LIQUIDITY\"\n                if iszero(expr)\n                {\n                    expr := /** @src 12:7077:7107  \"reserveOut < MINIMUM_LIQUIDITY\" */ lt(var_reserveOut, /** @src 12:1287:1291  \"1000\" */ _2)\n                }\n                /// @src 12:7040:7139  \"if (reserveIn < MINIMUM_LIQUIDITY || reserveOut < MINIMUM_LIQUIDITY) revert InsufficientLiquidity()\"\n                if expr\n                {\n                    /// @src 12:7116:7139  \"InsufficientLiquidity()\"\n                    let _3 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                    /// @src 12:7116:7139  \"InsufficientLiquidity()\"\n                    mstore(_3, /** @src 12:6356:6379  \"InsufficientLiquidity()\" */ shl(224, 0xbb55fd27))\n                    /// @src 12:7116:7139  \"InsufficientLiquidity()\"\n                    revert(_3, 4)\n                }\n                /// @src 12:7271:7274  \"997\"\n                let _4 := 0x03e5\n                /// @src 12:7252:7275  \"amountIn * uint256(997)\"\n                let expr_1 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mul(/** @src 12:7252:7275  \"amountIn * uint256(997)\" */ var_amountIn, /** @src 12:7271:7274  \"997\" */ _4)\n                /// @src 12:7309:7337  \"amountInWithFee * reserveOut\"\n                let expr_2 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mul(mul(/** @src 12:7252:7275  \"amountIn * uint256(997)\" */ var_amountIn, /** @src 12:7309:7337  \"amountInWithFee * reserveOut\" */ var_reserveOut), /** @src 12:7271:7274  \"997\" */ _4)\n                /// @src 12:7351:7415  \"if (reserveOut != numerator / amountInWithFee) revert Overflow()\"\n                if /** @src 12:7355:7396  \"reserveOut != numerator / amountInWithFee\" */ iszero(eq(var_reserveOut, /** @src 12:7369:7396  \"numerator / amountInWithFee\" */ checked_div_uint256(expr_2, expr_1)))\n                /// @src 12:7351:7415  \"if (reserveOut != numerator / amountInWithFee) revert Overflow()\"\n                {\n                    /// @src 12:7405:7415  \"Overflow()\"\n                    let _5 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                    /// @src 12:7405:7415  \"Overflow()\"\n                    mstore(_5, shl(225, 0x1a93c689))\n                    revert(_5, 4)\n                }\n                /// @src 12:7510:7545  \"amountOut = numerator / denominator\"\n                var_amountOut := /** @src 12:7522:7545  \"numerator / denominator\" */ checked_div_uint256(expr_2, /** @src 12:1287:1291  \"1000\" */ add(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mul(/** @src 12:7452:7477  \"reserveIn * uint256(1000)\" */ var_reserveIn, /** @src 12:1287:1291  \"1000\" */ _2), /** @src 12:7451:7496  \"(reserveIn * uint256(1000)) + amountInWithFee\" */ expr_1))\n            }\n            /// @ast-id 3157 @src 12:20361:20481  \"function _dec(uint256 i) internal pure returns (uint256) {...\"\n            function fun_dec(var_i) -> var_\n            {\n                /// @src 12:20452:20464  \"return i - 1\"\n                var_ := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ add(/** @src 12:20459:20464  \"i - 1\" */ var_i, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ not(0))\n            }\n            function allocate_and_zero_memory_array_array_uint256_dyn_16481() -> memPtr\n            {\n                let memPtr_1 := mload(64)\n                /// @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\"\n                let newFreePtr := add(memPtr_1, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 64)\n                /// @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\"\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr_1)) { panic_error_0x41() }\n                mstore(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 64, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ newFreePtr)\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                mstore(memPtr_1, /** @src 13:44985:44986  \"1\" */ 0x01)\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                memPtr := memPtr_1\n                calldatacopy(add(memPtr_1, 0x20), calldatasize(), 0x20)\n            }\n            function allocate_and_zero_memory_array_array_uint256_dyn(length) -> memPtr\n            {\n                let _1 := array_allocation_size_array_address_dyn(length)\n                let memPtr_1 := mload(64)\n                finalize_allocation(memPtr_1, _1)\n                mstore(memPtr_1, length)\n                memPtr := memPtr_1\n                calldatacopy(add(memPtr_1, 32), calldatasize(), add(array_allocation_size_array_address_dyn(length), /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ not(31)))\n            }\n            /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n            function read_from_memoryt_bool(ptr) -> returnValue\n            {\n                returnValue := iszero(iszero(mload(ptr)))\n            }\n            /// @ast-id 4251 @src 13:18009:18821  \"function _swap(address _to, OpenMevLibrary.Swap[] memory swaps)...\"\n            function fun_swap(var_to, var_swaps_4138_mpos) -> var_amounts_mpos\n            {\n                /// @src 13:18180:18192  \"swaps.length\"\n                let expr := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 13:18180:18192  \"swaps.length\" */ var_swaps_4138_mpos)\n                /// @src 12:20244:20245  \"1\"\n                let _1 := 0x01\n                /// @src 13:18202:18239  \"amounts = new uint256[](_inc(length))\"\n                var_amounts_mpos := /** @src 13:18212:18239  \"new uint256[](_inc(length))\" */ allocate_and_zero_memory_array_array_uint256_dyn(/** @src 12:1287:1291  \"1000\" */ add(/** @src 13:18226:18238  \"_inc(length)\" */ expr, /** @src 12:20244:20245  \"1\" */ _1))\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                mstore(/** @src 13:18249:18279  \"amounts[0] = swaps[0].amountIn\" */ memory_array_index_access_struct_Swap_dyn_16265(var_amounts_mpos), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 13:18262:18279  \"swaps[0].amountIn\" */ add(/** @src 13:18262:18270  \"swaps[0]\" */ mload(memory_array_index_access_struct_Swap_dyn_16265(var_swaps_4138_mpos)), /** @src 13:18262:18279  \"swaps[0].amountIn\" */ 160)))\n                /// @src 13:18294:18303  \"uint256 i\"\n                let var_i := /** @src 13:18268:18269  \"0\" */ 0x00\n                /// @src 13:18598:18614  \"i < _dec(length)\"\n                let _2 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ add(/** @src 13:18602:18614  \"_dec(length)\" */ expr, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ not(0))\n                /// @src 13:18289:18815  \"for (uint256 i; i < length; i = _inc(i)) {...\"\n                for { }\n                /** @src 13:18305:18315  \"i < length\" */ lt(var_i, expr)\n                /// @src 13:18294:18303  \"uint256 i\"\n                {\n                    /// @src 13:18317:18328  \"i = _inc(i)\"\n                    var_i := /** @src 12:1287:1291  \"1000\" */ add(/** @src 13:18321:18328  \"_inc(i)\" */ var_i, /** @src 12:20244:20245  \"1\" */ _1)\n                }\n                /// @src 13:18317:18328  \"i = _inc(i)\"\n                {\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    let _3 := mload(/** @src 13:18364:18382  \"swaps[i].amountOut\" */ add(/** @src 13:18364:18372  \"swaps[i]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_4138_mpos, var_i)), /** @src 13:18364:18382  \"swaps[i].amountOut\" */ 192))\n                    /// @src 13:18457:18475  \"swaps[i].isReverse\"\n                    let _4 := read_from_memoryt_bool(/** @src 13:18457:18465  \"swaps[i]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_4138_mpos, var_i)))\n                    /// @src 13:18457:18567  \"swaps[i].isReverse...\"\n                    let expr_4207_component := /** @src 13:18268:18269  \"0\" */ 0x00\n                    let expr_4207_component_1 := expr_4207_component\n                    /// @src 13:18457:18567  \"swaps[i].isReverse...\"\n                    switch _4\n                    case 0 {\n                        expr_4207_component := /** @src 13:18268:18269  \"0\" */ expr_4207_component\n                        /// @src 13:18457:18567  \"swaps[i].isReverse...\"\n                        expr_4207_component_1 := _3\n                    }\n                    default {\n                        expr_4207_component := _3\n                        expr_4207_component_1 := /** @src 13:18268:18269  \"0\" */ 0x00\n                    }\n                    /// @src 13:18598:18642  \"i < _dec(length) ? swaps[_inc(i)].pair : _to\"\n                    let expr_1 := /** @src 13:18268:18269  \"0\" */ 0x00\n                    /// @src 13:18598:18642  \"i < _dec(length) ? swaps[_inc(i)].pair : _to\"\n                    switch /** @src 13:18598:18614  \"i < _dec(length)\" */ lt(var_i, _2)\n                    case /** @src 13:18598:18642  \"i < _dec(length) ? swaps[_inc(i)].pair : _to\" */ 0 { expr_1 := var_to }\n                    default {\n                        expr_1 := /** @src 13:18617:18636  \"swaps[_inc(i)].pair\" */ read_from_memoryt_address(add(/** @src 13:18617:18631  \"swaps[_inc(i)]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_4138_mpos, /** @src 12:1287:1291  \"1000\" */ add(/** @src 13:18623:18630  \"_inc(i)\" */ var_i, /** @src 12:20244:20245  \"1\" */ _1))), /** @src 13:18675:18688  \"swaps[i].pair\" */ 128))\n                    }\n                    /// @src 13:18745:18747  \"to\"\n                    fun_asmSwap(/** @src 13:18675:18688  \"swaps[i].pair\" */ read_from_memoryt_address(add(/** @src 13:18675:18683  \"swaps[i]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_4138_mpos, var_i)), /** @src 13:18675:18688  \"swaps[i].pair\" */ 128)), /** @src 13:18745:18747  \"to\" */ expr_4207_component, expr_4207_component_1, expr_1)\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    mstore(/** @src 13:18776:18804  \"amounts[_inc(i)] = amountOut\" */ memory_array_index_access_struct_Swap_dyn(var_amounts_mpos, /** @src 12:1287:1291  \"1000\" */ add(/** @src 13:18784:18791  \"_inc(i)\" */ var_i, /** @src 12:20244:20245  \"1\" */ _1)), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _3)\n                }\n            }\n            /// @ast-id 2792 @src 12:13428:14960  \"function getSwapsIn(...\"\n            function fun_getSwapsIn(var_amountOut, var_path_mpos) -> var_swaps_mpos\n            {\n                /// @src 12:13608:13619  \"path.length\"\n                let expr := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 12:13608:13619  \"path.length\" */ var_path_mpos)\n                /// @src 12:13629:13665  \"if (length < 2) revert InvalidPath()\"\n                if /** @src 12:13633:13643  \"length < 2\" */ lt(expr, /** @src 12:13642:13643  \"2\" */ 0x02)\n                /// @src 12:13629:13665  \"if (length < 2) revert InvalidPath()\"\n                {\n                    /// @src 12:13652:13665  \"InvalidPath()\"\n                    let _1 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                    /// @src 12:13652:13665  \"InvalidPath()\"\n                    mstore(_1, /** @src 13:28052:28065  \"InvalidPath()\" */ shl(224, 0x20db8267))\n                    /// @src 12:13652:13665  \"InvalidPath()\"\n                    revert(_1, 4)\n                }\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let _2 := not(0)\n                /// @src 12:13694:13706  \"_dec(length)\"\n                let expr_1 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ add(/** @src 12:13694:13706  \"_dec(length)\" */ expr, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _2)\n                /// @src 12:13675:13707  \"swaps = new Swap[](_dec(length))\"\n                var_swaps_mpos := /** @src 12:13683:13707  \"new Swap[](_dec(length))\" */ allocate_and_zero_memory_array_array_struct_Swap_dyn(expr_1)\n                /// @src 12:13717:13752  \"swaps[_dec(_dec(length))].amountOut\"\n                let _3 := 192\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                mstore(/** @src 12:13717:13752  \"swaps[_dec(_dec(length))].amountOut\" */ add(/** @src 12:13717:13742  \"swaps[_dec(_dec(length))]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ add(/** @src 12:13694:13706  \"_dec(length)\" */ expr, /** @src 13:1431:1473  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\" */ not(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 1)))), /** @src 12:13717:13752  \"swaps[_dec(_dec(length))].amountOut\" */ _3), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ var_amountOut)\n                /// @src 12:13779:13803  \"uint256 i = _dec(length)\"\n                let var_i := expr_1\n                /// @src 12:13774:14954  \"for (uint256 i = _dec(length); _isNonZero(i); i = _dec(i)) {...\"\n                for { }\n                /** @src 12:13805:13818  \"_isNonZero(i)\" */ var_i\n                /// @src 12:13779:13803  \"uint256 i = _dec(length)\"\n                {\n                    /// @src 12:13820:13831  \"i = _dec(i)\"\n                    var_i := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ add(/** @src 12:13824:13831  \"_dec(i)\" */ var_i, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _2)\n                }\n                /// @src 12:13820:13831  \"i = _dec(i)\"\n                {\n                    /// @src 12:13891:13898  \"_dec(i)\"\n                    let expr_2 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ add(/** @src 12:13891:13898  \"_dec(i)\" */ var_i, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _2)\n                    /// @src 12:13886:13899  \"path[_dec(i)]\"\n                    let _4 := read_from_memoryt_address(memory_array_index_access_struct_Swap_dyn(var_path_mpos, expr_2))\n                    /// @src 12:13901:13908  \"path[i]\"\n                    let _5 := read_from_memoryt_address(memory_array_index_access_struct_Swap_dyn(var_path_mpos, var_i))\n                    /// @src 12:13958:13987  \"sortTokens(tokenIn, tokenOut)\"\n                    let expr_component, expr_component_1 := fun_sortTokens(_4, _5)\n                    /// @src 12:14016:14052  \"_asmPairFor(factory, token0, token1)\"\n                    let expr_3 := fun_asmPairFor_16298(expr_component, expr_component_1)\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    let _6 := sub(shl(160, 1), 1)\n                    /// @src 12:14083:14101  \"tokenOut == token0\"\n                    let expr_4 := eq(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 12:14083:14101  \"tokenOut == token0\" */ _5, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _6), and(/** @src 12:14083:14101  \"tokenOut == token0\" */ expr_component, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _6))\n                    /// @src 12:14115:14151  \"swaps[_dec(i)].isReverse = isReverse\"\n                    write_to_memory_bool(/** @src 12:14115:14129  \"swaps[_dec(i)]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, expr_2)), /** @src 12:14115:14151  \"swaps[_dec(i)].isReverse = isReverse\" */ expr_4)\n                    /// @src 12:14165:14187  \"swaps[_dec(i)].tokenIn\"\n                    let _7 := 64\n                    /// @src 12:14165:14197  \"swaps[_dec(i)].tokenIn = tokenIn\"\n                    write_to_memory_address(/** @src 12:14165:14187  \"swaps[_dec(i)].tokenIn\" */ add(/** @src 12:14165:14179  \"swaps[_dec(i)]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, expr_2)), /** @src 12:14165:14187  \"swaps[_dec(i)].tokenIn\" */ _7), /** @src 12:14165:14197  \"swaps[_dec(i)].tokenIn = tokenIn\" */ _4)\n                    /// @src 12:14211:14234  \"swaps[_dec(i)].tokenOut\"\n                    let _8 := 96\n                    /// @src 12:14211:14245  \"swaps[_dec(i)].tokenOut = tokenOut\"\n                    write_to_memory_address(/** @src 12:14211:14234  \"swaps[_dec(i)].tokenOut\" */ add(/** @src 12:14211:14225  \"swaps[_dec(i)]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, expr_2)), /** @src 12:14211:14234  \"swaps[_dec(i)].tokenOut\" */ _8), /** @src 12:14211:14245  \"swaps[_dec(i)].tokenOut = tokenOut\" */ _5)\n                    /// @src 12:14259:14285  \"swaps[_dec(i)].pair = pair\"\n                    write_to_memory_address(/** @src 12:14259:14278  \"swaps[_dec(i)].pair\" */ add(/** @src 12:14259:14273  \"swaps[_dec(i)]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, expr_2)), /** @src 12:14259:14278  \"swaps[_dec(i)].pair\" */ 128), /** @src 12:14259:14285  \"swaps[_dec(i)].pair = pair\" */ expr_3)\n                    /// @src 12:14421:14455  \"IUniswapV2Pair(pair).getReserves()\"\n                    let _9 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 12:14165:14187  \"swaps[_dec(i)].tokenIn\" */ _7)\n                    /// @src 12:14421:14455  \"IUniswapV2Pair(pair).getReserves()\"\n                    mstore(_9, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ shl(226, 0x0240bc6b))\n                    /// @src 12:14421:14455  \"IUniswapV2Pair(pair).getReserves()\"\n                    let _10 := staticcall(gas(), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 12:14421:14441  \"IUniswapV2Pair(pair)\" */ expr_3, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _6), /** @src 12:14421:14455  \"IUniswapV2Pair(pair).getReserves()\" */ _9, 4, _9, /** @src 12:14211:14234  \"swaps[_dec(i)].tokenOut\" */ _8)\n                    /// @src 12:14421:14455  \"IUniswapV2Pair(pair).getReserves()\"\n                    if iszero(_10) { revert_forward() }\n                    let expr_component_2 := 0\n                    let expr_component_3 := expr_component_2\n                    if _10\n                    {\n                        let _11 := /** @src 12:14211:14234  \"swaps[_dec(i)].tokenOut\" */ _8\n                        /// @src 12:14421:14455  \"IUniswapV2Pair(pair).getReserves()\"\n                        if gt(/** @src 12:14211:14234  \"swaps[_dec(i)].tokenOut\" */ _8, /** @src 12:14421:14455  \"IUniswapV2Pair(pair).getReserves()\" */ returndatasize()) { _11 := returndatasize() }\n                        finalize_allocation(_9, _11)\n                        let expr_component_4, expr_component_5, expr_component_6 := abi_decode_uint112t_uint112t_uint32_fromMemory(_9, add(_9, _11))\n                        expr_component_2 := expr_component_4\n                        expr_component_3 := expr_component_5\n                    }\n                    /// @src 12:14499:14554  \"isReverse ? (reserve1, reserve0) : (reserve0, reserve1)\"\n                    let expr_component_7 := /** @src 12:14421:14455  \"IUniswapV2Pair(pair).getReserves()\" */ 0\n                    let expr_component_8 := expr_component_7\n                    /// @src 12:14499:14554  \"isReverse ? (reserve1, reserve0) : (reserve0, reserve1)\"\n                    switch expr_4\n                    case 0 {\n                        expr_component_7 := expr_component_2\n                        expr_component_8 := expr_component_3\n                    }\n                    default {\n                        expr_component_7 := expr_component_3\n                        expr_component_8 := expr_component_2\n                    }\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    let _12 := mload(/** @src 12:14620:14644  \"swaps[_dec(i)].amountOut\" */ add(/** @src 12:14620:14634  \"swaps[_dec(i)]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, expr_2)), /** @src 12:13717:13752  \"swaps[_dec(_dec(length))].amountOut\" */ _3))\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    let _13 := 0xffffffffffffffffffffffffffff\n                    /// @src 12:14608:14668  \"getAmountIn(swaps[_dec(i)].amountOut, reserveIn, reserveOut)\"\n                    let _14 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 12:14608:14668  \"getAmountIn(swaps[_dec(i)].amountOut, reserveIn, reserveOut)\" */ expr_component_8, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _13)\n                    /// @src 12:14608:14668  \"getAmountIn(swaps[_dec(i)].amountOut, reserveIn, reserveOut)\"\n                    let _15 := fun_getAmountIn(_12, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 12:14608:14668  \"getAmountIn(swaps[_dec(i)].amountOut, reserveIn, reserveOut)\" */ expr_component_7, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _13), /** @src 12:14608:14668  \"getAmountIn(swaps[_dec(i)].amountOut, reserveIn, reserveOut)\" */ _14)\n                    /// @src 12:14582:14605  \"swaps[_dec(i)].amountIn\"\n                    let _16 := 160\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    mstore(/** @src 12:14582:14605  \"swaps[_dec(i)].amountIn\" */ add(/** @src 12:14582:14596  \"swaps[_dec(i)]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, expr_2)), /** @src 12:14582:14605  \"swaps[_dec(i)].amountIn\" */ _16), /** @src 12:14608:14668  \"getAmountIn(swaps[_dec(i)].amountOut, reserveIn, reserveOut)\" */ _15)\n                    /// @src 12:14710:14800  \"swaps[_dec(i)].isBackrunnable = _isNonZero((1000 * swaps[_dec(i)].amountOut) / reserveOut)\"\n                    write_to_memory_bool(/** @src 12:14710:14739  \"swaps[_dec(i)].isBackrunnable\" */ add(/** @src 12:14710:14724  \"swaps[_dec(i)]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, expr_2)), /** @src 12:14710:14739  \"swaps[_dec(i)].isBackrunnable\" */ 32), /** @src 12:14742:14800  \"_isNonZero((1000 * swaps[_dec(i)].amountOut) / reserveOut)\" */ cleanup_bool(/** @src 12:14753:14799  \"(1000 * swaps[_dec(i)].amountOut) / reserveOut\" */ checked_div_uint256(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mul(/** @src 12:14754:14758  \"1000\" */ 0x03e8, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 12:14761:14785  \"swaps[_dec(i)].amountOut\" */ add(/** @src 12:14761:14775  \"swaps[_dec(i)]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, expr_2)), /** @src 12:13717:13752  \"swaps[_dec(_dec(length))].amountOut\" */ _3))), /** @src 12:14753:14799  \"(1000 * swaps[_dec(i)].amountOut) / reserveOut\" */ _14)))\n                    /// @src 12:14884:14943  \"if (i > 1) swaps[i - 2].amountOut = swaps[_dec(i)].amountIn\"\n                    if /** @src 12:14888:14893  \"i > 1\" */ gt(var_i, /** @src 12:20463:20464  \"1\" */ 0x01)\n                    /// @src 12:14884:14943  \"if (i > 1) swaps[i - 2].amountOut = swaps[_dec(i)].amountIn\"\n                    {\n                        /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                        mstore(/** @src 12:14895:14917  \"swaps[i - 2].amountOut\" */ add(/** @src 12:14895:14907  \"swaps[i - 2]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, /** @src 12:14901:14906  \"i - 2\" */ checked_sub_uint256_16414(var_i))), /** @src 12:13717:13752  \"swaps[_dec(_dec(length))].amountOut\" */ _3), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 12:14920:14943  \"swaps[_dec(i)].amountIn\" */ add(/** @src 12:14920:14934  \"swaps[_dec(i)]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, expr_2)), /** @src 12:14582:14605  \"swaps[_dec(i)].amountIn\" */ _16)))\n                    }\n                }\n            }\n            /// @ast-id 2792 @src 12:13428:14960  \"function getSwapsIn(...\"\n            function fun_getSwapsIn_16290(var_amountOut, var_path_mpos) -> var_swaps_mpos\n            {\n                /// @src 12:13608:13619  \"path.length\"\n                let expr := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 12:13608:13619  \"path.length\" */ var_path_mpos)\n                /// @src 12:13629:13665  \"if (length < 2) revert InvalidPath()\"\n                if /** @src 12:13633:13643  \"length < 2\" */ lt(expr, /** @src 12:13642:13643  \"2\" */ 0x02)\n                /// @src 12:13629:13665  \"if (length < 2) revert InvalidPath()\"\n                {\n                    /// @src 12:13652:13665  \"InvalidPath()\"\n                    let _1 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                    /// @src 12:13652:13665  \"InvalidPath()\"\n                    mstore(_1, /** @src 13:28052:28065  \"InvalidPath()\" */ shl(224, 0x20db8267))\n                    /// @src 12:13652:13665  \"InvalidPath()\"\n                    revert(_1, 4)\n                }\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let _2 := not(0)\n                /// @src 12:13694:13706  \"_dec(length)\"\n                let expr_1 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ add(/** @src 12:13694:13706  \"_dec(length)\" */ expr, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _2)\n                /// @src 12:13675:13707  \"swaps = new Swap[](_dec(length))\"\n                var_swaps_mpos := /** @src 12:13683:13707  \"new Swap[](_dec(length))\" */ allocate_and_zero_memory_array_array_struct_Swap_dyn(expr_1)\n                /// @src 12:13717:13752  \"swaps[_dec(_dec(length))].amountOut\"\n                let _3 := 192\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                mstore(/** @src 12:13717:13752  \"swaps[_dec(_dec(length))].amountOut\" */ add(/** @src 12:13717:13742  \"swaps[_dec(_dec(length))]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ add(/** @src 12:13694:13706  \"_dec(length)\" */ expr, /** @src 13:1431:1473  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\" */ not(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 1)))), /** @src 12:13717:13752  \"swaps[_dec(_dec(length))].amountOut\" */ _3), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ var_amountOut)\n                /// @src 12:13779:13803  \"uint256 i = _dec(length)\"\n                let var_i := expr_1\n                /// @src 12:13774:14954  \"for (uint256 i = _dec(length); _isNonZero(i); i = _dec(i)) {...\"\n                for { }\n                /** @src 12:13805:13818  \"_isNonZero(i)\" */ var_i\n                /// @src 12:13779:13803  \"uint256 i = _dec(length)\"\n                {\n                    /// @src 12:13820:13831  \"i = _dec(i)\"\n                    var_i := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ add(/** @src 12:13824:13831  \"_dec(i)\" */ var_i, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _2)\n                }\n                /// @src 12:13820:13831  \"i = _dec(i)\"\n                {\n                    /// @src 12:13891:13898  \"_dec(i)\"\n                    let expr_2 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ add(/** @src 12:13891:13898  \"_dec(i)\" */ var_i, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _2)\n                    /// @src 12:13886:13899  \"path[_dec(i)]\"\n                    let _4 := read_from_memoryt_address(memory_array_index_access_struct_Swap_dyn(var_path_mpos, expr_2))\n                    /// @src 12:13901:13908  \"path[i]\"\n                    let _5 := read_from_memoryt_address(memory_array_index_access_struct_Swap_dyn(var_path_mpos, var_i))\n                    /// @src 12:13958:13987  \"sortTokens(tokenIn, tokenOut)\"\n                    let expr_component, expr_component_1 := fun_sortTokens(_4, _5)\n                    /// @src 12:14016:14052  \"_asmPairFor(factory, token0, token1)\"\n                    let expr_3 := fun_asmPairFor_42213(expr_component, expr_component_1)\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    let _6 := sub(shl(160, 1), 1)\n                    /// @src 12:14083:14101  \"tokenOut == token0\"\n                    let expr_4 := eq(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 12:14083:14101  \"tokenOut == token0\" */ _5, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _6), and(/** @src 12:14083:14101  \"tokenOut == token0\" */ expr_component, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _6))\n                    /// @src 12:14115:14151  \"swaps[_dec(i)].isReverse = isReverse\"\n                    write_to_memory_bool(/** @src 12:14115:14129  \"swaps[_dec(i)]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, expr_2)), /** @src 12:14115:14151  \"swaps[_dec(i)].isReverse = isReverse\" */ expr_4)\n                    /// @src 12:14165:14187  \"swaps[_dec(i)].tokenIn\"\n                    let _7 := 64\n                    /// @src 12:14165:14197  \"swaps[_dec(i)].tokenIn = tokenIn\"\n                    write_to_memory_address(/** @src 12:14165:14187  \"swaps[_dec(i)].tokenIn\" */ add(/** @src 12:14165:14179  \"swaps[_dec(i)]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, expr_2)), /** @src 12:14165:14187  \"swaps[_dec(i)].tokenIn\" */ _7), /** @src 12:14165:14197  \"swaps[_dec(i)].tokenIn = tokenIn\" */ _4)\n                    /// @src 12:14211:14234  \"swaps[_dec(i)].tokenOut\"\n                    let _8 := 96\n                    /// @src 12:14211:14245  \"swaps[_dec(i)].tokenOut = tokenOut\"\n                    write_to_memory_address(/** @src 12:14211:14234  \"swaps[_dec(i)].tokenOut\" */ add(/** @src 12:14211:14225  \"swaps[_dec(i)]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, expr_2)), /** @src 12:14211:14234  \"swaps[_dec(i)].tokenOut\" */ _8), /** @src 12:14211:14245  \"swaps[_dec(i)].tokenOut = tokenOut\" */ _5)\n                    /// @src 12:14259:14285  \"swaps[_dec(i)].pair = pair\"\n                    write_to_memory_address(/** @src 12:14259:14278  \"swaps[_dec(i)].pair\" */ add(/** @src 12:14259:14273  \"swaps[_dec(i)]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, expr_2)), /** @src 12:14259:14278  \"swaps[_dec(i)].pair\" */ 128), /** @src 12:14259:14285  \"swaps[_dec(i)].pair = pair\" */ expr_3)\n                    /// @src 12:14421:14455  \"IUniswapV2Pair(pair).getReserves()\"\n                    let _9 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 12:14165:14187  \"swaps[_dec(i)].tokenIn\" */ _7)\n                    /// @src 12:14421:14455  \"IUniswapV2Pair(pair).getReserves()\"\n                    mstore(_9, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ shl(226, 0x0240bc6b))\n                    /// @src 12:14421:14455  \"IUniswapV2Pair(pair).getReserves()\"\n                    let _10 := staticcall(gas(), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 12:14421:14441  \"IUniswapV2Pair(pair)\" */ expr_3, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _6), /** @src 12:14421:14455  \"IUniswapV2Pair(pair).getReserves()\" */ _9, 4, _9, /** @src 12:14211:14234  \"swaps[_dec(i)].tokenOut\" */ _8)\n                    /// @src 12:14421:14455  \"IUniswapV2Pair(pair).getReserves()\"\n                    if iszero(_10) { revert_forward() }\n                    let expr_component_2 := 0\n                    let expr_component_3 := expr_component_2\n                    if _10\n                    {\n                        let _11 := /** @src 12:14211:14234  \"swaps[_dec(i)].tokenOut\" */ _8\n                        /// @src 12:14421:14455  \"IUniswapV2Pair(pair).getReserves()\"\n                        if gt(/** @src 12:14211:14234  \"swaps[_dec(i)].tokenOut\" */ _8, /** @src 12:14421:14455  \"IUniswapV2Pair(pair).getReserves()\" */ returndatasize()) { _11 := returndatasize() }\n                        finalize_allocation(_9, _11)\n                        let expr_component_4, expr_component_5, expr_component_6 := abi_decode_uint112t_uint112t_uint32_fromMemory(_9, add(_9, _11))\n                        expr_component_2 := expr_component_4\n                        expr_component_3 := expr_component_5\n                    }\n                    /// @src 12:14499:14554  \"isReverse ? (reserve1, reserve0) : (reserve0, reserve1)\"\n                    let expr_component_7 := /** @src 12:14421:14455  \"IUniswapV2Pair(pair).getReserves()\" */ 0\n                    let expr_component_8 := expr_component_7\n                    /// @src 12:14499:14554  \"isReverse ? (reserve1, reserve0) : (reserve0, reserve1)\"\n                    switch expr_4\n                    case 0 {\n                        expr_component_7 := expr_component_2\n                        expr_component_8 := expr_component_3\n                    }\n                    default {\n                        expr_component_7 := expr_component_3\n                        expr_component_8 := expr_component_2\n                    }\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    let _12 := mload(/** @src 12:14620:14644  \"swaps[_dec(i)].amountOut\" */ add(/** @src 12:14620:14634  \"swaps[_dec(i)]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, expr_2)), /** @src 12:13717:13752  \"swaps[_dec(_dec(length))].amountOut\" */ _3))\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    let _13 := 0xffffffffffffffffffffffffffff\n                    /// @src 12:14608:14668  \"getAmountIn(swaps[_dec(i)].amountOut, reserveIn, reserveOut)\"\n                    let _14 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 12:14608:14668  \"getAmountIn(swaps[_dec(i)].amountOut, reserveIn, reserveOut)\" */ expr_component_8, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _13)\n                    /// @src 12:14608:14668  \"getAmountIn(swaps[_dec(i)].amountOut, reserveIn, reserveOut)\"\n                    let _15 := fun_getAmountIn(_12, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 12:14608:14668  \"getAmountIn(swaps[_dec(i)].amountOut, reserveIn, reserveOut)\" */ expr_component_7, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _13), /** @src 12:14608:14668  \"getAmountIn(swaps[_dec(i)].amountOut, reserveIn, reserveOut)\" */ _14)\n                    /// @src 12:14582:14605  \"swaps[_dec(i)].amountIn\"\n                    let _16 := 160\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    mstore(/** @src 12:14582:14605  \"swaps[_dec(i)].amountIn\" */ add(/** @src 12:14582:14596  \"swaps[_dec(i)]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, expr_2)), /** @src 12:14582:14605  \"swaps[_dec(i)].amountIn\" */ _16), /** @src 12:14608:14668  \"getAmountIn(swaps[_dec(i)].amountOut, reserveIn, reserveOut)\" */ _15)\n                    /// @src 12:14710:14800  \"swaps[_dec(i)].isBackrunnable = _isNonZero((1000 * swaps[_dec(i)].amountOut) / reserveOut)\"\n                    write_to_memory_bool(/** @src 12:14710:14739  \"swaps[_dec(i)].isBackrunnable\" */ add(/** @src 12:14710:14724  \"swaps[_dec(i)]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, expr_2)), /** @src 12:14710:14739  \"swaps[_dec(i)].isBackrunnable\" */ 32), /** @src 12:14742:14800  \"_isNonZero((1000 * swaps[_dec(i)].amountOut) / reserveOut)\" */ cleanup_bool(/** @src 12:14753:14799  \"(1000 * swaps[_dec(i)].amountOut) / reserveOut\" */ checked_div_uint256(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mul(/** @src 12:14754:14758  \"1000\" */ 0x03e8, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 12:14761:14785  \"swaps[_dec(i)].amountOut\" */ add(/** @src 12:14761:14775  \"swaps[_dec(i)]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, expr_2)), /** @src 12:13717:13752  \"swaps[_dec(_dec(length))].amountOut\" */ _3))), /** @src 12:14753:14799  \"(1000 * swaps[_dec(i)].amountOut) / reserveOut\" */ _14)))\n                    /// @src 12:14884:14943  \"if (i > 1) swaps[i - 2].amountOut = swaps[_dec(i)].amountIn\"\n                    if /** @src 12:14888:14893  \"i > 1\" */ gt(var_i, /** @src 12:20463:20464  \"1\" */ 0x01)\n                    /// @src 12:14884:14943  \"if (i > 1) swaps[i - 2].amountOut = swaps[_dec(i)].amountIn\"\n                    {\n                        /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                        mstore(/** @src 12:14895:14917  \"swaps[i - 2].amountOut\" */ add(/** @src 12:14895:14907  \"swaps[i - 2]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, /** @src 12:14901:14906  \"i - 2\" */ checked_sub_uint256_16414(var_i))), /** @src 12:13717:13752  \"swaps[_dec(_dec(length))].amountOut\" */ _3), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 12:14920:14943  \"swaps[_dec(i)].amountIn\" */ add(/** @src 12:14920:14934  \"swaps[_dec(i)]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, expr_2)), /** @src 12:14582:14605  \"swaps[_dec(i)].amountIn\" */ _16)))\n                    }\n                }\n            }\n            /// @ast-id 2792 @src 12:13428:14960  \"function getSwapsIn(...\"\n            function fun_getSwapsIn_16324(var_amountOut, var_path_mpos) -> var_swaps_mpos\n            {\n                /// @src 12:13608:13619  \"path.length\"\n                let expr := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 12:13608:13619  \"path.length\" */ var_path_mpos)\n                /// @src 12:13629:13665  \"if (length < 2) revert InvalidPath()\"\n                if /** @src 12:13633:13643  \"length < 2\" */ lt(expr, /** @src 12:13642:13643  \"2\" */ 0x02)\n                /// @src 12:13629:13665  \"if (length < 2) revert InvalidPath()\"\n                {\n                    /// @src 12:13652:13665  \"InvalidPath()\"\n                    let _1 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                    /// @src 12:13652:13665  \"InvalidPath()\"\n                    mstore(_1, /** @src 13:28052:28065  \"InvalidPath()\" */ shl(224, 0x20db8267))\n                    /// @src 12:13652:13665  \"InvalidPath()\"\n                    revert(_1, 4)\n                }\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let _2 := not(0)\n                /// @src 12:13694:13706  \"_dec(length)\"\n                let expr_1 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ add(/** @src 12:13694:13706  \"_dec(length)\" */ expr, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _2)\n                /// @src 12:13675:13707  \"swaps = new Swap[](_dec(length))\"\n                var_swaps_mpos := /** @src 12:13683:13707  \"new Swap[](_dec(length))\" */ allocate_and_zero_memory_array_array_struct_Swap_dyn(expr_1)\n                /// @src 12:13717:13752  \"swaps[_dec(_dec(length))].amountOut\"\n                let _3 := 192\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                mstore(/** @src 12:13717:13752  \"swaps[_dec(_dec(length))].amountOut\" */ add(/** @src 12:13717:13742  \"swaps[_dec(_dec(length))]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ add(/** @src 12:13694:13706  \"_dec(length)\" */ expr, /** @src 13:1431:1473  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\" */ not(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 1)))), /** @src 12:13717:13752  \"swaps[_dec(_dec(length))].amountOut\" */ _3), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ var_amountOut)\n                /// @src 12:13779:13803  \"uint256 i = _dec(length)\"\n                let var_i := expr_1\n                /// @src 12:13774:14954  \"for (uint256 i = _dec(length); _isNonZero(i); i = _dec(i)) {...\"\n                for { }\n                /** @src 12:13805:13818  \"_isNonZero(i)\" */ var_i\n                /// @src 12:13779:13803  \"uint256 i = _dec(length)\"\n                {\n                    /// @src 12:13820:13831  \"i = _dec(i)\"\n                    var_i := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ add(/** @src 12:13824:13831  \"_dec(i)\" */ var_i, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _2)\n                }\n                /// @src 12:13820:13831  \"i = _dec(i)\"\n                {\n                    /// @src 12:13891:13898  \"_dec(i)\"\n                    let expr_2 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ add(/** @src 12:13891:13898  \"_dec(i)\" */ var_i, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _2)\n                    /// @src 12:13886:13899  \"path[_dec(i)]\"\n                    let _4 := read_from_memoryt_address(memory_array_index_access_struct_Swap_dyn(var_path_mpos, expr_2))\n                    /// @src 12:13901:13908  \"path[i]\"\n                    let _5 := read_from_memoryt_address(memory_array_index_access_struct_Swap_dyn(var_path_mpos, var_i))\n                    /// @src 12:13958:13987  \"sortTokens(tokenIn, tokenOut)\"\n                    let expr_component, expr_component_1 := fun_sortTokens(_4, _5)\n                    /// @src 12:14016:14052  \"_asmPairFor(factory, token0, token1)\"\n                    let expr_3 := fun_asmPairFor_16298(expr_component, expr_component_1)\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    let _6 := sub(shl(160, 1), 1)\n                    /// @src 12:14083:14101  \"tokenOut == token0\"\n                    let expr_4 := eq(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 12:14083:14101  \"tokenOut == token0\" */ _5, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _6), and(/** @src 12:14083:14101  \"tokenOut == token0\" */ expr_component, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _6))\n                    /// @src 12:14115:14151  \"swaps[_dec(i)].isReverse = isReverse\"\n                    write_to_memory_bool(/** @src 12:14115:14129  \"swaps[_dec(i)]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, expr_2)), /** @src 12:14115:14151  \"swaps[_dec(i)].isReverse = isReverse\" */ expr_4)\n                    /// @src 12:14165:14187  \"swaps[_dec(i)].tokenIn\"\n                    let _7 := 64\n                    /// @src 12:14165:14197  \"swaps[_dec(i)].tokenIn = tokenIn\"\n                    write_to_memory_address(/** @src 12:14165:14187  \"swaps[_dec(i)].tokenIn\" */ add(/** @src 12:14165:14179  \"swaps[_dec(i)]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, expr_2)), /** @src 12:14165:14187  \"swaps[_dec(i)].tokenIn\" */ _7), /** @src 12:14165:14197  \"swaps[_dec(i)].tokenIn = tokenIn\" */ _4)\n                    /// @src 12:14211:14234  \"swaps[_dec(i)].tokenOut\"\n                    let _8 := 96\n                    /// @src 12:14211:14245  \"swaps[_dec(i)].tokenOut = tokenOut\"\n                    write_to_memory_address(/** @src 12:14211:14234  \"swaps[_dec(i)].tokenOut\" */ add(/** @src 12:14211:14225  \"swaps[_dec(i)]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, expr_2)), /** @src 12:14211:14234  \"swaps[_dec(i)].tokenOut\" */ _8), /** @src 12:14211:14245  \"swaps[_dec(i)].tokenOut = tokenOut\" */ _5)\n                    /// @src 12:14259:14285  \"swaps[_dec(i)].pair = pair\"\n                    write_to_memory_address(/** @src 12:14259:14278  \"swaps[_dec(i)].pair\" */ add(/** @src 12:14259:14273  \"swaps[_dec(i)]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, expr_2)), /** @src 12:14259:14278  \"swaps[_dec(i)].pair\" */ 128), /** @src 12:14259:14285  \"swaps[_dec(i)].pair = pair\" */ expr_3)\n                    /// @src 12:14421:14455  \"IUniswapV2Pair(pair).getReserves()\"\n                    let _9 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 12:14165:14187  \"swaps[_dec(i)].tokenIn\" */ _7)\n                    /// @src 12:14421:14455  \"IUniswapV2Pair(pair).getReserves()\"\n                    mstore(_9, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ shl(226, 0x0240bc6b))\n                    /// @src 12:14421:14455  \"IUniswapV2Pair(pair).getReserves()\"\n                    let _10 := staticcall(gas(), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 12:14421:14441  \"IUniswapV2Pair(pair)\" */ expr_3, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _6), /** @src 12:14421:14455  \"IUniswapV2Pair(pair).getReserves()\" */ _9, 4, _9, /** @src 12:14211:14234  \"swaps[_dec(i)].tokenOut\" */ _8)\n                    /// @src 12:14421:14455  \"IUniswapV2Pair(pair).getReserves()\"\n                    if iszero(_10) { revert_forward() }\n                    let expr_component_2 := 0\n                    let expr_component_3 := expr_component_2\n                    if _10\n                    {\n                        let _11 := /** @src 12:14211:14234  \"swaps[_dec(i)].tokenOut\" */ _8\n                        /// @src 12:14421:14455  \"IUniswapV2Pair(pair).getReserves()\"\n                        if gt(/** @src 12:14211:14234  \"swaps[_dec(i)].tokenOut\" */ _8, /** @src 12:14421:14455  \"IUniswapV2Pair(pair).getReserves()\" */ returndatasize()) { _11 := returndatasize() }\n                        finalize_allocation(_9, _11)\n                        let expr_component_4, expr_component_5, expr_component_6 := abi_decode_uint112t_uint112t_uint32_fromMemory(_9, add(_9, _11))\n                        expr_component_2 := expr_component_4\n                        expr_component_3 := expr_component_5\n                    }\n                    /// @src 12:14499:14554  \"isReverse ? (reserve1, reserve0) : (reserve0, reserve1)\"\n                    let expr_component_7 := /** @src 12:14421:14455  \"IUniswapV2Pair(pair).getReserves()\" */ 0\n                    let expr_component_8 := expr_component_7\n                    /// @src 12:14499:14554  \"isReverse ? (reserve1, reserve0) : (reserve0, reserve1)\"\n                    switch expr_4\n                    case 0 {\n                        expr_component_7 := expr_component_2\n                        expr_component_8 := expr_component_3\n                    }\n                    default {\n                        expr_component_7 := expr_component_3\n                        expr_component_8 := expr_component_2\n                    }\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    let _12 := mload(/** @src 12:14620:14644  \"swaps[_dec(i)].amountOut\" */ add(/** @src 12:14620:14634  \"swaps[_dec(i)]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, expr_2)), /** @src 12:13717:13752  \"swaps[_dec(_dec(length))].amountOut\" */ _3))\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    let _13 := 0xffffffffffffffffffffffffffff\n                    /// @src 12:14608:14668  \"getAmountIn(swaps[_dec(i)].amountOut, reserveIn, reserveOut)\"\n                    let _14 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 12:14608:14668  \"getAmountIn(swaps[_dec(i)].amountOut, reserveIn, reserveOut)\" */ expr_component_8, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _13)\n                    /// @src 12:14608:14668  \"getAmountIn(swaps[_dec(i)].amountOut, reserveIn, reserveOut)\"\n                    let _15 := fun_getAmountIn(_12, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 12:14608:14668  \"getAmountIn(swaps[_dec(i)].amountOut, reserveIn, reserveOut)\" */ expr_component_7, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _13), /** @src 12:14608:14668  \"getAmountIn(swaps[_dec(i)].amountOut, reserveIn, reserveOut)\" */ _14)\n                    /// @src 12:14582:14605  \"swaps[_dec(i)].amountIn\"\n                    let _16 := 160\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    mstore(/** @src 12:14582:14605  \"swaps[_dec(i)].amountIn\" */ add(/** @src 12:14582:14596  \"swaps[_dec(i)]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, expr_2)), /** @src 12:14582:14605  \"swaps[_dec(i)].amountIn\" */ _16), /** @src 12:14608:14668  \"getAmountIn(swaps[_dec(i)].amountOut, reserveIn, reserveOut)\" */ _15)\n                    /// @src 12:14710:14800  \"swaps[_dec(i)].isBackrunnable = _isNonZero((1000 * swaps[_dec(i)].amountOut) / reserveOut)\"\n                    write_to_memory_bool(/** @src 12:14710:14739  \"swaps[_dec(i)].isBackrunnable\" */ add(/** @src 12:14710:14724  \"swaps[_dec(i)]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, expr_2)), /** @src 12:14710:14739  \"swaps[_dec(i)].isBackrunnable\" */ 32), /** @src 12:14742:14800  \"_isNonZero((1000 * swaps[_dec(i)].amountOut) / reserveOut)\" */ cleanup_bool(/** @src 12:14753:14799  \"(1000 * swaps[_dec(i)].amountOut) / reserveOut\" */ checked_div_uint256(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mul(/** @src 12:14754:14758  \"1000\" */ 0x03e8, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 12:14761:14785  \"swaps[_dec(i)].amountOut\" */ add(/** @src 12:14761:14775  \"swaps[_dec(i)]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, expr_2)), /** @src 12:13717:13752  \"swaps[_dec(_dec(length))].amountOut\" */ _3))), /** @src 12:14753:14799  \"(1000 * swaps[_dec(i)].amountOut) / reserveOut\" */ _14)))\n                    /// @src 12:14884:14943  \"if (i > 1) swaps[i - 2].amountOut = swaps[_dec(i)].amountIn\"\n                    if /** @src 12:14888:14893  \"i > 1\" */ gt(var_i, /** @src 12:20463:20464  \"1\" */ 0x01)\n                    /// @src 12:14884:14943  \"if (i > 1) swaps[i - 2].amountOut = swaps[_dec(i)].amountIn\"\n                    {\n                        /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                        mstore(/** @src 12:14895:14917  \"swaps[i - 2].amountOut\" */ add(/** @src 12:14895:14907  \"swaps[i - 2]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, /** @src 12:14901:14906  \"i - 2\" */ checked_sub_uint256_16414(var_i))), /** @src 12:13717:13752  \"swaps[_dec(_dec(length))].amountOut\" */ _3), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 12:14920:14943  \"swaps[_dec(i)].amountIn\" */ add(/** @src 12:14920:14934  \"swaps[_dec(i)]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, expr_2)), /** @src 12:14582:14605  \"swaps[_dec(i)].amountIn\" */ _16)))\n                    }\n                }\n            }\n            /// @ast-id 2792 @src 12:13428:14960  \"function getSwapsIn(...\"\n            function fun_getSwapsIn_16326(var_amountOut, var_path_mpos) -> var_swaps_mpos\n            {\n                /// @src 12:13608:13619  \"path.length\"\n                let expr := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 12:13608:13619  \"path.length\" */ var_path_mpos)\n                /// @src 12:13629:13665  \"if (length < 2) revert InvalidPath()\"\n                if /** @src 12:13633:13643  \"length < 2\" */ lt(expr, /** @src 12:13642:13643  \"2\" */ 0x02)\n                /// @src 12:13629:13665  \"if (length < 2) revert InvalidPath()\"\n                {\n                    /// @src 12:13652:13665  \"InvalidPath()\"\n                    let _1 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                    /// @src 12:13652:13665  \"InvalidPath()\"\n                    mstore(_1, /** @src 13:28052:28065  \"InvalidPath()\" */ shl(224, 0x20db8267))\n                    /// @src 12:13652:13665  \"InvalidPath()\"\n                    revert(_1, 4)\n                }\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let _2 := not(0)\n                /// @src 12:13694:13706  \"_dec(length)\"\n                let expr_1 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ add(/** @src 12:13694:13706  \"_dec(length)\" */ expr, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _2)\n                /// @src 12:13675:13707  \"swaps = new Swap[](_dec(length))\"\n                var_swaps_mpos := /** @src 12:13683:13707  \"new Swap[](_dec(length))\" */ allocate_and_zero_memory_array_array_struct_Swap_dyn(expr_1)\n                /// @src 12:13717:13752  \"swaps[_dec(_dec(length))].amountOut\"\n                let _3 := 192\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                mstore(/** @src 12:13717:13752  \"swaps[_dec(_dec(length))].amountOut\" */ add(/** @src 12:13717:13742  \"swaps[_dec(_dec(length))]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ add(/** @src 12:13694:13706  \"_dec(length)\" */ expr, /** @src 13:1431:1473  \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\" */ not(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 1)))), /** @src 12:13717:13752  \"swaps[_dec(_dec(length))].amountOut\" */ _3), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ var_amountOut)\n                /// @src 12:13779:13803  \"uint256 i = _dec(length)\"\n                let var_i := expr_1\n                /// @src 12:13774:14954  \"for (uint256 i = _dec(length); _isNonZero(i); i = _dec(i)) {...\"\n                for { }\n                /** @src 12:13805:13818  \"_isNonZero(i)\" */ var_i\n                /// @src 12:13779:13803  \"uint256 i = _dec(length)\"\n                {\n                    /// @src 12:13820:13831  \"i = _dec(i)\"\n                    var_i := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ add(/** @src 12:13824:13831  \"_dec(i)\" */ var_i, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _2)\n                }\n                /// @src 12:13820:13831  \"i = _dec(i)\"\n                {\n                    /// @src 12:13891:13898  \"_dec(i)\"\n                    let expr_2 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ add(/** @src 12:13891:13898  \"_dec(i)\" */ var_i, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _2)\n                    /// @src 12:13886:13899  \"path[_dec(i)]\"\n                    let _4 := read_from_memoryt_address(memory_array_index_access_struct_Swap_dyn(var_path_mpos, expr_2))\n                    /// @src 12:13901:13908  \"path[i]\"\n                    let _5 := read_from_memoryt_address(memory_array_index_access_struct_Swap_dyn(var_path_mpos, var_i))\n                    /// @src 12:13958:13987  \"sortTokens(tokenIn, tokenOut)\"\n                    let expr_component, expr_component_1 := fun_sortTokens(_4, _5)\n                    /// @src 12:14016:14052  \"_asmPairFor(factory, token0, token1)\"\n                    let expr_3 := fun_asmPairFor_42213(expr_component, expr_component_1)\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    let _6 := sub(shl(160, 1), 1)\n                    /// @src 12:14083:14101  \"tokenOut == token0\"\n                    let expr_4 := eq(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 12:14083:14101  \"tokenOut == token0\" */ _5, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _6), and(/** @src 12:14083:14101  \"tokenOut == token0\" */ expr_component, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _6))\n                    /// @src 12:14115:14151  \"swaps[_dec(i)].isReverse = isReverse\"\n                    write_to_memory_bool(/** @src 12:14115:14129  \"swaps[_dec(i)]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, expr_2)), /** @src 12:14115:14151  \"swaps[_dec(i)].isReverse = isReverse\" */ expr_4)\n                    /// @src 12:14165:14187  \"swaps[_dec(i)].tokenIn\"\n                    let _7 := 64\n                    /// @src 12:14165:14197  \"swaps[_dec(i)].tokenIn = tokenIn\"\n                    write_to_memory_address(/** @src 12:14165:14187  \"swaps[_dec(i)].tokenIn\" */ add(/** @src 12:14165:14179  \"swaps[_dec(i)]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, expr_2)), /** @src 12:14165:14187  \"swaps[_dec(i)].tokenIn\" */ _7), /** @src 12:14165:14197  \"swaps[_dec(i)].tokenIn = tokenIn\" */ _4)\n                    /// @src 12:14211:14234  \"swaps[_dec(i)].tokenOut\"\n                    let _8 := 96\n                    /// @src 12:14211:14245  \"swaps[_dec(i)].tokenOut = tokenOut\"\n                    write_to_memory_address(/** @src 12:14211:14234  \"swaps[_dec(i)].tokenOut\" */ add(/** @src 12:14211:14225  \"swaps[_dec(i)]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, expr_2)), /** @src 12:14211:14234  \"swaps[_dec(i)].tokenOut\" */ _8), /** @src 12:14211:14245  \"swaps[_dec(i)].tokenOut = tokenOut\" */ _5)\n                    /// @src 12:14259:14285  \"swaps[_dec(i)].pair = pair\"\n                    write_to_memory_address(/** @src 12:14259:14278  \"swaps[_dec(i)].pair\" */ add(/** @src 12:14259:14273  \"swaps[_dec(i)]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, expr_2)), /** @src 12:14259:14278  \"swaps[_dec(i)].pair\" */ 128), /** @src 12:14259:14285  \"swaps[_dec(i)].pair = pair\" */ expr_3)\n                    /// @src 12:14421:14455  \"IUniswapV2Pair(pair).getReserves()\"\n                    let _9 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 12:14165:14187  \"swaps[_dec(i)].tokenIn\" */ _7)\n                    /// @src 12:14421:14455  \"IUniswapV2Pair(pair).getReserves()\"\n                    mstore(_9, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ shl(226, 0x0240bc6b))\n                    /// @src 12:14421:14455  \"IUniswapV2Pair(pair).getReserves()\"\n                    let _10 := staticcall(gas(), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 12:14421:14441  \"IUniswapV2Pair(pair)\" */ expr_3, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _6), /** @src 12:14421:14455  \"IUniswapV2Pair(pair).getReserves()\" */ _9, 4, _9, /** @src 12:14211:14234  \"swaps[_dec(i)].tokenOut\" */ _8)\n                    /// @src 12:14421:14455  \"IUniswapV2Pair(pair).getReserves()\"\n                    if iszero(_10) { revert_forward() }\n                    let expr_component_2 := 0\n                    let expr_component_3 := expr_component_2\n                    if _10\n                    {\n                        let _11 := /** @src 12:14211:14234  \"swaps[_dec(i)].tokenOut\" */ _8\n                        /// @src 12:14421:14455  \"IUniswapV2Pair(pair).getReserves()\"\n                        if gt(/** @src 12:14211:14234  \"swaps[_dec(i)].tokenOut\" */ _8, /** @src 12:14421:14455  \"IUniswapV2Pair(pair).getReserves()\" */ returndatasize()) { _11 := returndatasize() }\n                        finalize_allocation(_9, _11)\n                        let expr_component_4, expr_component_5, expr_component_6 := abi_decode_uint112t_uint112t_uint32_fromMemory(_9, add(_9, _11))\n                        expr_component_2 := expr_component_4\n                        expr_component_3 := expr_component_5\n                    }\n                    /// @src 12:14499:14554  \"isReverse ? (reserve1, reserve0) : (reserve0, reserve1)\"\n                    let expr_component_7 := /** @src 12:14421:14455  \"IUniswapV2Pair(pair).getReserves()\" */ 0\n                    let expr_component_8 := expr_component_7\n                    /// @src 12:14499:14554  \"isReverse ? (reserve1, reserve0) : (reserve0, reserve1)\"\n                    switch expr_4\n                    case 0 {\n                        expr_component_7 := expr_component_2\n                        expr_component_8 := expr_component_3\n                    }\n                    default {\n                        expr_component_7 := expr_component_3\n                        expr_component_8 := expr_component_2\n                    }\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    let _12 := mload(/** @src 12:14620:14644  \"swaps[_dec(i)].amountOut\" */ add(/** @src 12:14620:14634  \"swaps[_dec(i)]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, expr_2)), /** @src 12:13717:13752  \"swaps[_dec(_dec(length))].amountOut\" */ _3))\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    let _13 := 0xffffffffffffffffffffffffffff\n                    /// @src 12:14608:14668  \"getAmountIn(swaps[_dec(i)].amountOut, reserveIn, reserveOut)\"\n                    let _14 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 12:14608:14668  \"getAmountIn(swaps[_dec(i)].amountOut, reserveIn, reserveOut)\" */ expr_component_8, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _13)\n                    /// @src 12:14608:14668  \"getAmountIn(swaps[_dec(i)].amountOut, reserveIn, reserveOut)\"\n                    let _15 := fun_getAmountIn(_12, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 12:14608:14668  \"getAmountIn(swaps[_dec(i)].amountOut, reserveIn, reserveOut)\" */ expr_component_7, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _13), /** @src 12:14608:14668  \"getAmountIn(swaps[_dec(i)].amountOut, reserveIn, reserveOut)\" */ _14)\n                    /// @src 12:14582:14605  \"swaps[_dec(i)].amountIn\"\n                    let _16 := 160\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    mstore(/** @src 12:14582:14605  \"swaps[_dec(i)].amountIn\" */ add(/** @src 12:14582:14596  \"swaps[_dec(i)]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, expr_2)), /** @src 12:14582:14605  \"swaps[_dec(i)].amountIn\" */ _16), /** @src 12:14608:14668  \"getAmountIn(swaps[_dec(i)].amountOut, reserveIn, reserveOut)\" */ _15)\n                    /// @src 12:14710:14800  \"swaps[_dec(i)].isBackrunnable = _isNonZero((1000 * swaps[_dec(i)].amountOut) / reserveOut)\"\n                    write_to_memory_bool(/** @src 12:14710:14739  \"swaps[_dec(i)].isBackrunnable\" */ add(/** @src 12:14710:14724  \"swaps[_dec(i)]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, expr_2)), /** @src 12:14710:14739  \"swaps[_dec(i)].isBackrunnable\" */ 32), /** @src 12:14742:14800  \"_isNonZero((1000 * swaps[_dec(i)].amountOut) / reserveOut)\" */ cleanup_bool(/** @src 12:14753:14799  \"(1000 * swaps[_dec(i)].amountOut) / reserveOut\" */ checked_div_uint256(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mul(/** @src 12:14754:14758  \"1000\" */ 0x03e8, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 12:14761:14785  \"swaps[_dec(i)].amountOut\" */ add(/** @src 12:14761:14775  \"swaps[_dec(i)]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, expr_2)), /** @src 12:13717:13752  \"swaps[_dec(_dec(length))].amountOut\" */ _3))), /** @src 12:14753:14799  \"(1000 * swaps[_dec(i)].amountOut) / reserveOut\" */ _14)))\n                    /// @src 12:14884:14943  \"if (i > 1) swaps[i - 2].amountOut = swaps[_dec(i)].amountIn\"\n                    if /** @src 12:14888:14893  \"i > 1\" */ gt(var_i, /** @src 12:20463:20464  \"1\" */ 0x01)\n                    /// @src 12:14884:14943  \"if (i > 1) swaps[i - 2].amountOut = swaps[_dec(i)].amountIn\"\n                    {\n                        /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                        mstore(/** @src 12:14895:14917  \"swaps[i - 2].amountOut\" */ add(/** @src 12:14895:14907  \"swaps[i - 2]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, /** @src 12:14901:14906  \"i - 2\" */ checked_sub_uint256_16414(var_i))), /** @src 12:13717:13752  \"swaps[_dec(_dec(length))].amountOut\" */ _3), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 12:14920:14943  \"swaps[_dec(i)].amountIn\" */ add(/** @src 12:14920:14934  \"swaps[_dec(i)]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_mpos, expr_2)), /** @src 12:14582:14605  \"swaps[_dec(i)].amountIn\" */ _16)))\n                    }\n                }\n            }\n            /// @ast-id 2178 @src 12:7962:8692  \"function getAmountIn(...\"\n            function fun_getAmountIn(var_amountOut, var_reserveIn, var_reserveOut) -> var_amountIn\n            {\n                /// @src 12:8122:8165  \"if (_isZero(amountOut)) revert ZeroAmount()\"\n                if /** @src 12:19729:19788  \"assembly {...\" */ iszero(/** @src 12:8126:8144  \"_isZero(amountOut)\" */ var_amountOut)\n                /// @src 12:8122:8165  \"if (_isZero(amountOut)) revert ZeroAmount()\"\n                {\n                    /// @src 12:8153:8165  \"ZeroAmount()\"\n                    let _1 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                    /// @src 12:8153:8165  \"ZeroAmount()\"\n                    mstore(_1, /** @src 12:6283:6295  \"ZeroAmount()\" */ shl(224, 0x1f2a2005))\n                    /// @src 12:8153:8165  \"ZeroAmount()\"\n                    revert(_1, 4)\n                }\n                /// @src 12:1287:1291  \"1000\"\n                let _2 := 0x03e8\n                /// @src 12:8179:8242  \"reserveIn < MINIMUM_LIQUIDITY || reserveOut < MINIMUM_LIQUIDITY\"\n                let expr := /** @src 12:8179:8208  \"reserveIn < MINIMUM_LIQUIDITY\" */ lt(var_reserveIn, /** @src 12:1287:1291  \"1000\" */ _2)\n                /// @src 12:8179:8242  \"reserveIn < MINIMUM_LIQUIDITY || reserveOut < MINIMUM_LIQUIDITY\"\n                if iszero(expr)\n                {\n                    expr := /** @src 12:8212:8242  \"reserveOut < MINIMUM_LIQUIDITY\" */ lt(var_reserveOut, /** @src 12:1287:1291  \"1000\" */ _2)\n                }\n                /// @src 12:8179:8269  \"reserveIn < MINIMUM_LIQUIDITY || reserveOut < MINIMUM_LIQUIDITY || reserveOut <= amountOut\"\n                let expr_1 := expr\n                if iszero(expr)\n                {\n                    expr_1 := /** @src 12:8246:8269  \"reserveOut <= amountOut\" */ iszero(gt(var_reserveOut, var_amountOut))\n                }\n                /// @src 12:8175:8313  \"if (reserveIn < MINIMUM_LIQUIDITY || reserveOut < MINIMUM_LIQUIDITY || reserveOut <= amountOut)...\"\n                if expr_1\n                {\n                    /// @src 12:8290:8313  \"InsufficientLiquidity()\"\n                    let _3 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                    /// @src 12:8290:8313  \"InsufficientLiquidity()\"\n                    mstore(_3, /** @src 12:6356:6379  \"InsufficientLiquidity()\" */ shl(224, 0xbb55fd27))\n                    /// @src 12:8290:8313  \"InsufficientLiquidity()\"\n                    revert(_3, 4)\n                }\n                /// @src 12:8420:8457  \"reserveIn * amountOut * uint256(1000)\"\n                let expr_2 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mul(mul(/** @src 12:8420:8441  \"reserveIn * amountOut\" */ var_reserveIn, var_amountOut), /** @src 12:1287:1291  \"1000\" */ _2)\n                /// @src 12:8471:8546  \"if ((reserveIn * uint256(1000)) != numerator / amountOut) revert Overflow()\"\n                if /** @src 12:8475:8527  \"(reserveIn * uint256(1000)) != numerator / amountOut\" */ iszero(eq(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mul(/** @src 12:8476:8501  \"reserveIn * uint256(1000)\" */ var_reserveIn, /** @src 12:1287:1291  \"1000\" */ _2), /** @src 12:8506:8527  \"numerator / amountOut\" */ checked_div_uint256(expr_2, var_amountOut)))\n                /// @src 12:8471:8546  \"if ((reserveIn * uint256(1000)) != numerator / amountOut) revert Overflow()\"\n                {\n                    /// @src 12:8536:8546  \"Overflow()\"\n                    let _4 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                    /// @src 12:8536:8546  \"Overflow()\"\n                    mstore(_4, /** @src 12:7405:7415  \"Overflow()\" */ shl(225, 0x1a93c689))\n                    /// @src 12:8536:8546  \"Overflow()\"\n                    revert(_4, 4)\n                }\n                /// @src 12:8635:8675  \"amountIn = (numerator / denominator) + 1\"\n                var_amountIn := /** @src 12:1287:1291  \"1000\" */ add(/** @src 12:8647:8670  \"numerator / denominator\" */ checked_div_uint256(expr_2, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mul(sub(/** @src 12:8583:8605  \"reserveOut - amountOut\" */ var_reserveOut, var_amountOut), /** @src 12:8617:8620  \"997\" */ 0x03e5)), /** @src 12:8674:8675  \"1\" */ 0x01)\n            }\n            /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n            function checked_add_uint256_16453(x) -> sum\n            {\n                if gt(x, not(2)) { panic_error_0x11() }\n                sum := add(x, /** @src 13:32679:32680  \"2\" */ 0x02)\n            }\n            /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n            function checked_add_uint256(x, y) -> sum\n            {\n                if gt(x, not(y)) { panic_error_0x11() }\n                sum := add(x, y)\n            }\n            /// @ast-id 5212 @src 13:31472:32850  \"function _swapSupportingFeeOnTransferTokens(...\"\n            function fun_swapSupportingFeeOnTransferTokens(var_path_mpos, var__to)\n            {\n                /// @src 13:31643:31654  \"path.length\"\n                let expr := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 13:31643:31654  \"path.length\" */ var_path_mpos)\n                /// @src 13:31669:31678  \"uint256 i\"\n                let var_i := /** @src -1:-1:-1 */ 0\n                /// @src 13:31680:31696  \"i < _dec(length)\"\n                let _1 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ add(/** @src 13:31684:31696  \"_dec(length)\" */ expr, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ not(0))\n                /// @src 13:31664:32844  \"for (uint256 i; i < _dec(length); i = _inc(i)) {...\"\n                for { }\n                /** @src 13:31680:31696  \"i < _dec(length)\" */ lt(var_i, _1)\n                /// @src 13:31669:31678  \"uint256 i\"\n                {\n                    /// @src 13:31698:31709  \"i = _inc(i)\"\n                    var_i := /** @src 12:1287:1291  \"1000\" */ add(/** @src 13:31702:31709  \"_inc(i)\" */ var_i, /** @src 12:20463:20464  \"1\" */ 0x01)\n                }\n                /// @src 13:31698:31709  \"i = _inc(i)\"\n                {\n                    /// @src 13:31764:31771  \"path[i]\"\n                    let _2 := read_from_memoryt_address(memory_array_index_access_struct_Swap_dyn(var_path_mpos, var_i))\n                    /// @src 13:31773:31786  \"path[_inc(i)]\"\n                    let _3 := read_from_memoryt_address(memory_array_index_access_struct_Swap_dyn(var_path_mpos, /** @src 12:1287:1291  \"1000\" */ add(/** @src 13:31778:31785  \"_inc(i)\" */ var_i, /** @src 12:20463:20464  \"1\" */ 0x01)))\n                    /// @src 13:31908:31952  \"OpenMevLibrary.sortTokens(tokenIn, tokenOut)\"\n                    let expr_component, expr_component_1 := fun_sortTokens(_2, _3)\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    let _4 := sub(shl(160, 1), 1)\n                    /// @src 13:31982:32000  \"tokenOut == token0\"\n                    let expr_1 := eq(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 13:31982:32000  \"tokenOut == token0\" */ _3, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _4), and(/** @src 13:31982:32000  \"tokenOut == token0\" */ expr_component, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _4))\n                    /// @src 13:32025:32076  \"OpenMevLibrary._asmPairFor(factory, token0, token1)\"\n                    let expr_2 := fun_asmPairFor_16298(expr_component, expr_component_1)\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    let _5 := 64\n                    /// @src 13:32290:32324  \"IUniswapV2Pair(pair).getReserves()\"\n                    let _6 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(_5)\n                    /// @src 13:32290:32324  \"IUniswapV2Pair(pair).getReserves()\"\n                    mstore(_6, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ shl(226, 0x0240bc6b))\n                    /// @src 13:32290:32324  \"IUniswapV2Pair(pair).getReserves()\"\n                    let _7 := 96\n                    let _8 := 4\n                    let _9 := staticcall(gas(), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 13:32290:32310  \"IUniswapV2Pair(pair)\" */ expr_2, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _4), /** @src 13:32290:32324  \"IUniswapV2Pair(pair).getReserves()\" */ _6, _8, _6, _7)\n                    if iszero(_9) { revert_forward() }\n                    let expr_component_2 := /** @src -1:-1:-1 */ 0\n                    let expr_component_3 := expr_component_2\n                    /// @src 13:32290:32324  \"IUniswapV2Pair(pair).getReserves()\"\n                    if _9\n                    {\n                        let _10 := _7\n                        if gt(_7, returndatasize()) { _10 := returndatasize() }\n                        finalize_allocation(_6, _10)\n                        let expr_component_4, expr_component_5, expr_component_6 := abi_decode_uint112t_uint112t_uint32_fromMemory(_6, add(_6, _10))\n                        expr_component_2 := expr_component_4\n                        expr_component_3 := expr_component_5\n                    }\n                    /// @src 13:32390:32445  \"isReverse ? (reserve1, reserve0) : (reserve0, reserve1)\"\n                    let expr_component_7 := /** @src -1:-1:-1 */ 0\n                    let expr_component_8 := expr_component_7\n                    /// @src 13:32390:32445  \"isReverse ? (reserve1, reserve0) : (reserve0, reserve1)\"\n                    switch expr_1\n                    case 0 {\n                        expr_component_7 := expr_component_2\n                        expr_component_8 := expr_component_3\n                    }\n                    default {\n                        expr_component_7 := expr_component_3\n                        expr_component_8 := expr_component_2\n                    }\n                    /// @src 13:32477:32507  \"ERC20(tokenIn).balanceOf(pair)\"\n                    let _11 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(_5)\n                    /// @src 13:32477:32507  \"ERC20(tokenIn).balanceOf(pair)\"\n                    mstore(_11, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ shl(224, 0x70a08231))\n                    /// @src 13:32477:32507  \"ERC20(tokenIn).balanceOf(pair)\"\n                    let _12 := 32\n                    let _13 := staticcall(gas(), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 13:32477:32491  \"ERC20(tokenIn)\" */ _2, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _4), /** @src 13:32477:32507  \"ERC20(tokenIn).balanceOf(pair)\" */ _11, sub(abi_encode_tuple_address(add(_11, /** @src 13:32290:32324  \"IUniswapV2Pair(pair).getReserves()\" */ _8), /** @src 13:32477:32507  \"ERC20(tokenIn).balanceOf(pair)\" */ expr_2), _11), _11, _12)\n                    if iszero(_13) { revert_forward() }\n                    let expr_3 := /** @src -1:-1:-1 */ 0\n                    /// @src 13:32477:32507  \"ERC20(tokenIn).balanceOf(pair)\"\n                    if _13\n                    {\n                        let _14 := _12\n                        if gt(_12, returndatasize()) { _14 := returndatasize() }\n                        finalize_allocation(_11, _14)\n                        expr_3 := abi_decode_uint256_fromMemory(_11, add(_11, _14))\n                    }\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    let _15 := 0xffffffffffffffffffffffffffff\n                    /// @src 13:32477:32522  \"ERC20(tokenIn).balanceOf(pair) - reserveInput\"\n                    let _16 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 13:32477:32522  \"ERC20(tokenIn).balanceOf(pair) - reserveInput\" */ expr_component_7, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _15)\n                    /// @src 13:32477:32522  \"ERC20(tokenIn).balanceOf(pair) - reserveInput\"\n                    let expr_4 := checked_sub_uint256(expr_3, _16)\n                    /// @src 13:32555:32624  \"OpenMevLibrary.getAmountOut(amountInput, reserveInput, reserveOutput)\"\n                    let expr_5 := fun_getAmountOut(expr_4, _16, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 13:32555:32624  \"OpenMevLibrary.getAmountOut(amountInput, reserveInput, reserveOutput)\" */ expr_component_8, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _15))\n                    /// @src 13:32666:32680  \"i < length - 2\"\n                    let expr_6 := lt(var_i, /** @src 13:32670:32680  \"length - 2\" */ checked_sub_uint256_16414(expr))\n                    /// @src 13:32666:32743  \"i < length - 2 ? OpenMevLibrary.pairFor(factory, tokenOut, path[i + 2]) : _to\"\n                    let expr_7 := /** @src -1:-1:-1 */ 0\n                    /// @src 13:32666:32743  \"i < length - 2 ? OpenMevLibrary.pairFor(factory, tokenOut, path[i + 2]) : _to\"\n                    switch expr_6\n                    case 0 { expr_7 := var__to }\n                    default {\n                        expr_7 := /** @src 13:32683:32737  \"OpenMevLibrary.pairFor(factory, tokenOut, path[i + 2])\" */ fun_pairFor_16304(_3, /** @src 13:32725:32736  \"path[i + 2]\" */ read_from_memoryt_address(memory_array_index_access_struct_Swap_dyn(var_path_mpos, /** @src 13:32730:32735  \"i + 2\" */ checked_add_uint256_16453(var_i))))\n                    }\n                    /// @src 13:32830:32832  \"to\"\n                    fun_swapSupportingFeeOnTransferTokensExecute(expr_2, expr_5, expr_1, expr_7)\n                }\n            }\n            /// @ast-id 5212 @src 13:31472:32850  \"function _swapSupportingFeeOnTransferTokens(...\"\n            function fun_swapSupportingFeeOnTransferTokens_16342(var_path_mpos, var_to)\n            {\n                /// @src 13:31643:31654  \"path.length\"\n                let expr := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 13:31643:31654  \"path.length\" */ var_path_mpos)\n                /// @src 13:31669:31678  \"uint256 i\"\n                let var_i := /** @src -1:-1:-1 */ 0\n                /// @src 13:31680:31696  \"i < _dec(length)\"\n                let _1 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ add(/** @src 13:31684:31696  \"_dec(length)\" */ expr, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ not(0))\n                /// @src 13:31664:32844  \"for (uint256 i; i < _dec(length); i = _inc(i)) {...\"\n                for { }\n                /** @src 13:31680:31696  \"i < _dec(length)\" */ lt(var_i, _1)\n                /// @src 13:31669:31678  \"uint256 i\"\n                {\n                    /// @src 13:31698:31709  \"i = _inc(i)\"\n                    var_i := /** @src 12:1287:1291  \"1000\" */ add(/** @src 13:31702:31709  \"_inc(i)\" */ var_i, /** @src 12:20463:20464  \"1\" */ 0x01)\n                }\n                /// @src 13:31698:31709  \"i = _inc(i)\"\n                {\n                    /// @src 13:31764:31771  \"path[i]\"\n                    let _2 := read_from_memoryt_address(memory_array_index_access_struct_Swap_dyn(var_path_mpos, var_i))\n                    /// @src 13:31773:31786  \"path[_inc(i)]\"\n                    let _3 := read_from_memoryt_address(memory_array_index_access_struct_Swap_dyn(var_path_mpos, /** @src 12:1287:1291  \"1000\" */ add(/** @src 13:31778:31785  \"_inc(i)\" */ var_i, /** @src 12:20463:20464  \"1\" */ 0x01)))\n                    /// @src 13:31908:31952  \"OpenMevLibrary.sortTokens(tokenIn, tokenOut)\"\n                    let expr_component, expr_component_1 := fun_sortTokens(_2, _3)\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    let _4 := sub(shl(160, 1), 1)\n                    /// @src 13:31982:32000  \"tokenOut == token0\"\n                    let expr_1 := eq(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 13:31982:32000  \"tokenOut == token0\" */ _3, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _4), and(/** @src 13:31982:32000  \"tokenOut == token0\" */ expr_component, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _4))\n                    /// @src 13:32025:32076  \"OpenMevLibrary._asmPairFor(factory, token0, token1)\"\n                    let expr_2 := fun_asmPairFor_16298(expr_component, expr_component_1)\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    let _5 := 64\n                    /// @src 13:32290:32324  \"IUniswapV2Pair(pair).getReserves()\"\n                    let _6 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(_5)\n                    /// @src 13:32290:32324  \"IUniswapV2Pair(pair).getReserves()\"\n                    mstore(_6, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ shl(226, 0x0240bc6b))\n                    /// @src 13:32290:32324  \"IUniswapV2Pair(pair).getReserves()\"\n                    let _7 := 96\n                    let _8 := 4\n                    let _9 := staticcall(gas(), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 13:32290:32310  \"IUniswapV2Pair(pair)\" */ expr_2, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _4), /** @src 13:32290:32324  \"IUniswapV2Pair(pair).getReserves()\" */ _6, _8, _6, _7)\n                    if iszero(_9) { revert_forward() }\n                    let expr_component_2 := /** @src -1:-1:-1 */ 0\n                    let expr_component_3 := expr_component_2\n                    /// @src 13:32290:32324  \"IUniswapV2Pair(pair).getReserves()\"\n                    if _9\n                    {\n                        let _10 := _7\n                        if gt(_7, returndatasize()) { _10 := returndatasize() }\n                        finalize_allocation(_6, _10)\n                        let expr_component_4, expr_component_5, expr_component_6 := abi_decode_uint112t_uint112t_uint32_fromMemory(_6, add(_6, _10))\n                        expr_component_2 := expr_component_4\n                        expr_component_3 := expr_component_5\n                    }\n                    /// @src 13:32390:32445  \"isReverse ? (reserve1, reserve0) : (reserve0, reserve1)\"\n                    let expr_component_7 := /** @src -1:-1:-1 */ 0\n                    let expr_component_8 := expr_component_7\n                    /// @src 13:32390:32445  \"isReverse ? (reserve1, reserve0) : (reserve0, reserve1)\"\n                    switch expr_1\n                    case 0 {\n                        expr_component_7 := expr_component_2\n                        expr_component_8 := expr_component_3\n                    }\n                    default {\n                        expr_component_7 := expr_component_3\n                        expr_component_8 := expr_component_2\n                    }\n                    /// @src 13:32477:32507  \"ERC20(tokenIn).balanceOf(pair)\"\n                    let _11 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(_5)\n                    /// @src 13:32477:32507  \"ERC20(tokenIn).balanceOf(pair)\"\n                    mstore(_11, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ shl(224, 0x70a08231))\n                    /// @src 13:32477:32507  \"ERC20(tokenIn).balanceOf(pair)\"\n                    let _12 := 32\n                    let _13 := staticcall(gas(), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 13:32477:32491  \"ERC20(tokenIn)\" */ _2, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _4), /** @src 13:32477:32507  \"ERC20(tokenIn).balanceOf(pair)\" */ _11, sub(abi_encode_tuple_address(add(_11, /** @src 13:32290:32324  \"IUniswapV2Pair(pair).getReserves()\" */ _8), /** @src 13:32477:32507  \"ERC20(tokenIn).balanceOf(pair)\" */ expr_2), _11), _11, _12)\n                    if iszero(_13) { revert_forward() }\n                    let expr_3 := /** @src -1:-1:-1 */ 0\n                    /// @src 13:32477:32507  \"ERC20(tokenIn).balanceOf(pair)\"\n                    if _13\n                    {\n                        let _14 := _12\n                        if gt(_12, returndatasize()) { _14 := returndatasize() }\n                        finalize_allocation(_11, _14)\n                        expr_3 := abi_decode_uint256_fromMemory(_11, add(_11, _14))\n                    }\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    let _15 := 0xffffffffffffffffffffffffffff\n                    /// @src 13:32477:32522  \"ERC20(tokenIn).balanceOf(pair) - reserveInput\"\n                    let _16 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 13:32477:32522  \"ERC20(tokenIn).balanceOf(pair) - reserveInput\" */ expr_component_7, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _15)\n                    /// @src 13:32477:32522  \"ERC20(tokenIn).balanceOf(pair) - reserveInput\"\n                    let expr_4 := checked_sub_uint256(expr_3, _16)\n                    /// @src 13:32555:32624  \"OpenMevLibrary.getAmountOut(amountInput, reserveInput, reserveOutput)\"\n                    let expr_5 := fun_getAmountOut(expr_4, _16, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 13:32555:32624  \"OpenMevLibrary.getAmountOut(amountInput, reserveInput, reserveOutput)\" */ expr_component_8, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _15))\n                    /// @src 13:32666:32680  \"i < length - 2\"\n                    let expr_6 := lt(var_i, /** @src 13:32670:32680  \"length - 2\" */ checked_sub_uint256_16414(expr))\n                    /// @src 13:32666:32743  \"i < length - 2 ? OpenMevLibrary.pairFor(factory, tokenOut, path[i + 2]) : _to\"\n                    let expr_7 := /** @src -1:-1:-1 */ 0\n                    /// @src 13:32666:32743  \"i < length - 2 ? OpenMevLibrary.pairFor(factory, tokenOut, path[i + 2]) : _to\"\n                    switch expr_6\n                    case 0 { expr_7 := var_to }\n                    default {\n                        expr_7 := /** @src 13:32683:32737  \"OpenMevLibrary.pairFor(factory, tokenOut, path[i + 2])\" */ fun_pairFor_16304(_3, /** @src 13:32725:32736  \"path[i + 2]\" */ read_from_memoryt_address(memory_array_index_access_struct_Swap_dyn(var_path_mpos, /** @src 13:32730:32735  \"i + 2\" */ checked_add_uint256_16453(var_i))))\n                    }\n                    /// @src 13:32830:32832  \"to\"\n                    fun_swapSupportingFeeOnTransferTokensExecute(expr_2, expr_5, expr_1, expr_7)\n                }\n            }\n            /// @ast-id 5057 @src 13:31117:31466  \"function _swapSupportingFeeOnTransferTokensExecute(...\"\n            function fun_swapSupportingFeeOnTransferTokensExecute(var_pair, var_amountOutput, var_isReverse, var_to)\n            {\n                /// @src 13:31340:31407  \"isReverse ? (amountOutput, uint256(0)) : (uint256(0), amountOutput)\"\n                let expr_5047_component := /** @src -1:-1:-1 */ 0\n                let expr_5047_component_1 := expr_5047_component\n                /// @src 13:31340:31407  \"isReverse ? (amountOutput, uint256(0)) : (uint256(0), amountOutput)\"\n                switch var_isReverse\n                case 0 {\n                    expr_5047_component := /** @src -1:-1:-1 */ expr_5047_component\n                    /// @src 13:31340:31407  \"isReverse ? (amountOutput, uint256(0)) : (uint256(0), amountOutput)\"\n                    expr_5047_component_1 := var_amountOutput\n                }\n                default {\n                    expr_5047_component := var_amountOutput\n                    expr_5047_component_1 := /** @src -1:-1:-1 */ 0\n                }\n                /// @src 13:31456:31458  \"to\"\n                fun_asmSwap(var_pair, expr_5047_component, expr_5047_component_1, var_to)\n            }\n            /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n            function mapping_index_access_mapping_address_bool_of_address(key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 13:52602:52615  \"IS_AAVE_ASSET\" */ 0x02)\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function read_from_storage_split_offset_bool(slot) -> value\n            {\n                value := and(sload(slot), 0xff)\n            }\n            /// @ast-id 5854 @src 13:38698:42076  \"function _backrunSwaps(address factory, OpenMevLibrary.Swap[] memory swaps) internal {...\"\n            function fun_backrunSwaps(var_factory, var_swaps_5624_mpos)\n            {\n                /// @src 13:38810:38822  \"swaps.length\"\n                let expr := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 13:38810:38822  \"swaps.length\" */ var_swaps_5624_mpos)\n                /// @src 13:38837:38846  \"uint256 i\"\n                let var_i := /** @src -1:-1:-1 */ 0\n                /// @src 13:38832:42070  \"for (uint256 i; i < length; i = _inc(i)) {...\"\n                for { }\n                /** @src 13:38848:38858  \"i < length\" */ lt(var_i, expr)\n                /// @src 13:38837:38846  \"uint256 i\"\n                {\n                    /// @src 13:38860:38871  \"i = _inc(i)\"\n                    var_i := /** @src 12:1287:1291  \"1000\" */ add(/** @src 13:38864:38871  \"_inc(i)\" */ var_i, /** @src 12:20244:20245  \"1\" */ 0x01)\n                }\n                /// @src 13:38860:38871  \"i = _inc(i)\"\n                {\n                    /// @src 13:38891:38914  \"swaps[i].isBackrunnable\"\n                    let _1 := 32\n                    /// @src 13:38887:42060  \"if (swaps[i].isBackrunnable) {...\"\n                    if /** @src 13:38891:38914  \"swaps[i].isBackrunnable\" */ read_from_memoryt_bool(add(/** @src 13:38891:38899  \"swaps[i]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_5624_mpos, var_i)), /** @src 13:38891:38914  \"swaps[i].isBackrunnable\" */ _1))\n                    /// @src 13:38887:42060  \"if (swaps[i].isBackrunnable) {...\"\n                    {\n                        /// @src 13:38969:38985  \"swaps[i].tokenIn\"\n                        let _2 := 64\n                        let _3 := read_from_memoryt_address(add(/** @src 13:38969:38977  \"swaps[i]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_5624_mpos, var_i)), /** @src 13:38969:38985  \"swaps[i].tokenIn\" */ _2))\n                        /// @src 13:38987:39004  \"swaps[i].tokenOut\"\n                        let _4 := read_from_memoryt_address(add(/** @src 13:38987:38995  \"swaps[i]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_5624_mpos, var_i)), /** @src 13:38987:39004  \"swaps[i].tokenOut\" */ 96))\n                        /// @src 13:39042:39063  \"IS_AAVE_ASSET[output]\"\n                        let _5 := read_from_storage_split_offset_bool(mapping_index_access_mapping_address_bool_of_address(_4))\n                        /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                        let _6 := sub(shl(160, 1), 1)\n                        let _7 := and(/** @src 13:39112:39125  \"ERC20(output)\" */ _4, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _6)\n                        /// @src 13:39112:39150  \"ERC20(output).balanceOf(address(this))\"\n                        let _8 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 13:38969:38985  \"swaps[i].tokenIn\" */ _2)\n                        /// @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\"\n                        let _9 := shl(224, 0x70a08231)\n                        /// @src 13:39112:39150  \"ERC20(output).balanceOf(address(this))\"\n                        mstore(_8, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ _9)\n                        /// @src 13:39112:39150  \"ERC20(output).balanceOf(address(this))\"\n                        let _10 := 4\n                        let _11 := staticcall(gas(), _7, _8, sub(abi_encode_tuple_address(add(_8, _10), /** @src 13:39144:39148  \"this\" */ address()), /** @src 13:39112:39150  \"ERC20(output).balanceOf(address(this))\" */ _8), _8, /** @src 13:38891:38914  \"swaps[i].isBackrunnable\" */ _1)\n                        /// @src 13:39112:39150  \"ERC20(output).balanceOf(address(this))\"\n                        if iszero(_11) { revert_forward() }\n                        let expr_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 13:39112:39150  \"ERC20(output).balanceOf(address(this))\"\n                        if _11\n                        {\n                            let _12 := /** @src 13:38891:38914  \"swaps[i].isBackrunnable\" */ _1\n                            /// @src 13:39112:39150  \"ERC20(output).balanceOf(address(this))\"\n                            if gt(/** @src 13:38891:38914  \"swaps[i].isBackrunnable\" */ _1, /** @src 13:39112:39150  \"ERC20(output).balanceOf(address(this))\" */ returndatasize()) { _12 := returndatasize() }\n                            finalize_allocation(_8, _12)\n                            expr_1 := abi_decode_uint256_fromMemory(_8, add(_8, _12))\n                        }\n                        /// @src 13:39191:39221  \"ERC20(output).balanceOf(BENTO)\"\n                        let _13 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 13:38969:38985  \"swaps[i].tokenIn\" */ _2)\n                        /// @src 13:39191:39221  \"ERC20(output).balanceOf(BENTO)\"\n                        mstore(_13, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ _9)\n                        /// @src 13:39191:39221  \"ERC20(output).balanceOf(BENTO)\"\n                        let _14 := staticcall(gas(), _7, _13, sub(abi_encode_address_16470(add(_13, /** @src 13:39112:39150  \"ERC20(output).balanceOf(address(this))\" */ _10)), /** @src 13:39191:39221  \"ERC20(output).balanceOf(BENTO)\" */ _13), _13, /** @src 13:38891:38914  \"swaps[i].isBackrunnable\" */ _1)\n                        /// @src 13:39191:39221  \"ERC20(output).balanceOf(BENTO)\"\n                        if iszero(_14) { revert_forward() }\n                        let expr_2 := /** @src -1:-1:-1 */ 0\n                        /// @src 13:39191:39221  \"ERC20(output).balanceOf(BENTO)\"\n                        if _14\n                        {\n                            let _15 := /** @src 13:38891:38914  \"swaps[i].isBackrunnable\" */ _1\n                            /// @src 13:39191:39221  \"ERC20(output).balanceOf(BENTO)\"\n                            if gt(/** @src 13:38891:38914  \"swaps[i].isBackrunnable\" */ _1, /** @src 13:39191:39221  \"ERC20(output).balanceOf(BENTO)\" */ returndatasize()) { _15 := returndatasize() }\n                            finalize_allocation(_13, _15)\n                            expr_2 := abi_decode_uint256_fromMemory(_13, add(_13, _15))\n                        }\n                        /// @src 12:19970:20037  \"assembly {...\"\n                        let _16 := iszero(/** @src 13:39243:39275  \"_isNonZero(contractAssetBalance)\" */ expr_1)\n                        /// @src 13:39243:39290  \"_isNonZero(contractAssetBalance) || isAaveAsset\"\n                        let expr_3 := /** @src 12:19970:20037  \"assembly {...\" */ iszero(_16)\n                        /// @src 13:39243:39290  \"_isNonZero(contractAssetBalance) || isAaveAsset\"\n                        if _16 { expr_3 := _5 }\n                        /// @src 13:39243:39318  \"_isNonZero(contractAssetBalance) || isAaveAsset || _isNonZero(bentoBalance)\"\n                        let expr_4 := expr_3\n                        if iszero(expr_3)\n                        {\n                            expr_4 := /** @src 12:19970:20037  \"assembly {...\" */ iszero(iszero(/** @src 13:39294:39318  \"_isNonZero(bentoBalance)\" */ expr_2))\n                        }\n                        /// @src 13:39239:42046  \"if (_isNonZero(contractAssetBalance) || isAaveAsset || _isNonZero(bentoBalance)) {...\"\n                        if expr_4\n                        {\n                            /// @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\"\n                            let _17 := 0xc0aee478e3658e2610c5f7a4a2e1777ce9e4f2ac\n                            /// @src 13:39361:39496  \"factory == OpenMevLibrary.SUSHI_FACTORY...\"\n                            let expr_5 := /** @src -1:-1:-1 */ 0\n                            /// @src 13:39361:39496  \"factory == OpenMevLibrary.SUSHI_FACTORY...\"\n                            switch /** @src 13:39361:39400  \"factory == OpenMevLibrary.SUSHI_FACTORY\" */ eq(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 13:39361:39400  \"factory == OpenMevLibrary.SUSHI_FACTORY\" */ var_factory, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _6), /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ _17)\n                            case /** @src 13:39361:39496  \"factory == OpenMevLibrary.SUSHI_FACTORY...\" */ 0 {\n                                expr_5 := /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ _17\n                            }\n                            default /// @src 13:39361:39496  \"factory == OpenMevLibrary.SUSHI_FACTORY...\"\n                            {\n                                expr_5 := /** @src 13:1522:1564  \"0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f\" */ 0x5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f\n                            }\n                            /// @src 13:39542:39592  \"IUniswapV2Factory(factory1).getPair(input, output)\"\n                            let _18 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 13:38969:38985  \"swaps[i].tokenIn\" */ _2)\n                            /// @src 13:39542:39592  \"IUniswapV2Factory(factory1).getPair(input, output)\"\n                            mstore(_18, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ shl(224, 0xe6a43905))\n                            /// @src 13:39542:39592  \"IUniswapV2Factory(factory1).getPair(input, output)\"\n                            let _19 := staticcall(gas(), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 13:39542:39569  \"IUniswapV2Factory(factory1)\" */ expr_5, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _6), /** @src 13:39542:39592  \"IUniswapV2Factory(factory1).getPair(input, output)\" */ _18, sub(abi_encode_address_address(add(_18, /** @src 13:39112:39150  \"ERC20(output).balanceOf(address(this))\" */ _10), /** @src 13:39542:39592  \"IUniswapV2Factory(factory1).getPair(input, output)\" */ _3, _4), _18), _18, /** @src 13:38891:38914  \"swaps[i].isBackrunnable\" */ _1)\n                            /// @src 13:39542:39592  \"IUniswapV2Factory(factory1).getPair(input, output)\"\n                            if iszero(_19) { revert_forward() }\n                            let expr_6 := /** @src -1:-1:-1 */ 0\n                            /// @src 13:39542:39592  \"IUniswapV2Factory(factory1).getPair(input, output)\"\n                            if _19\n                            {\n                                let _20 := /** @src 13:38891:38914  \"swaps[i].isBackrunnable\" */ _1\n                                /// @src 13:39542:39592  \"IUniswapV2Factory(factory1).getPair(input, output)\"\n                                if gt(/** @src 13:38891:38914  \"swaps[i].isBackrunnable\" */ _1, /** @src 13:39542:39592  \"IUniswapV2Factory(factory1).getPair(input, output)\" */ returndatasize()) { _20 := returndatasize() }\n                                finalize_allocation(_18, _20)\n                                expr_6 := abi_decode_address_fromMemory(_18, add(_18, _20))\n                            }\n                            /// @src 13:39615:42028  \"if (pair1 != address(0)) {...\"\n                            if /** @src 13:39619:39638  \"pair1 != address(0)\" */ iszero(iszero(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 13:39619:39638  \"pair1 != address(0)\" */ expr_6, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _6)))\n                            /// @src 13:39615:42028  \"if (pair1 != address(0)) {...\"\n                            {\n                                /// @src 13:39778:39791  \"swaps[i].pair\"\n                                let _21 := read_from_memoryt_address(add(/** @src 13:39778:39786  \"swaps[i]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_5624_mpos, var_i)), /** @src 13:39778:39791  \"swaps[i].pair\" */ 128))\n                                /// @src 13:39716:40033  \"OpenMevLibrary.getOptimalAmounts(...\"\n                                let expr_5746_component, expr_5746_component_1 := fun_getOptimalAmounts(_21, expr_6, /** @src 13:39856:39874  \"swaps[i].isReverse\" */ read_from_memoryt_bool(/** @src 13:39856:39864  \"swaps[i]\" */ mload(memory_array_index_access_struct_Swap_dyn(var_swaps_5624_mpos, var_i))), /** @src 13:39716:40033  \"OpenMevLibrary.getOptimalAmounts(...\" */ _5, expr_1, expr_2)\n                                /// @src 13:40059:42006  \"if (optimalReturns > uint256(0)) {...\"\n                                if /** @src 13:40063:40090  \"optimalReturns > uint256(0)\" */ iszero(iszero(expr_5746_component_1))\n                                /// @src 13:40059:42006  \"if (optimalReturns > uint256(0)) {...\"\n                                {\n                                    /// @src 13:40122:41980  \"if (contractAssetBalance >= optimalAmount) {...\"\n                                    switch /** @src 13:40126:40163  \"contractAssetBalance >= optimalAmount\" */ iszero(lt(expr_1, expr_5746_component))\n                                    case /** @src 13:40122:41980  \"if (contractAssetBalance >= optimalAmount) {...\" */ 0 {\n                                        /// @src 13:41022:41101  \"optimalReturns > ((optimalAmount * 5) / 10000) && bentoBalance >= optimalAmount\"\n                                        let expr_7 := /** @src 13:41022:41068  \"optimalReturns > ((optimalAmount * 5) / 10000)\" */ gt(expr_5746_component_1, /** @src 13:41040:41067  \"(optimalAmount * 5) / 10000\" */ checked_div_uint256_16472(/** @src 13:41041:41058  \"optimalAmount * 5\" */ checked_mul_uint256_16471(expr_5746_component)))\n                                        /// @src 13:41022:41101  \"optimalReturns > ((optimalAmount * 5) / 10000) && bentoBalance >= optimalAmount\"\n                                        if expr_7\n                                        {\n                                            expr_7 := /** @src 13:41072:41101  \"bentoBalance >= optimalAmount\" */ iszero(lt(expr_2, expr_5746_component))\n                                        }\n                                        /// @src 13:41018:41950  \"if (optimalReturns > ((optimalAmount * 5) / 10000) && bentoBalance >= optimalAmount) {...\"\n                                        switch expr_7\n                                        case 0 {\n                                            /// @src 13:41262:41950  \"if (optimalReturns > ((optimalAmount * 9) / 10000)) {...\"\n                                            if /** @src 13:41266:41312  \"optimalReturns > ((optimalAmount * 9) / 10000)\" */ gt(expr_5746_component_1, /** @src 13:41284:41311  \"(optimalAmount * 9) / 10000\" */ checked_div_uint256_16472(/** @src 13:41285:41302  \"optimalAmount * 9\" */ checked_mul_uint256_16473(expr_5746_component)))\n                                            /// @src 13:41262:41950  \"if (optimalReturns > ((optimalAmount * 9) / 10000)) {...\"\n                                            {\n                                                /// @src 13:41641:41705  \"IProtocolDataProvider(AAVE_DATA_PROVIDER).getReserveData(output)\"\n                                                let _22 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 13:38969:38985  \"swaps[i].tokenIn\" */ _2)\n                                                /// @src 13:41641:41705  \"IProtocolDataProvider(AAVE_DATA_PROVIDER).getReserveData(output)\"\n                                                mstore(_22, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ shl(224, 0x35ea6a75))\n                                                /// @src 13:41641:41705  \"IProtocolDataProvider(AAVE_DATA_PROVIDER).getReserveData(output)\"\n                                                let _23 := staticcall(gas(), /** @src 13:1847:1889  \"0x057835Ad21a177dbdd3090bB1CAE03EaCF78Fc6d\" */ 0x057835ad21a177dbdd3090bb1cae03eacf78fc6d, /** @src 13:41641:41705  \"IProtocolDataProvider(AAVE_DATA_PROVIDER).getReserveData(output)\" */ _22, sub(abi_encode_tuple_address(add(_22, /** @src 13:39112:39150  \"ERC20(output).balanceOf(address(this))\" */ _10), /** @src 13:41641:41705  \"IProtocolDataProvider(AAVE_DATA_PROVIDER).getReserveData(output)\" */ _4), _22), _22, /** @src 13:38891:38914  \"swaps[i].isBackrunnable\" */ _1)\n                                                /// @src 13:41641:41705  \"IProtocolDataProvider(AAVE_DATA_PROVIDER).getReserveData(output)\"\n                                                if iszero(_23) { revert_forward() }\n                                                let expr_8 := /** @src -1:-1:-1 */ 0\n                                                /// @src 13:41641:41705  \"IProtocolDataProvider(AAVE_DATA_PROVIDER).getReserveData(output)\"\n                                                if _23\n                                                {\n                                                    let _24 := /** @src 13:38891:38914  \"swaps[i].isBackrunnable\" */ _1\n                                                    /// @src 13:41641:41705  \"IProtocolDataProvider(AAVE_DATA_PROVIDER).getReserveData(output)\"\n                                                    if gt(/** @src 13:38891:38914  \"swaps[i].isBackrunnable\" */ _1, /** @src 13:41641:41705  \"IProtocolDataProvider(AAVE_DATA_PROVIDER).getReserveData(output)\" */ returndatasize()) { _24 := returndatasize() }\n                                                    finalize_allocation(_22, _24)\n                                                    expr_8 := abi_decode_uint256_fromMemory(_22, add(_22, _24))\n                                                }\n                                                /// @src 13:41596:41916  \"if (...\"\n                                                if /** @src 13:41641:41721  \"IProtocolDataProvider(AAVE_DATA_PROVIDER).getReserveData(output) > optimalAmount\" */ gt(expr_8, expr_5746_component)\n                                                /// @src 13:41596:41916  \"if (...\"\n                                                {\n                                                    /// @src 13:41862:41876  \"optimalReturns\"\n                                                    fun_flashSwap(var_factory, expr_5, _3, _4, expr_5746_component, expr_5746_component_1)\n                                                }\n                                            }\n                                        }\n                                        default /// @src 13:41018:41950  \"if (optimalReturns > ((optimalAmount * 5) / 10000) && bentoBalance >= optimalAmount) {...\"\n                                        {\n                                            /// @src 13:41206:41220  \"optimalReturns\"\n                                            fun_flashSwapKashi(var_factory, expr_5, _3, _4, expr_5746_component, expr_5746_component_1)\n                                        }\n                                    }\n                                    default /// @src 13:40122:41980  \"if (contractAssetBalance >= optimalAmount) {...\"\n                                    {\n                                        /// @src 13:40641:40705  \"if (amountOut < optimalAmount) revert InsufficientOutputAmount()\"\n                                        if /** @src 13:40645:40670  \"amountOut < optimalAmount\" */ lt(/** @src 13:40257:40603  \"_arb(...\" */ fun_arb(var_factory, expr_5, _3, _4, /** @src 13:39144:39148  \"this\" */ address(), /** @src 13:40257:40603  \"_arb(...\" */ expr_5746_component), /** @src 13:40645:40670  \"amountOut < optimalAmount\" */ expr_5746_component)\n                                        /// @src 13:40641:40705  \"if (amountOut < optimalAmount) revert InsufficientOutputAmount()\"\n                                        {\n                                            /// @src 13:40679:40705  \"InsufficientOutputAmount()\"\n                                            let _25 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 13:38969:38985  \"swaps[i].tokenIn\" */ _2)\n                                            /// @src 13:40679:40705  \"InsufficientOutputAmount()\"\n                                            mstore(_25, /** @src 13:28588:28614  \"InsufficientOutputAmount()\" */ shl(224, 0x42301c23))\n                                            /// @src 13:40679:40705  \"InsufficientOutputAmount()\"\n                                            revert(_25, /** @src 13:39112:39150  \"ERC20(output).balanceOf(address(this))\" */ _10)\n                                        }\n                                        /// @src 13:40778:40817  \"MEV(msg.sender, output, optimalReturns)\"\n                                        let _26 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 13:38969:38985  \"swaps[i].tokenIn\" */ _2)\n                                        /// @src 13:40778:40817  \"MEV(msg.sender, output, optimalReturns)\"\n                                        log3(_26, sub(abi_encode_uint256(_26, expr_5746_component_1), _26), 0x8ed9d7f4b992b4476c7f5cee8895a6c9fe5a1601e771e630d67d5ed17d4656d5, /** @src 13:40782:40792  \"msg.sender\" */ caller(), /** @src 13:40778:40817  \"MEV(msg.sender, output, optimalReturns)\" */ _7)\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            /// @ast-id 3109 @src 12:17589:19560  \"function getOptimalAmounts(...\"\n            function fun_getOptimalAmounts(var_pair0, var_pair1, var_isReverse, var_isAaveAsset, var_contractAssetBalance, var_bentoBalance) -> var_optimalAmount, var_optimalReturns\n            {\n                /// @src 12:17809:17830  \"uint256 optimalAmount\"\n                var_optimalAmount := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 0\n                /// @src 12:17809:17830  \"uint256 optimalAmount\"\n                let var_optimalAmount_1 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 0\n                /// @src 12:17832:17854  \"uint256 optimalReturns\"\n                var_optimalReturns := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ var_optimalAmount_1\n                let _1 := sub(shl(160, 1), 1)\n                /// @src 12:17991:18026  \"IUniswapV2Pair(pair0).getReserves()\"\n                let _2 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                /// @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\"\n                let _3 := shl(226, 0x0240bc6b)\n                /// @src 12:17991:18026  \"IUniswapV2Pair(pair0).getReserves()\"\n                mstore(_2, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ _3)\n                /// @src 12:17991:18026  \"IUniswapV2Pair(pair0).getReserves()\"\n                let _4 := 96\n                let _5 := staticcall(gas(), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 12:17991:18012  \"IUniswapV2Pair(pair0)\" */ var_pair0, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _1), /** @src 12:17991:18026  \"IUniswapV2Pair(pair0).getReserves()\" */ _2, 4, _2, _4)\n                if iszero(_5) { revert_forward() }\n                let expr_2972_component := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ var_optimalAmount_1\n                let expr_2972_component_1 := var_optimalAmount_1\n                /// @src 12:17991:18026  \"IUniswapV2Pair(pair0).getReserves()\"\n                if _5\n                {\n                    let _6 := _4\n                    if gt(_4, returndatasize()) { _6 := returndatasize() }\n                    finalize_allocation(_2, _6)\n                    let expr_component, expr_component_1, expr_component_2 := abi_decode_uint112t_uint112t_uint32_fromMemory(_2, add(_2, _6))\n                    expr_2972_component := expr_component\n                    expr_2972_component_1 := expr_component_1\n                }\n                /// @src 12:18091:18126  \"IUniswapV2Pair(pair1).getReserves()\"\n                let _7 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                /// @src 12:18091:18126  \"IUniswapV2Pair(pair1).getReserves()\"\n                mstore(_7, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ _3)\n                /// @src 12:18091:18126  \"IUniswapV2Pair(pair1).getReserves()\"\n                let _8 := staticcall(gas(), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 12:18091:18112  \"IUniswapV2Pair(pair1)\" */ var_pair1, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _1), /** @src 12:18091:18126  \"IUniswapV2Pair(pair1).getReserves()\" */ _7, /** @src 12:17991:18026  \"IUniswapV2Pair(pair0).getReserves()\" */ 4, /** @src 12:18091:18126  \"IUniswapV2Pair(pair1).getReserves()\" */ _7, /** @src 12:17991:18026  \"IUniswapV2Pair(pair0).getReserves()\" */ _4)\n                /// @src 12:18091:18126  \"IUniswapV2Pair(pair1).getReserves()\"\n                if iszero(_8) { revert_forward() }\n                let expr_2982_component := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ var_optimalAmount_1\n                let expr_2982_component_1 := var_optimalAmount_1\n                /// @src 12:18091:18126  \"IUniswapV2Pair(pair1).getReserves()\"\n                if _8\n                {\n                    let _9 := /** @src 12:17991:18026  \"IUniswapV2Pair(pair0).getReserves()\" */ _4\n                    /// @src 12:18091:18126  \"IUniswapV2Pair(pair1).getReserves()\"\n                    if gt(/** @src 12:17991:18026  \"IUniswapV2Pair(pair0).getReserves()\" */ _4, /** @src 12:18091:18126  \"IUniswapV2Pair(pair1).getReserves()\" */ returndatasize()) { _9 := returndatasize() }\n                    finalize_allocation(_7, _9)\n                    let expr_component_3, expr_component_4, expr_component_5 := abi_decode_uint112t_uint112t_uint32_fromMemory(_7, add(_7, _9))\n                    expr_2982_component := expr_component_3\n                    expr_2982_component_1 := expr_component_4\n                }\n                /// @src 12:18155:18342  \"isReverse...\"\n                let expr_3001_component := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ var_optimalAmount_1\n                let expr_3001_component_1 := var_optimalAmount_1\n                let expr_3001_component_2 := var_optimalAmount_1\n                /// @src 12:18155:18342  \"isReverse...\"\n                switch var_isReverse\n                case 0 {\n                    /// @src 12:18272:18342  \"calcCoeffs(pair0Reserve1, pair0Reserve0, pair1Reserve1, pair1Reserve0)\"\n                    let expr_3000_component, expr_3000_component_1, expr_3000_component_2 := fun_calcCoeffs(expr_2972_component_1, expr_2972_component, expr_2982_component_1, expr_2982_component)\n                    /// @src 12:18155:18342  \"isReverse...\"\n                    expr_3001_component := expr_3000_component\n                    expr_3001_component_1 := expr_3000_component_1\n                    expr_3001_component_2 := expr_3000_component_2\n                }\n                default {\n                    /// @src 12:18183:18253  \"calcCoeffs(pair0Reserve0, pair0Reserve1, pair1Reserve0, pair1Reserve1)\"\n                    let expr_2994_component, expr_2994_component_1, expr_component_6 := fun_calcCoeffs(expr_2972_component, expr_2972_component_1, expr_2982_component, expr_2982_component_1)\n                    /// @src 12:18155:18342  \"isReverse...\"\n                    expr_3001_component := expr_2994_component\n                    expr_3001_component_1 := expr_2994_component_1\n                    expr_3001_component_2 := expr_component_6\n                }\n                /// @src 12:18366:18398  \"_isNonZero(Cf) && _isNonZero(Cg)\"\n                let expr := /** @src 12:19970:20037  \"assembly {...\" */ iszero(iszero(/** @src 12:18366:18380  \"_isNonZero(Cf)\" */ expr_3001_component_1))\n                /// @src 12:18366:18398  \"_isNonZero(Cf) && _isNonZero(Cg)\"\n                if expr\n                {\n                    expr := /** @src 12:19970:20037  \"assembly {...\" */ iszero(iszero(/** @src 12:18384:18398  \"_isNonZero(Cg)\" */ expr_3001_component_2))\n                }\n                /// @src 12:18362:19554  \"if (_isNonZero(Cf) && _isNonZero(Cg)) {...\"\n                if expr\n                {\n                    /// @src 12:18505:18531  \"Uint512.mul256x256(Cb, Cb)\"\n                    let expr_component_7, expr_3023_component := fun_mul256x256(expr_3001_component, expr_3001_component)\n                    /// @src 12:18582:18608  \"Uint512.mul256x256(Cb, Cf)\"\n                    let expr_3033_component, expr_3033_component_1 := fun_mul256x256(expr_3001_component, expr_3001_component_1)\n                    /// @src 12:18665:18719  \"Uint512.add512x512(_bSquare0, _bSquare1, _4ac0, _4ac1)\"\n                    let expr_3045_component, expr_3045_component_1 := fun_add512x512(expr_component_7, expr_3023_component, expr_3033_component, expr_3033_component_1)\n                    /// @src 12:18750:18785  \"Uint512.sqrt512(_bsq4ac0, _bsq4ac1)\"\n                    let expr_1 := fun_sqrt512(expr_3045_component, expr_3045_component_1)\n                    /// @src 12:18813:19544  \"if (numerator0 > Cb) {...\"\n                    if /** @src 12:18817:18832  \"numerator0 > Cb\" */ gt(expr_1, expr_3001_component)\n                    /// @src 12:18813:19544  \"if (numerator0 > Cb) {...\"\n                    {\n                        /// @src 12:18969:19007  \"optimalAmount = (numerator0 - Cb) / Cg\"\n                        var_optimalAmount := /** @src 12:18985:19007  \"(numerator0 - Cb) / Cg\" */ checked_div_uint256(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ sub(/** @src 12:18986:19001  \"numerator0 - Cb\" */ expr_1, expr_3001_component), /** @src 12:18985:19007  \"(numerator0 - Cb) / Cg\" */ expr_3001_component_2)\n                        /// @src 12:19122:19174  \"contractAssetBalance < optimalAmount && !isAaveAsset\"\n                        let expr_2 := /** @src 12:19122:19158  \"contractAssetBalance < optimalAmount\" */ lt(var_contractAssetBalance, var_optimalAmount)\n                        /// @src 12:19122:19174  \"contractAssetBalance < optimalAmount && !isAaveAsset\"\n                        if expr_2\n                        {\n                            expr_2 := /** @src 12:19162:19174  \"!isAaveAsset\" */ iszero(var_isAaveAsset)\n                        }\n                        /// @src 12:19122:19206  \"contractAssetBalance < optimalAmount && !isAaveAsset && bentoBalance < optimalAmount\"\n                        let expr_3 := expr_2\n                        if expr_2\n                        {\n                            expr_3 := /** @src 12:19178:19206  \"bentoBalance < optimalAmount\" */ lt(var_bentoBalance, var_optimalAmount)\n                        }\n                        /// @src 12:19118:19457  \"if (contractAssetBalance < optimalAmount && !isAaveAsset && bentoBalance < optimalAmount) {...\"\n                        if expr_3\n                        {\n                            /// @src 12:19230:19439  \"if (contractAssetBalance > bentoBalance) {...\"\n                            switch /** @src 12:19234:19269  \"contractAssetBalance > bentoBalance\" */ gt(var_contractAssetBalance, var_bentoBalance)\n                            case /** @src 12:19230:19439  \"if (contractAssetBalance > bentoBalance) {...\" */ 0 {\n                                /// @src 12:19388:19416  \"optimalAmount = bentoBalance\"\n                                var_optimalAmount := var_bentoBalance\n                            }\n                            default /// @src 12:19230:19439  \"if (contractAssetBalance > bentoBalance) {...\"\n                            {\n                                /// @src 12:19297:19333  \"optimalAmount = contractAssetBalance\"\n                                var_optimalAmount := var_contractAssetBalance\n                            }\n                        }\n                        /// @src 12:19474:19529  \"optimalReturns = calcReturns(Cb, Cf, Cg, optimalAmount)\"\n                        var_optimalReturns := /** @src 12:19491:19529  \"calcReturns(Cb, Cf, Cg, optimalAmount)\" */ fun_calcReturns(expr_3001_component, expr_3001_component_1, expr_3001_component_2, var_optimalAmount)\n                    }\n                }\n            }\n            /// @ast-id 2901 @src 12:15517:16486  \"function calcCoeffs(...\"\n            function fun_calcCoeffs(var_reserve0Token0, var_reserve0Token1, var_reserve1Token0, var_reserve1Token1) -> var_Cb, var_Cf, var_Cg\n            {\n                /// @src 12:15755:15765  \"uint256 Cf\"\n                var_Cf := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 0\n                /// @src 12:15779:15789  \"uint256 Cg\"\n                var_Cg := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 0\n                let _1 := 0xffffffffffffffffffffffffffff\n                /// @src 12:15915:15938  \"uint256(reserve1Token1)\"\n                let expr := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 12:15915:15938  \"uint256(reserve1Token1)\" */ var_reserve1Token1, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _1)\n                /// @src 12:15941:15964  \"uint256(reserve0Token0)\"\n                let expr_1 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 12:15941:15964  \"uint256(reserve0Token0)\" */ var_reserve0Token0, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _1)\n                /// @src 12:15967:15974  \"1000000\"\n                let _2 := 0x0f4240\n                /// @src 12:15910:15974  \"Cb = uint256(reserve1Token1) * uint256(reserve0Token0) * 1000000\"\n                var_Cb := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mul(mul(/** @src 12:15915:15964  \"uint256(reserve1Token1) * uint256(reserve0Token0)\" */ expr, expr_1), /** @src 12:15967:15974  \"1000000\" */ _2)\n                /// @src 12:15988:16470  \"if ((uint256(reserve0Token0) * 1000000) == Cb / uint256(reserve1Token1)) {...\"\n                if /** @src 12:15992:16059  \"(uint256(reserve0Token0) * 1000000) == Cb / uint256(reserve1Token1)\" */ eq(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mul(/** @src 12:15993:16026  \"uint256(reserve0Token0) * 1000000\" */ expr_1, /** @src 12:15967:15974  \"1000000\" */ _2), /** @src 12:16031:16059  \"Cb / uint256(reserve1Token1)\" */ checked_div_uint256(var_Cb, expr))\n                /// @src 12:15988:16470  \"if ((uint256(reserve0Token0) * 1000000) == Cb / uint256(reserve1Token1)) {...\"\n                {\n                    /// @src 12:16092:16115  \"uint256(reserve1Token0)\"\n                    let expr_2 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 12:16092:16115  \"uint256(reserve1Token0)\" */ var_reserve1Token0, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _1)\n                    /// @src 12:16118:16141  \"uint256(reserve0Token1)\"\n                    let expr_3 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 12:16118:16141  \"uint256(reserve0Token1)\" */ var_reserve0Token1, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _1)\n                    /// @src 12:16144:16150  \"994009\"\n                    let _3 := 0x0f2ad9\n                    /// @src 12:16092:16150  \"uint256(reserve1Token0) * uint256(reserve0Token1) * 994009\"\n                    let expr_4 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mul(mul(/** @src 12:16092:16141  \"uint256(reserve1Token0) * uint256(reserve0Token1)\" */ expr_2, expr_3), /** @src 12:16144:16150  \"994009\" */ _3)\n                    /// @src 12:16173:16205  \"uint256(reserve0Token1) * 994009\"\n                    let expr_5 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mul(/** @src 12:16173:16205  \"uint256(reserve0Token1) * 994009\" */ expr_3, /** @src 12:16144:16150  \"994009\" */ _3)\n                    /// @src 12:16168:16456  \"if ((uint256(reserve0Token1) * 994009) == Ca / uint256(reserve1Token0)) {...\"\n                    if /** @src 12:16172:16238  \"(uint256(reserve0Token1) * 994009) == Ca / uint256(reserve1Token0)\" */ eq(expr_5, /** @src 12:16210:16238  \"Ca / uint256(reserve1Token0)\" */ checked_div_uint256(expr_4, expr_2))\n                    /// @src 12:16168:16456  \"if ((uint256(reserve0Token1) * 994009) == Ca / uint256(reserve1Token0)) {...\"\n                    {\n                        /// @src 12:16262:16438  \"if (Ca > Cb) {...\"\n                        if /** @src 12:16266:16273  \"Ca > Cb\" */ gt(expr_4, var_Cb)\n                        /// @src 12:16262:16438  \"if (Ca > Cb) {...\"\n                        {\n                            /// @src 12:16301:16313  \"Cf = Ca - Cb\"\n                            var_Cf := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ sub(/** @src 12:16306:16313  \"Ca - Cb\" */ expr_4, var_Cb)\n                            /// @src 12:16339:16415  \"Cg = (uint256(reserve1Token1) * 997000) + (uint256(reserve0Token1) * 994009)\"\n                            var_Cg := /** @src 12:1287:1291  \"1000\" */ add(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mul(/** @src 12:16345:16377  \"uint256(reserve1Token1) * 997000\" */ expr, /** @src 12:16371:16377  \"997000\" */ 0x0f3688), /** @src 12:16344:16415  \"(uint256(reserve1Token1) * 997000) + (uint256(reserve0Token1) * 994009)\" */ expr_5)\n                        }\n                    }\n                }\n            }\n            /// @ast-id 2935 @src 12:16813:17074  \"function calcReturns(...\"\n            function fun_calcReturns(var_Cb, var_Cf, var_Cg, var_amountIn) -> var\n            {\n                /// @src 12:16992:17057  \"return (amountIn * (Cf - (Cg * amountIn))) / (Cb + amountIn * Cg)\"\n                var := /** @src 12:16999:17057  \"(amountIn * (Cf - (Cg * amountIn))) / (Cb + amountIn * Cg)\" */ checked_div_uint256(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mul(/** @src 12:17000:17033  \"amountIn * (Cf - (Cg * amountIn))\" */ var_amountIn, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ sub(/** @src 12:17012:17032  \"Cf - (Cg * amountIn)\" */ var_Cf, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mul(/** @src 12:17018:17031  \"Cg * amountIn\" */ var_Cg, var_amountIn))), /** @src 12:1287:1291  \"1000\" */ add(/** @src 12:17038:17056  \"Cb + amountIn * Cg\" */ var_Cb, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mul(/** @src 12:17043:17056  \"amountIn * Cg\" */ var_amountIn, var_Cg)))\n            }\n            /// @src 13:1933:1988  \"IBentoBoxV1(0xF5BCE5077908a1b7370B9ae04AdC565EBd643966)\"\n            function abi_encode_bytes(value, pos) -> end\n            {\n                let length := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 13:1933:1988  \"IBentoBoxV1(0xF5BCE5077908a1b7370B9ae04AdC565EBd643966)\" */ value)\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                mstore(pos, length)\n                /// @src 13:1933:1988  \"IBentoBoxV1(0xF5BCE5077908a1b7370B9ae04AdC565EBd643966)\"\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 13:1933:1988  \"IBentoBoxV1(0xF5BCE5077908a1b7370B9ae04AdC565EBd643966)\"\n                for { }\n                lt(i, length)\n                {\n                    i := add(i, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 0x20)\n                }\n                /// @src 13:1933:1988  \"IBentoBoxV1(0xF5BCE5077908a1b7370B9ae04AdC565EBd643966)\"\n                {\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    let _1 := 0x20\n                    /// @src 13:1933:1988  \"IBentoBoxV1(0xF5BCE5077908a1b7370B9ae04AdC565EBd643966)\"\n                    mstore(add(add(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ pos, /** @src 13:1933:1988  \"IBentoBoxV1(0xF5BCE5077908a1b7370B9ae04AdC565EBd643966)\" */ i), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _1), /** @src 13:1933:1988  \"IBentoBoxV1(0xF5BCE5077908a1b7370B9ae04AdC565EBd643966)\" */ mload(add(add(value, i), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _1)))\n                }\n                /// @src 13:1933:1988  \"IBentoBoxV1(0xF5BCE5077908a1b7370B9ae04AdC565EBd643966)\"\n                if gt(i, length)\n                {\n                    mstore(add(add(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ pos, /** @src 13:1933:1988  \"IBentoBoxV1(0xF5BCE5077908a1b7370B9ae04AdC565EBd643966)\" */ length), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 0x20), /** @src -1:-1:-1 */ 0)\n                }\n                /// @src 13:1933:1988  \"IBentoBoxV1(0xF5BCE5077908a1b7370B9ae04AdC565EBd643966)\"\n                end := add(add(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ pos, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ and(add(/** @src 13:1933:1988  \"IBentoBoxV1(0xF5BCE5077908a1b7370B9ae04AdC565EBd643966)\" */ length, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ 31), not(31))), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 0x20)\n            }\n            /// @src 13:1933:1988  \"IBentoBoxV1(0xF5BCE5077908a1b7370B9ae04AdC565EBd643966)\"\n            function abi_encode_contract_IFlashBorrower_address_address_uint256_bytes(headStart, value0, value1, value2, value3, value4) -> tail\n            {\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let _1 := sub(shl(160, 1), 1)\n                /// @src 13:1933:1988  \"IBentoBoxV1(0xF5BCE5077908a1b7370B9ae04AdC565EBd643966)\"\n                mstore(headStart, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 13:1933:1988  \"IBentoBoxV1(0xF5BCE5077908a1b7370B9ae04AdC565EBd643966)\" */ value0, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _1))\n                mstore(/** @src 13:1933:1988  \"IBentoBoxV1(0xF5BCE5077908a1b7370B9ae04AdC565EBd643966)\" */ add(headStart, 32), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(value1, _1))\n                mstore(/** @src 13:1933:1988  \"IBentoBoxV1(0xF5BCE5077908a1b7370B9ae04AdC565EBd643966)\" */ add(headStart, 64), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(value2, _1))\n                mstore(/** @src 13:1933:1988  \"IBentoBoxV1(0xF5BCE5077908a1b7370B9ae04AdC565EBd643966)\" */ add(headStart, 96), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ value3)\n                /// @src 13:1933:1988  \"IBentoBoxV1(0xF5BCE5077908a1b7370B9ae04AdC565EBd643966)\"\n                mstore(add(headStart, 128), 160)\n                tail := abi_encode_bytes(value4, add(headStart, 160))\n            }\n            /// @ast-id 5920 @src 13:42510:43181  \"function _flashSwapKashi(...\"\n            function fun_flashSwapKashi(var_factory, var_factory1, var_input, var_output, var_amountIn, var_optimalReturns)\n            {\n                /// @src 13:42738:42771  \"_encode(factory, factory1, input)\"\n                let expr_5876_mpos := fun_encode(var_factory, var_factory1, var_input)\n                /// @src 13:1945:1987  \"0xF5BCE5077908a1b7370B9ae04AdC565EBd643966\"\n                let _1 := 0xf5bce5077908a1b7370b9ae04adc565ebd643966\n                /// @src 13:42874:42961  \"bento.flashLoan(IFlashBorrower(address(this)), address(this), output, amountIn, params)\"\n                if iszero(extcodesize(/** @src 13:1945:1987  \"0xF5BCE5077908a1b7370B9ae04AdC565EBd643966\" */ _1))\n                /// @src 13:42874:42961  \"bento.flashLoan(IFlashBorrower(address(this)), address(this), output, amountIn, params)\"\n                {\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    revert(0, 0)\n                }\n                /// @src 13:42874:42961  \"bento.flashLoan(IFlashBorrower(address(this)), address(this), output, amountIn, params)\"\n                let _2 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                /// @src 13:42874:42961  \"bento.flashLoan(IFlashBorrower(address(this)), address(this), output, amountIn, params)\"\n                mstore(_2, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ shl(224, 0xf1676d37))\n                /// @src 13:42874:42961  \"bento.flashLoan(IFlashBorrower(address(this)), address(this), output, amountIn, params)\"\n                let trySuccessCondition := call(gas(), /** @src 13:1945:1987  \"0xF5BCE5077908a1b7370B9ae04AdC565EBd643966\" */ _1, /** @src 13:42874:42961  \"bento.flashLoan(IFlashBorrower(address(this)), address(this), output, amountIn, params)\" */ 0, _2, sub(abi_encode_contract_IFlashBorrower_address_address_uint256_bytes(add(_2, 4), /** @src 13:42913:42917  \"this\" */ address(), address(), /** @src 13:42874:42961  \"bento.flashLoan(IFlashBorrower(address(this)), address(this), output, amountIn, params)\" */ var_output, var_amountIn, expr_5876_mpos), _2), _2, 0)\n                if trySuccessCondition\n                {\n                    finalize_allocation_16266(_2)\n                    abi_decode(_2, _2)\n                }\n                /// @src 13:42870:43175  \"try bento.flashLoan(IFlashBorrower(address(this)), address(this), output, amountIn, params) {...\"\n                switch iszero(trySuccessCondition)\n                case 0 {\n                    /// @src 13:43028:43069  \"optimalReturns - ((amountIn * 5) / 10000)\"\n                    let expr := checked_sub_uint256(var_optimalReturns, /** @src 13:43046:43068  \"(amountIn * 5) / 10000\" */ checked_div_uint256_16472(/** @src 13:43047:43059  \"amountIn * 5\" */ checked_mul_uint256_16471(var_amountIn)))\n                    /// @src 13:43004:43070  \"MEV(msg.sender, output, optimalReturns - ((amountIn * 5) / 10000))\"\n                    let _3 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                    /// @src 13:43004:43070  \"MEV(msg.sender, output, optimalReturns - ((amountIn * 5) / 10000))\"\n                    log3(_3, sub(abi_encode_uint256(_3, expr), _3), 0x8ed9d7f4b992b4476c7f5cee8895a6c9fe5a1601e771e630d67d5ed17d4656d5, /** @src 13:43008:43018  \"msg.sender\" */ caller(), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 13:43004:43070  \"MEV(msg.sender, output, optimalReturns - ((amountIn * 5) / 10000))\" */ var_output, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ sub(shl(160, 1), 1)))\n                }\n                default /// @src 13:42870:43175  \"try bento.flashLoan(IFlashBorrower(address(this)), address(this), output, amountIn, params) {...\"\n                {\n                    /// @src 13:43137:43164  \"LoanError(output, amountIn)\"\n                    let _4 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                    /// @src 13:43137:43164  \"LoanError(output, amountIn)\"\n                    log2(_4, sub(abi_encode_uint256(_4, var_amountIn), _4), 0x137ac09e2fb89da2cbe32562b3e674e46bba7c473b3f71b5c1bd62f7ef3232ed, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 13:43137:43164  \"LoanError(output, amountIn)\" */ var_output, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ sub(shl(160, 1), 1)))\n                }\n            }\n            function abi_decode_available_length_bytes(src, length, end) -> array\n            {\n                if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, add(/** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ and(add(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ length, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ 31), not(31)), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 0x20))\n                array := memPtr\n                mstore(memPtr, length)\n                if gt(add(src, length), end)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                calldatacopy(add(memPtr, 0x20), src, length)\n                mstore(add(add(memPtr, length), 0x20), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 13:1641:1683  \"0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9\"\n            function abi_encode_address_array_address_dyn_array_uint256_dyn_array_uint256_dyn_address_bytes_uint16(headStart, value0, value1, value2, value3, value4, value5) -> tail\n            {\n                let tail_1 := add(headStart, 224)\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let _1 := sub(shl(160, 1), 1)\n                mstore(headStart, and(value0, _1))\n                /// @src 13:1641:1683  \"0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9\"\n                let _2 := 32\n                mstore(add(headStart, _2), 224)\n                let pos := tail_1\n                let length := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(/** @src 13:1641:1683  \"0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9\" */ value1)\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                mstore(tail_1, length)\n                /// @src 13:1641:1683  \"0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9\"\n                pos := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ add(/** @src 13:1641:1683  \"0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9\" */ headStart, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 256)\n                /// @src 13:1641:1683  \"0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9\"\n                let srcPtr := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ add(/** @src 13:1641:1683  \"0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9\" */ value1, _2)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    mstore(pos, and(/** @src 13:1641:1683  \"0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9\" */ mload(srcPtr), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _1))\n                    /// @src 13:1641:1683  \"0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9\"\n                    pos := add(pos, _2)\n                    srcPtr := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ add(/** @src 13:1641:1683  \"0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9\" */ srcPtr, _2)\n                }\n                mstore(add(headStart, 64), sub(pos, headStart))\n                let tail_2 := abi_encode_array_uint256_dyn_memory_ptr(value2, pos)\n                mstore(add(headStart, 96), sub(tail_2, headStart))\n                let tail_3 := abi_encode_array_uint256_dyn_memory_ptr(value3, tail_2)\n                abi_encode_address(value4, add(headStart, 128))\n                mstore(add(headStart, 160), sub(tail_3, headStart))\n                tail := abi_encode_bytes(value5, tail_3)\n                mstore(add(headStart, 192), 0)\n            }\n            /// @ast-id 6112 @src 13:44590:45959  \"function _flashSwap(...\"\n            function fun_flashSwap(var_factory, var_factory1, var_input, var_output, var_amountIn, var_optimalReturns)\n            {\n                /// @src 13:44971:44987  \"new address[](1)\"\n                let expr_6021_mpos := allocate_and_zero_memory_array_array_uint256_dyn_16481()\n                /// @src 13:44997:45015  \"assets[0] = output\"\n                write_to_memory_address(memory_array_index_access_struct_Swap_dyn_16265(expr_6021_mpos), var_output)\n                /// @src 13:45095:45111  \"new uint256[](1)\"\n                let expr_6038_mpos := allocate_and_zero_memory_array_array_uint256_dyn_16481()\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                mstore(/** @src 13:45121:45142  \"amounts[0] = amountIn\" */ memory_array_index_access_struct_Swap_dyn_16265(expr_6038_mpos), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ var_amountIn)\n                /// @src 13:45240:45256  \"new uint256[](1)\"\n                let expr_6055_mpos := allocate_and_zero_memory_array_array_uint256_dyn_16481()\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                mstore(/** @src 13:45266:45278  \"modes[0] = 0\" */ memory_array_index_access_struct_Swap_dyn_16265(expr_6055_mpos), /** @src 13:45004:45005  \"0\" */ 0x00)\n                /// @src 13:45346:45379  \"_encode(factory, factory1, input)\"\n                let expr_mpos := fun_encode(var_factory, var_factory1, var_input)\n                /// @src 13:1641:1683  \"0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9\"\n                let _1 := 0x7d2768de32b0b80b7a3454c06bdac94a69ddc7a9\n                /// @src 13:45494:45741  \"ILendingPool(LENDING_POOL_ADDRESS).flashLoan(...\"\n                if iszero(extcodesize(/** @src 13:1641:1683  \"0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9\" */ _1))\n                /// @src 13:45494:45741  \"ILendingPool(LENDING_POOL_ADDRESS).flashLoan(...\"\n                {\n                    /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                    revert(/** @src 13:45004:45005  \"0\" */ 0x00, 0x00)\n                }\n                /// @src 13:45494:45741  \"ILendingPool(LENDING_POOL_ADDRESS).flashLoan(...\"\n                let _2 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                /// @src 13:45494:45741  \"ILendingPool(LENDING_POOL_ADDRESS).flashLoan(...\"\n                mstore(_2, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ shl(224, 0xab9c4b5d))\n                /// @src 13:45494:45741  \"ILendingPool(LENDING_POOL_ADDRESS).flashLoan(...\"\n                let trySuccessCondition := call(gas(), /** @src 13:1641:1683  \"0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9\" */ _1, /** @src 13:45004:45005  \"0\" */ 0x00, /** @src 13:45494:45741  \"ILendingPool(LENDING_POOL_ADDRESS).flashLoan(...\" */ _2, sub(abi_encode_address_array_address_dyn_array_uint256_dyn_array_uint256_dyn_address_bytes_uint16(add(_2, 4), /** @src 13:44880:44884  \"this\" */ address(), /** @src 13:45494:45741  \"ILendingPool(LENDING_POOL_ADDRESS).flashLoan(...\" */ expr_6021_mpos, expr_6038_mpos, expr_6055_mpos, /** @src 13:44880:44884  \"this\" */ address(), /** @src 13:45494:45741  \"ILendingPool(LENDING_POOL_ADDRESS).flashLoan(...\" */ expr_mpos), _2), _2, /** @src 13:45004:45005  \"0\" */ 0x00)\n                /// @src 13:45494:45741  \"ILendingPool(LENDING_POOL_ADDRESS).flashLoan(...\"\n                if trySuccessCondition\n                {\n                    finalize_allocation_16266(_2)\n                    abi_decode(_2, _2)\n                }\n                /// @src 13:45478:45953  \"try...\"\n                switch iszero(trySuccessCondition)\n                case 0 {\n                    /// @src 13:45816:45857  \"optimalReturns - ((amountIn * 9) / 10000)\"\n                    let expr := checked_sub_uint256(var_optimalReturns, /** @src 13:45834:45856  \"(amountIn * 9) / 10000\" */ checked_div_uint256_16472(/** @src 13:45835:45847  \"amountIn * 9\" */ checked_mul_uint256_16473(var_amountIn)))\n                    /// @src 13:45792:45858  \"MEV(msg.sender, output, optimalReturns - ((amountIn * 9) / 10000))\"\n                    let _3 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                    /// @src 13:45792:45858  \"MEV(msg.sender, output, optimalReturns - ((amountIn * 9) / 10000))\"\n                    log3(_3, sub(abi_encode_uint256(_3, expr), _3), 0x8ed9d7f4b992b4476c7f5cee8895a6c9fe5a1601e771e630d67d5ed17d4656d5, /** @src 13:45796:45806  \"msg.sender\" */ caller(), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 13:45792:45858  \"MEV(msg.sender, output, optimalReturns - ((amountIn * 9) / 10000))\" */ var_output, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ sub(shl(160, 1), 1)))\n                }\n                default /// @src 13:45478:45953  \"try...\"\n                {\n                    /// @src 13:45915:45942  \"LoanError(output, amountIn)\"\n                    let _4 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                    /// @src 13:45915:45942  \"LoanError(output, amountIn)\"\n                    log2(_4, sub(abi_encode_uint256(_4, var_amountIn), _4), 0x137ac09e2fb89da2cbe32562b3e674e46bba7c473b3f71b5c1bd62f7ef3232ed, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 13:45915:45942  \"LoanError(output, amountIn)\" */ var_output, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ sub(shl(160, 1), 1)))\n                }\n            }\n            /// @ast-id 6204 @src 13:46474:47295  \"function executeOperation(...\"\n            function fun_executeOperation(var_assets_offset, var_assets_length, var_amounts_offset, var_amounts_length, var_premiums_offset, var_premiums_length, var_initiator, var_params_offset, var_params_length) -> var\n            {\n                /// @src 13:1641:1683  \"0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9\"\n                let _1 := 0x7d2768de32b0b80b7a3454c06bdac94a69ddc7a9\n                /// @src 13:46706:46775  \"if (msg.sender != LENDING_POOL_ADDRESS) revert ExecuteNotAuthorized()\"\n                if /** @src 13:46710:46744  \"msg.sender != LENDING_POOL_ADDRESS\" */ iszero(eq(/** @src 13:46710:46720  \"msg.sender\" */ caller(), /** @src 13:1641:1683  \"0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9\" */ _1))\n                /// @src 13:46706:46775  \"if (msg.sender != LENDING_POOL_ADDRESS) revert ExecuteNotAuthorized()\"\n                {\n                    /// @src 13:46753:46775  \"ExecuteNotAuthorized()\"\n                    let _2 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                    /// @src 13:46753:46775  \"ExecuteNotAuthorized()\"\n                    mstore(_2, /** @src 13:43749:43771  \"ExecuteNotAuthorized()\" */ shl(224, 0x75c366a9))\n                    /// @src 13:46753:46775  \"ExecuteNotAuthorized()\"\n                    revert(_2, 4)\n                }\n                /// @src 13:1522:1564  \"0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f\"\n                let value := calldataload(/** @src 13:46801:46810  \"assets[0]\" */ calldata_array_index_access_address_dyn_calldata_16264(var_assets_offset, var_assets_length))\n                /// @src 13:1522:1564  \"0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f\"\n                validator_revert_address(value)\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let returnValue := calldataload(/** @src 13:46881:46891  \"amounts[0]\" */ calldata_array_index_access_address_dyn_calldata_16264(var_amounts_offset, var_amounts_length))\n                /// @src 13:46958:46973  \"_decode(params)\"\n                let expr_6162_component, expr_6162_component_1, expr_6162_component_2 := fun_decode(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ abi_decode_available_length_bytes(/** @src 13:46958:46973  \"_decode(params)\" */ var_params_offset, var_params_length, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ calldatasize()))\n                /// @src 13:47000:47058  \"_arb(factory, factory1, input, asset, initiator, amountIn)\"\n                let expr := fun_arb(expr_6162_component, expr_6162_component_1, expr_6162_component_2, value, var_initiator, returnValue)\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let returnValue_1 := calldataload(/** @src 13:47100:47110  \"amounts[0]\" */ calldata_array_index_access_address_dyn_calldata_16264(var_amounts_offset, var_amounts_length))\n                /// @src 13:47100:47124  \"amounts[0] + premiums[0]\"\n                let expr_1 := checked_add_uint256(returnValue_1, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ calldataload(/** @src 13:47113:47124  \"premiums[0]\" */ calldata_array_index_access_address_dyn_calldata_16264(var_premiums_offset, var_premiums_length)))\n                /// @src 13:47134:47198  \"if (amountOver <= amountOwing) revert InsufficientOutputAmount()\"\n                if /** @src 13:47138:47163  \"amountOver <= amountOwing\" */ iszero(gt(expr, expr_1))\n                /// @src 13:47134:47198  \"if (amountOver <= amountOwing) revert InsufficientOutputAmount()\"\n                {\n                    /// @src 13:47172:47198  \"InsufficientOutputAmount()\"\n                    let _3 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                    /// @src 13:47172:47198  \"InsufficientOutputAmount()\"\n                    mstore(_3, /** @src 13:28588:28614  \"InsufficientOutputAmount()\" */ shl(224, 0x42301c23))\n                    /// @src 13:47172:47198  \"InsufficientOutputAmount()\"\n                    revert(_3, 4)\n                }\n                /// @src 15:4222:5491  \"assembly {...\"\n                let usr$freeMemoryPointer := mload(0x40)\n                mstore(usr$freeMemoryPointer, shl(224, 0x095ea7b3))\n                mstore(add(usr$freeMemoryPointer, 4), /** @src 13:1641:1683  \"0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9\" */ _1)\n                /// @src 15:4222:5491  \"assembly {...\"\n                mstore(add(usr$freeMemoryPointer, 36), expr_1)\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                if iszero(/** @src 15:4222:5491  \"assembly {...\" */ and(or(and(eq(mload(/** @src -1:-1:-1 */ 0), /** @src 15:4222:5491  \"assembly {...\" */ 1), gt(returndatasize(), 31)), iszero(returndatasize())), call(gas(), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 13:47208:47220  \"ERC20(asset)\" */ value, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ sub(shl(160, 1), 1)), /** @src -1:-1:-1 */ 0, /** @src 15:4222:5491  \"assembly {...\" */ usr$freeMemoryPointer, 68, /** @src -1:-1:-1 */ 0, /** @src 15:4222:5491  \"assembly {...\" */ 32)))\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 13:47277:47288  \"return true\"\n                var := /** @src 15:4222:5491  \"assembly {...\" */ 1\n            }\n            /// @ast-id 6222 @src 13:47549:48509  \"function _asmSwap(...\"\n            function fun_asmSwap(var_pair, var_amount0Out, var_amount1Out, var_to)\n            {\n                /// @src 13:47731:48503  \"assembly {...\"\n                let usr$ptr := mload(0x40)\n                mstore(usr$ptr, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ shl(224, 0x022c0d9f))\n                /// @src 13:47731:48503  \"assembly {...\"\n                mstore(add(usr$ptr, 0x04), var_amount0Out)\n                mstore(add(usr$ptr, 0x24), var_amount1Out)\n                mstore(add(usr$ptr, 0x44), var_to)\n                mstore(add(usr$ptr, 0x64), 0x80)\n                mstore(add(usr$ptr, 0x84), 0)\n                pop(call(gas(), var_pair, 0, usr$ptr, 0xA4, 0, 0))\n            }\n            /// @ast-id 6426 @src 13:48962:50707  \"function _arb(...\"\n            function fun_arb(var_factory, var_factory1, var_input, var_output, var_to, var_amountIn) -> var_amountOut\n            {\n                /// @src 13:49316:49356  \"OpenMevLibrary.sortTokens(output, input)\"\n                let expr_6254_component, expr_component := fun_sortTokens(var_output, var_input)\n                /// @src 13:49377:49428  \"OpenMevLibrary._asmPairFor(factory, token0, token1)\"\n                let expr := fun_asmPairFor(var_factory, expr_6254_component, expr_component)\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 13:49454:49470  \"output == token0\" */ var_output, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _1)\n                /// @src 13:49454:49470  \"output == token0\"\n                let expr_1 := eq(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _2, and(/** @src 13:49454:49470  \"output == token0\" */ expr_6254_component, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _1))\n                /// @src 13:49546:49580  \"IUniswapV2Pair(pair).getReserves()\"\n                let _3 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                /// @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\"\n                let _4 := shl(226, 0x0240bc6b)\n                /// @src 13:49546:49580  \"IUniswapV2Pair(pair).getReserves()\"\n                mstore(_3, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ _4)\n                /// @src 13:49546:49580  \"IUniswapV2Pair(pair).getReserves()\"\n                let _5 := 96\n                let _6 := staticcall(gas(), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 13:49546:49566  \"IUniswapV2Pair(pair)\" */ expr, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _1), /** @src 13:49546:49580  \"IUniswapV2Pair(pair).getReserves()\" */ _3, 4, _3, _5)\n                if iszero(_6) { revert_forward() }\n                let expr_6280_component := 0\n                let expr_6280_component_1 := expr_6280_component\n                if _6\n                {\n                    let _7 := _5\n                    if gt(_5, returndatasize()) { _7 := returndatasize() }\n                    finalize_allocation(_3, _7)\n                    let expr_component_1, expr_component_2, expr_component_3 := abi_decode_uint112t_uint112t_uint32_fromMemory(_3, add(_3, _7))\n                    expr_6280_component := expr_component_1\n                    expr_6280_component_1 := expr_component_2\n                }\n                /// @src 13:49636:49691  \"isReverse ? (reserve0, reserve1) : (reserve1, reserve0)\"\n                let expr_6293_component := /** @src 13:49546:49580  \"IUniswapV2Pair(pair).getReserves()\" */ 0\n                let expr_6293_component_1 := expr_6293_component\n                /// @src 13:49636:49691  \"isReverse ? (reserve0, reserve1) : (reserve1, reserve0)\"\n                switch expr_1\n                case 0 {\n                    expr_6293_component := expr_6280_component_1\n                    expr_6293_component_1 := expr_6280_component\n                }\n                default {\n                    expr_6293_component := expr_6280_component\n                    expr_6293_component_1 := expr_6280_component_1\n                }\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let _8 := 0xffffffffffffffffffffffffffff\n                /// @src 13:49717:49777  \"OpenMevLibrary.getAmountOut(amountIn, reserveIn, reserveOut)\"\n                let expr_2 := fun_getAmountOut(var_amountIn, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 13:49717:49777  \"OpenMevLibrary.getAmountOut(amountIn, reserveIn, reserveOut)\" */ expr_6293_component, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _8), and(/** @src 13:49717:49777  \"OpenMevLibrary.getAmountOut(amountIn, reserveIn, reserveOut)\" */ expr_6293_component_1, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _8))\n                /// @src 13:49830:49838  \"amountIn\"\n                fun_safeTransfer(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _2, /** @src 13:49830:49838  \"amountIn\" */ expr, var_amountIn)\n                /// @src 13:49892:49953  \"isReverse ? (uint256(0), amountOut) : (amountOut, uint256(0))\"\n                let expr_6330_component := /** @src 13:49546:49580  \"IUniswapV2Pair(pair).getReserves()\" */ 0\n                let expr_6330_component_1 := expr_6330_component\n                /// @src 13:49892:49953  \"isReverse ? (uint256(0), amountOut) : (amountOut, uint256(0))\"\n                switch expr_1\n                case 0 {\n                    expr_6330_component := expr_2\n                    expr_6330_component_1 := /** @src 13:49546:49580  \"IUniswapV2Pair(pair).getReserves()\" */ 0\n                }\n                default /// @src 13:49892:49953  \"isReverse ? (uint256(0), amountOut) : (amountOut, uint256(0))\"\n                {\n                    expr_6330_component := /** @src 13:49546:49580  \"IUniswapV2Pair(pair).getReserves()\" */ 0\n                    /// @src 13:49892:49953  \"isReverse ? (uint256(0), amountOut) : (amountOut, uint256(0))\"\n                    expr_6330_component_1 := expr_2\n                }\n                /// @src 13:50002:50004  \"to\"\n                fun_asmSwap(expr, expr_6330_component, expr_6330_component_1, var_to)\n                /// @src 13:50137:50163  \"isReverse ? output : input\"\n                let expr_3 := /** @src 13:49546:49580  \"IUniswapV2Pair(pair).getReserves()\" */ 0\n                /// @src 13:50137:50163  \"isReverse ? output : input\"\n                switch expr_1\n                case 0 { expr_3 := var_input }\n                default { expr_3 := var_output }\n                /// @src 13:50165:50191  \"isReverse ? input : output\"\n                let expr_4 := /** @src 13:49546:49580  \"IUniswapV2Pair(pair).getReserves()\" */ 0\n                /// @src 13:50165:50191  \"isReverse ? input : output\"\n                switch expr_1\n                case 0 { expr_4 := var_output }\n                default { expr_4 := var_input }\n                /// @src 13:50100:50192  \"OpenMevLibrary._asmPairFor(factory1, isReverse ? output : input, isReverse ? input : output)\"\n                let expr_5 := fun_asmPairFor(var_factory1, expr_3, expr_4)\n                /// @src 13:50257:50291  \"IUniswapV2Pair(pair).getReserves()\"\n                let _9 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                /// @src 13:50257:50291  \"IUniswapV2Pair(pair).getReserves()\"\n                mstore(_9, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ _4)\n                /// @src 13:50257:50291  \"IUniswapV2Pair(pair).getReserves()\"\n                let _10 := staticcall(gas(), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 13:50257:50277  \"IUniswapV2Pair(pair)\" */ expr_5, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _1), /** @src 13:50257:50291  \"IUniswapV2Pair(pair).getReserves()\" */ _9, /** @src 13:49546:49580  \"IUniswapV2Pair(pair).getReserves()\" */ 4, /** @src 13:50257:50291  \"IUniswapV2Pair(pair).getReserves()\" */ _9, /** @src 13:49546:49580  \"IUniswapV2Pair(pair).getReserves()\" */ _5)\n                /// @src 13:50257:50291  \"IUniswapV2Pair(pair).getReserves()\"\n                if iszero(_10) { revert_forward() }\n                let expr_6366_component := /** @src 13:49546:49580  \"IUniswapV2Pair(pair).getReserves()\" */ 0\n                let expr_6366_component_1 := expr_6366_component\n                /// @src 13:50257:50291  \"IUniswapV2Pair(pair).getReserves()\"\n                if _10\n                {\n                    let _11 := /** @src 13:49546:49580  \"IUniswapV2Pair(pair).getReserves()\" */ _5\n                    /// @src 13:50257:50291  \"IUniswapV2Pair(pair).getReserves()\"\n                    if gt(/** @src 13:49546:49580  \"IUniswapV2Pair(pair).getReserves()\" */ _5, /** @src 13:50257:50291  \"IUniswapV2Pair(pair).getReserves()\" */ returndatasize()) { _11 := returndatasize() }\n                    finalize_allocation(_9, _11)\n                    let expr_component_4, expr_component_5, expr_component_6 := abi_decode_uint112t_uint112t_uint32_fromMemory(_9, add(_9, _11))\n                    expr_6366_component := expr_component_4\n                    expr_6366_component_1 := expr_component_5\n                }\n                /// @src 13:50347:50402  \"isReverse ? (reserve1, reserve0) : (reserve0, reserve1)\"\n                let expr_6379_component := /** @src 13:49546:49580  \"IUniswapV2Pair(pair).getReserves()\" */ 0\n                let expr_6379_component_1 := expr_6379_component\n                /// @src 13:50347:50402  \"isReverse ? (reserve1, reserve0) : (reserve0, reserve1)\"\n                switch expr_1\n                case 0 {\n                    expr_6379_component := expr_6366_component\n                    expr_6379_component_1 := expr_6366_component_1\n                }\n                default {\n                    expr_6379_component := expr_6366_component_1\n                    expr_6379_component_1 := expr_6366_component\n                }\n                /// @src 13:50416:50488  \"amountOut = OpenMevLibrary.getAmountOut(amountIn, reserveIn, reserveOut)\"\n                var_amountOut := /** @src 13:50428:50488  \"OpenMevLibrary.getAmountOut(amountIn, reserveIn, reserveOut)\" */ fun_getAmountOut(expr_2, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 13:50428:50488  \"OpenMevLibrary.getAmountOut(amountIn, reserveIn, reserveOut)\" */ expr_6379_component, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _8), and(/** @src 13:50428:50488  \"OpenMevLibrary.getAmountOut(amountIn, reserveIn, reserveOut)\" */ expr_6379_component_1, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _8))\n                /// @src 13:50541:50549  \"amountIn\"\n                fun_safeTransfer(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(/** @src 13:50509:50521  \"ERC20(input)\" */ var_input, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ _1), /** @src 13:50541:50549  \"amountIn\" */ expr_5, expr_2)\n                /// @src 13:50587:50648  \"isReverse ? (amountOut, uint256(0)) : (uint256(0), amountOut)\"\n                let expr_6415_component := /** @src 13:49546:49580  \"IUniswapV2Pair(pair).getReserves()\" */ 0\n                let expr_6415_component_1 := expr_6415_component\n                /// @src 13:50587:50648  \"isReverse ? (amountOut, uint256(0)) : (uint256(0), amountOut)\"\n                switch expr_1\n                case 0 {\n                    expr_6415_component := /** @src 13:49546:49580  \"IUniswapV2Pair(pair).getReserves()\" */ expr_6415_component\n                    /// @src 13:50587:50648  \"isReverse ? (amountOut, uint256(0)) : (uint256(0), amountOut)\"\n                    expr_6415_component_1 := var_amountOut\n                }\n                default {\n                    expr_6415_component := var_amountOut\n                    expr_6415_component_1 := /** @src 13:49546:49580  \"IUniswapV2Pair(pair).getReserves()\" */ 0\n                }\n                /// @src 13:50697:50699  \"to\"\n                fun_asmSwap(expr_5, expr_6415_component, expr_6415_component_1, var_to)\n            }\n            /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n            function update_storage_value_offsett_bool_to_bool(slot)\n            {\n                sstore(slot, or(and(sload(slot), not(255)), /** @src 13:52625:52629  \"true\" */ 0x01))\n            }\n            /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n            function abi_decode_array_address_dyn_fromMemory(headStart, dataEnd) -> value0\n            {\n                let _1 := 32\n                if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n                let offset := mload(headStart)\n                if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n                let _2 := add(headStart, offset)\n                if iszero(slt(add(_2, 0x1f), dataEnd))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let _3 := mload(_2)\n                let _4 := array_allocation_size_array_address_dyn(_3)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _4)\n                let dst := memPtr\n                mstore(memPtr, _3)\n                dst := add(memPtr, _1)\n                let srcEnd := add(add(_2, shl(5, _3)), _1)\n                if gt(srcEnd, dataEnd)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let src := add(_2, _1)\n                for { } lt(src, srcEnd) { src := add(src, _1) }\n                {\n                    let value := mload(src)\n                    validator_revert_address(value)\n                    mstore(dst, value)\n                    dst := add(dst, _1)\n                }\n                value0 := memPtr\n            }\n            /// @ast-id 6637 @src 13:52884:53239  \"function _encode(...\"\n            function fun_encode(var_a, var_b, var_c) -> var_mpos\n            {\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let memPtr := mload(64)\n                /// @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\"\n                let newFreePtr := add(memPtr, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 96)\n                /// @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\"\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 64, /** @src 12:719:761  \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\" */ newFreePtr)\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                mstore(memPtr, /** @src 13:53041:53043  \"60\" */ 0x3c)\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                let dataStart := add(memPtr, 32)\n                calldatacopy(dataStart, calldatasize(), 64)\n                /// @src 13:53054:53212  \"assembly {...\"\n                mstore(dataStart, shl(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 96, /** @src 13:53054:53212  \"assembly {...\" */ var_a))\n                mstore(add(memPtr, 52), shl(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 96, /** @src 13:53054:53212  \"assembly {...\" */ var_b))\n                mstore(add(memPtr, 72), shl(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 96, /** @src 13:53054:53212  \"assembly {...\" */ var_c))\n                /// @src 13:53221:53232  \"return data\"\n                var_mpos := memPtr\n            }\n            /// @ast-id 6651 @src 13:53482:53798  \"function _decode(bytes memory data)...\"\n            function fun_decode(var_data_mpos) -> var_a, var_b, var_c\n            {\n                /// @src 13:53658:53792  \"assembly {...\"\n                var_a := mload(add(var_data_mpos, 20))\n                var_b := mload(add(var_data_mpos, 40))\n                var_c := mload(add(var_data_mpos, 60))\n            }\n            /// @ast-id 7555 @src 15:744:1040  \"function safeTransferETH(address to, uint256 amount) internal {...\"\n            function fun_safeTransferETH(var_to, var_amount)\n            {\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                if iszero(/** @src 15:839:984  \"assembly {...\" */ call(gas(), var_to, var_amount, /** @src -1:-1:-1 */ _1, _1, _1, _1))\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                {\n                    revert(/** @src -1:-1:-1 */ _1, _1)\n                }\n            }\n            /// @ast-id 7577 @src 15:1047:2620  \"function safeTransferFrom(...\"\n            function fun_safeTransferFrom(var_token_7558_address, var_from, var_to, var_amount)\n            {\n                /// @src 15:1208:2563  \"assembly {...\"\n                let usr$freeMemoryPointer := mload(0x40)\n                mstore(usr$freeMemoryPointer, shl(224, 0x23b872dd))\n                mstore(add(usr$freeMemoryPointer, 4), var_from)\n                mstore(add(usr$freeMemoryPointer, 36), var_to)\n                mstore(add(usr$freeMemoryPointer, 68), var_amount)\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                if iszero(/** @src 15:1208:2563  \"assembly {...\" */ and(or(and(eq(mload(/** @src -1:-1:-1 */ 0), /** @src 15:1208:2563  \"assembly {...\" */ 1), gt(returndatasize(), 31)), iszero(returndatasize())), call(gas(), var_token_7558_address, /** @src -1:-1:-1 */ 0, /** @src 15:1208:2563  \"assembly {...\" */ usr$freeMemoryPointer, 100, /** @src -1:-1:-1 */ 0, /** @src 15:1208:2563  \"assembly {...\" */ 32)))\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n            }\n            /// @ast-id 7597 @src 15:2626:4082  \"function safeTransfer(...\"\n            function fun_safeTransfer_16279(var_token_address, var_amount)\n            {\n                /// @src 15:2761:4030  \"assembly {...\"\n                let usr$freeMemoryPointer := mload(0x40)\n                mstore(usr$freeMemoryPointer, shl(224, 0xa9059cbb))\n                mstore(add(usr$freeMemoryPointer, 4), /** @src 13:1752:1794  \"0xF5BCE5077908a1b7370B9ae04AdC565EBd643966\" */ 0xf5bce5077908a1b7370b9ae04adc565ebd643966)\n                /// @src 15:2761:4030  \"assembly {...\"\n                mstore(add(usr$freeMemoryPointer, 36), var_amount)\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                if iszero(/** @src 15:2761:4030  \"assembly {...\" */ and(or(and(eq(mload(/** @src -1:-1:-1 */ 0), /** @src 15:2761:4030  \"assembly {...\" */ 1), gt(returndatasize(), 31)), iszero(returndatasize())), call(gas(), var_token_address, /** @src -1:-1:-1 */ 0, /** @src 15:2761:4030  \"assembly {...\" */ usr$freeMemoryPointer, 68, /** @src -1:-1:-1 */ 0, /** @src 15:2761:4030  \"assembly {...\" */ 32)))\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n            }\n            /// @ast-id 7597 @src 15:2626:4082  \"function safeTransfer(...\"\n            function fun_safeTransfer_16321(var_to, var_amount)\n            {\n                /// @src 15:2761:4030  \"assembly {...\"\n                let usr$freeMemoryPointer := mload(0x40)\n                mstore(usr$freeMemoryPointer, shl(224, 0xa9059cbb))\n                mstore(add(usr$freeMemoryPointer, 4), var_to)\n                mstore(add(usr$freeMemoryPointer, 36), var_amount)\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                if iszero(/** @src 15:2761:4030  \"assembly {...\" */ and(or(and(eq(mload(/** @src -1:-1:-1 */ 0), /** @src 15:2761:4030  \"assembly {...\" */ 1), gt(returndatasize(), 31)), iszero(returndatasize())), call(gas(), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2, /** @src -1:-1:-1 */ 0, /** @src 15:2761:4030  \"assembly {...\" */ usr$freeMemoryPointer, 68, /** @src -1:-1:-1 */ 0, /** @src 15:2761:4030  \"assembly {...\" */ 32)))\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n            }\n            /// @ast-id 7597 @src 15:2626:4082  \"function safeTransfer(...\"\n            function fun_safeTransfer(var_token_address, var_to, var_amount)\n            {\n                /// @src 15:2761:4030  \"assembly {...\"\n                let usr$freeMemoryPointer := mload(0x40)\n                mstore(usr$freeMemoryPointer, shl(224, 0xa9059cbb))\n                mstore(add(usr$freeMemoryPointer, 4), var_to)\n                mstore(add(usr$freeMemoryPointer, 36), var_amount)\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                if iszero(/** @src 15:2761:4030  \"assembly {...\" */ and(or(and(eq(mload(/** @src -1:-1:-1 */ 0), /** @src 15:2761:4030  \"assembly {...\" */ 1), gt(returndatasize(), 31)), iszero(returndatasize())), call(gas(), var_token_address, /** @src -1:-1:-1 */ 0, /** @src 15:2761:4030  \"assembly {...\" */ usr$freeMemoryPointer, 68, /** @src -1:-1:-1 */ 0, /** @src 15:2761:4030  \"assembly {...\" */ 32)))\n                /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n            }\n            /// @ast-id 7673 @src 16:1207:1296  \"function _onlyOwner() private view {...\"\n            function fun_onlyOwner()\n            {\n                /// @src 16:1252:1289  \"if (!isOwner()) revert Unauthorized()\"\n                if /** @src 16:1256:1266  \"!isOwner()\" */ iszero(/** @src 16:1666:1686  \"msg.sender == _owner\" */ eq(/** @src 16:1666:1676  \"msg.sender\" */ caller(), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ and(sload(/** @src -1:-1:-1 */ 0), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ sub(shl(160, 1), 1))))\n                /// @src 16:1252:1289  \"if (!isOwner()) revert Unauthorized()\"\n                {\n                    /// @src 16:1275:1289  \"Unauthorized()\"\n                    let _1 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mload(64)\n                    /// @src 16:1275:1289  \"Unauthorized()\"\n                    mstore(_1, /** @src 16:2804:2818  \"Unauthorized()\" */ shl(232, 8565801))\n                    /// @src 16:1275:1289  \"Unauthorized()\"\n                    revert(_1, 4)\n                }\n            }\n            /// @ast-id 7770 @src 17:434:677  \"function mul256x256(uint256 a, uint256 b) internal pure returns (uint256 r0, uint256 r1) {...\"\n            function fun_mul256x256(var_a, var_b) -> var_r0, var_r1\n            {\n                /// @src 17:533:671  \"assembly {...\"\n                let usr$mm := mulmod(var_a, var_b, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ not(0))\n                /// @src 17:533:671  \"assembly {...\"\n                var_r0 := mul(var_a, var_b)\n                var_r1 := sub(sub(usr$mm, var_r0), lt(usr$mm, var_r0))\n            }\n            /// @ast-id 7788 @src 17:2846:3112  \"function add512x512(...\"\n            function fun_add512x512(var_a0, var_a1, var_b0, var_b1) -> var_r0, var_r1\n            {\n                /// @src 17:3009:3106  \"assembly {...\"\n                var_r0 := add(var_a0, var_b0)\n                var_r1 := add(add(var_a1, var_b1), lt(var_r0, var_a0))\n            }\n            /// @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\"\n            function shift_right_uint256_uint8(value) -> result\n            { result := shr(1, value) }\n            /// @ast-id 8015 @src 17:11706:14598  \"function sqrt512(uint256 a0, uint256 a1) internal pure returns (uint256 s) {...\"\n            function fun_sqrt512(var_a0, var_a1) -> var_s\n            {\n                /// @src 17:11845:11876  \"if (a1 == 0) return sqrt256(a0)\"\n                if /** @src 17:11849:11856  \"a1 == 0\" */ iszero(var_a1)\n                /// @src 17:11845:11876  \"if (a1 == 0) return sqrt256(a0)\"\n                {\n                    /// @src 17:11858:11876  \"return sqrt256(a0)\"\n                    var_s := /** @src 17:11865:11876  \"sqrt256(a0)\" */ fun_sqrt256(var_a0)\n                    /// @src 17:11858:11876  \"return sqrt256(a0)\"\n                    leave\n                }\n                /// @src 17:11976:13292  \"assembly {...\"\n                let usr$digits := shl(7, lt(var_a1, shl(128, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 1)))\n                /// @src 17:11976:13292  \"assembly {...\"\n                let var_a1_1 := shl(usr$digits, var_a1)\n                let usr$digits_1 := shl(6, lt(var_a1_1, shl(192, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 1)))\n                /// @src 17:11976:13292  \"assembly {...\"\n                let var_a1_2 := shl(usr$digits_1, var_a1_1)\n                let usr$digits_2 := shl(5, lt(var_a1_2, shl(224, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 1)))\n                /// @src 17:11976:13292  \"assembly {...\"\n                let var_a1_3 := shl(usr$digits_2, var_a1_2)\n                let usr$digits_3 := shl(4, lt(var_a1_3, shl(240, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 1)))\n                /// @src 17:11976:13292  \"assembly {...\"\n                let var_a1_4 := shl(usr$digits_3, var_a1_3)\n                let usr$digits_4 := shl(3, lt(var_a1_4, shl(248, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 1)))\n                /// @src 17:11976:13292  \"assembly {...\"\n                let var_a1_5 := shl(usr$digits_4, var_a1_4)\n                let usr$digits_5 := shl(2, lt(var_a1_5, shl(252, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 1)))\n                /// @src 17:11976:13292  \"assembly {...\"\n                let var_a1_6 := shl(usr$digits_5, var_a1_5)\n                let usr$digits_6 := shl(1, lt(var_a1_6, shl(254, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 1)))\n                /// @src 17:11976:13292  \"assembly {...\"\n                let var_shift := add(add(add(add(add(add(usr$digits, usr$digits_1), usr$digits_2), usr$digits_3), usr$digits_4), usr$digits_5), usr$digits_6)\n                let var_a1_7 := or(shl(usr$digits_6, var_a1_6), shr(sub(256, var_shift), var_a0))\n                let var_a0_1 := shl(var_shift, var_a0)\n                /// @src 17:13315:13326  \"sqrt256(a1)\"\n                let expr := fun_sqrt256(var_a1_7)\n                /// @src 17:13349:13363  \"a1 - (sp * sp)\"\n                let expr_1 := checked_sub_uint256(var_a1_7, /** @src 17:13355:13362  \"sp * sp\" */ checked_mul_uint256(expr, expr))\n                /// @src 17:11976:13292  \"assembly {...\"\n                let _1 := 128\n                /// @src 17:13457:14245  \"assembly {...\"\n                let var_nom := or(shl(/** @src 17:11976:13292  \"assembly {...\" */ _1, /** @src 17:13457:14245  \"assembly {...\" */ expr_1), shr(/** @src 17:11976:13292  \"assembly {...\" */ _1, /** @src 17:13457:14245  \"assembly {...\" */ var_a0_1))\n                let var_denom := shl(/** @src 17:11976:13292  \"assembly {...\" */ 1, /** @src 17:13457:14245  \"assembly {...\" */ expr)\n                let usr$carry := shr(/** @src 17:11976:13292  \"assembly {...\" */ _1, /** @src 17:13457:14245  \"assembly {...\" */ expr_1)\n                let usr$x := sub(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 0, /** @src 17:13457:14245  \"assembly {...\" */ usr$carry)\n                let var_u := add(mod(var_nom, var_denom), add(usr$carry, mod(usr$x, var_denom)))\n                let var_q := add(add(div(var_nom, var_denom), div(usr$x, var_denom)), div(var_u, var_denom))\n                let var_u_1 := mod(var_u, var_denom)\n                /// @src 17:14279:14298  \"s = (sp << 128) + q\"\n                var_s := /** @src 12:1287:1291  \"1000\" */ add(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ shl(/** @src 17:11976:13292  \"assembly {...\" */ _1, /** @src 17:14284:14293  \"sp << 128\" */ expr), /** @src 12:1287:1291  \"1000\" */ var_q)\n                /// @src 17:14434:14442  \"q >> 128\"\n                let expr_2 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ shr(/** @src 17:11976:13292  \"assembly {...\" */ _1, /** @src 17:14434:14442  \"q >> 128\" */ var_q)\n                /// @src 17:14447:14455  \"u >> 128\"\n                let _2 := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ shr(/** @src 17:11976:13292  \"assembly {...\" */ _1, /** @src 17:14447:14455  \"u >> 128\" */ var_u_1)\n                /// @src 17:14433:14499  \"(q >> 128) > (u >> 128) || (((q >> 128) == (u >> 128)) && rl < rr)\"\n                let expr_3 := /** @src 17:14433:14456  \"(q >> 128) > (u >> 128)\" */ gt(expr_2, _2)\n                /// @src 17:14433:14499  \"(q >> 128) > (u >> 128) || (((q >> 128) == (u >> 128)) && rl < rr)\"\n                if iszero(expr_3)\n                {\n                    /// @src 17:14461:14498  \"((q >> 128) == (u >> 128)) && rl < rr\"\n                    let expr_4 := /** @src 17:14462:14486  \"(q >> 128) == (u >> 128)\" */ eq(expr_2, _2)\n                    /// @src 17:14461:14498  \"((q >> 128) == (u >> 128)) && rl < rr\"\n                    if expr_4\n                    {\n                        expr_4 := /** @src 17:14491:14498  \"rl < rr\" */ lt(/** @src 17:14327:14381  \"(u << 128) | (a0 & 0xffffffffffffffffffffffffffffffff)\" */ or(/** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ shl(/** @src 17:11976:13292  \"assembly {...\" */ _1, /** @src 17:14328:14336  \"u << 128\" */ var_u_1), /** @src 17:14341:14380  \"a0 & 0xffffffffffffffffffffffffffffffff\" */ and(var_a0_1, /** @src 17:14346:14380  \"0xffffffffffffffffffffffffffffffff\" */ 0xffffffffffffffffffffffffffffffff)), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ mul(/** @src 17:14409:14414  \"q * q\" */ var_q, var_q))\n                    }\n                    /// @src 17:14433:14499  \"(q >> 128) > (u >> 128) || (((q >> 128) == (u >> 128)) && rl < rr)\"\n                    expr_3 := expr_4\n                }\n                /// @src 17:14429:14543  \"if ((q >> 128) > (u >> 128) || (((q >> 128) == (u >> 128)) && rl < rr)) {...\"\n                if expr_3\n                {\n                    /// @src 17:14519:14528  \"s = s - 1\"\n                    var_s := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ add(/** @src 17:14523:14528  \"s - 1\" */ var_s, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ not(0))\n                }\n                /// @src 17:14557:14581  \"return s >> (shift >> 1)\"\n                var_s := /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ shr(shr(/** @src 17:11976:13292  \"assembly {...\" */ 1, /** @src 17:14570:14580  \"shift >> 1\" */ var_shift), /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ var_s)\n            }\n            /// @ast-id 7895 @src 17:9722:11283  \"function sqrt256(uint256 x) internal pure returns (uint256 s) {...\"\n            function fun_sqrt256(var_x) -> var_s\n            {\n                /// @src 17:9794:9814  \"if (x == 0) return 0\"\n                if /** @src 17:9798:9804  \"x == 0\" */ iszero(var_x)\n                /// @src 17:9794:9814  \"if (x == 0) return 0\"\n                {\n                    /// @src 17:9806:9814  \"return 0\"\n                    var_s := /** @src 17:9803:9804  \"0\" */ 0x00\n                    /// @src 17:9806:9814  \"return 0\"\n                    leave\n                }\n                /// @src 17:9825:10894  \"assembly {...\"\n                let _1 := /** @src 17:11976:13292  \"assembly {...\" */ shl(128, /** @src 13:562:54929  \"contract OpenMevRouter is IFlashBorrower, IOpenMevRouter, TwoStepOwnable {...\" */ 1)\n                /// @src 17:9825:10894  \"assembly {...\"\n                let usr$cmp := or(gt(var_x, _1), eq(var_x, _1))\n                let usr$xAux := sar(shl(7, usr$cmp), var_x)\n                let _2 := 0x10000000000000000\n                let usr$cmp_1 := or(gt(usr$xAux, _2), eq(usr$xAux, _2))\n                let usr$xAux_1 := sar(shl(6, usr$cmp_1), usr$xAux)\n                let _3 := 0x100000000\n                let usr$cmp_2 := or(gt(usr$xAux_1, _3), eq(usr$xAux_1, _3))\n                let usr$xAux_2 := sar(shl(5, usr$cmp_2), usr$xAux_1)\n                let _4 := 0x10000\n                let usr$cmp_3 := or(gt(usr$xAux_2, _4), eq(usr$xAux_2, _4))\n                let usr$xAux_3 := sar(shl(4, usr$cmp_3), usr$xAux_2)\n                let _5 := 0x100\n                let usr$cmp_4 := or(gt(usr$xAux_3, _5), eq(usr$xAux_3, _5))\n                let usr$xAux_4 := sar(shl(3, usr$cmp_4), usr$xAux_3)\n                let usr$cmp_5 := or(gt(usr$xAux_4, 16), eq(usr$xAux_4, 16))\n                let usr$xAux_5 := sar(shl(2, usr$cmp_5), usr$xAux_4)\n                let var_s_1 := shl(shl(1, or(gt(usr$xAux_5, 8), eq(usr$xAux_5, 8))), shl(shl(1, usr$cmp_5), shl(shl(2, usr$cmp_4), shl(shl(3, usr$cmp_3), shl(shl(4, usr$cmp_2), shl(shl(5, usr$cmp_1), shl(shl(6, usr$cmp), 1)))))))\n                /// @src 17:10932:10948  \"(s + x / s) >> 1\"\n                let expr := shift_right_uint256_uint8(/** @src 12:1287:1291  \"1000\" */ add(var_s_1, /** @src 17:10937:10942  \"x / s\" */ checked_div_uint256(var_x, var_s_1)))\n                /// @src 17:10966:10982  \"(s + x / s) >> 1\"\n                let expr_1 := shift_right_uint256_uint8(/** @src 12:1287:1291  \"1000\" */ add(expr, /** @src 17:10971:10976  \"x / s\" */ checked_div_uint256(var_x, expr)))\n                /// @src 17:11000:11016  \"(s + x / s) >> 1\"\n                let expr_2 := shift_right_uint256_uint8(/** @src 12:1287:1291  \"1000\" */ add(expr_1, /** @src 17:11005:11010  \"x / s\" */ checked_div_uint256(var_x, expr_1)))\n                /// @src 17:11034:11050  \"(s + x / s) >> 1\"\n                let expr_3 := shift_right_uint256_uint8(/** @src 12:1287:1291  \"1000\" */ add(expr_2, /** @src 17:11039:11044  \"x / s\" */ checked_div_uint256(var_x, expr_2)))\n                /// @src 17:11068:11084  \"(s + x / s) >> 1\"\n                let expr_4 := shift_right_uint256_uint8(/** @src 12:1287:1291  \"1000\" */ add(expr_3, /** @src 17:11073:11078  \"x / s\" */ checked_div_uint256(var_x, expr_3)))\n                /// @src 17:11102:11118  \"(s + x / s) >> 1\"\n                let expr_5 := shift_right_uint256_uint8(/** @src 12:1287:1291  \"1000\" */ add(expr_4, /** @src 17:11107:11112  \"x / s\" */ checked_div_uint256(var_x, expr_4)))\n                /// @src 17:11136:11152  \"(s + x / s) >> 1\"\n                let expr_6 := shift_right_uint256_uint8(/** @src 12:1287:1291  \"1000\" */ add(expr_5, /** @src 17:11141:11146  \"x / s\" */ checked_div_uint256(var_x, expr_5)))\n                /// @src 17:11194:11199  \"x / s\"\n                let expr_7 := checked_div_uint256(var_x, expr_6)\n                /// @src 17:11220:11266  \"s >= roundedDownResult ? roundedDownResult : s\"\n                let expr_8 := /** @src 17:9803:9804  \"0\" */ 0x00\n                /// @src 17:11220:11266  \"s >= roundedDownResult ? roundedDownResult : s\"\n                switch /** @src 17:11220:11242  \"s >= roundedDownResult\" */ iszero(lt(expr_6, expr_7))\n                case /** @src 17:11220:11266  \"s >= roundedDownResult ? roundedDownResult : s\" */ 0 { expr_8 := expr_6 }\n                default { expr_8 := expr_7 }\n                /// @src 17:11213:11266  \"return s >= roundedDownResult ? roundedDownResult : s\"\n                var_s := expr_8\n            }\n        }\n        data \".metadata\" hex\"a164736f6c634300080f000a\"\n    }\n}\n",
  "ast": {
    "absolutePath": "OpenMevRouter.sol",
    "id": 6711,
    "exportedSymbols": {
      "ERC20": [
        435
      ],
      "IBentoBoxV1": [
        477
      ],
      "IFlashBorrower": [
        452
      ],
      "ILendingPool": [
        507
      ],
      "IOpenMevRouter": [
        1035
      ],
      "IProtocolDataProvider": [
        1045
      ],
      "IUniswapV2Factory": [
        1108
      ],
      "IUniswapV2Pair": [
        1350
      ],
      "IWETH": [
        1763
      ],
      "OpenMevLibrary": [
        3158
      ],
      "OpenMevRouter": [
        6710
      ],
      "SafeTransferLib": [
        7618
      ],
      "TwoStepOwnable": [
        7754
      ],
      "Uint512": [
        8016
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:54891:13",
    "nodes": [
      {
        "id": 3160,
        "nodeType": "PragmaDirective",
        "src": "39:32:13",
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".13",
          "<",
          "0.9",
          ".0"
        ]
      },
      {
        "id": 3161,
        "nodeType": "ImportDirective",
        "src": "73:21:13",
        "absolutePath": "ERC20.sol",
        "file": "./ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6711,
        "sourceUnit": 436,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3162,
        "nodeType": "ImportDirective",
        "src": "95:30:13",
        "absolutePath": "TwoStepOwnable.sol",
        "file": "./TwoStepOwnable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6711,
        "sourceUnit": 7755,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3163,
        "nodeType": "ImportDirective",
        "src": "126:22:13",
        "absolutePath": "IWETH9.sol",
        "file": "./IWETH9.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6711,
        "sourceUnit": 1764,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3164,
        "nodeType": "ImportDirective",
        "src": "149:30:13",
        "absolutePath": "OpenMevLibrary.sol",
        "file": "./OpenMevLibrary.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6711,
        "sourceUnit": 3159,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3166,
        "nodeType": "ImportDirective",
        "src": "180:56:13",
        "absolutePath": "SafeTransferLib.sol",
        "file": "./SafeTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6711,
        "sourceUnit": 7619,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3165,
              "name": "SafeTransferLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 7618,
              "src": "189:15:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3167,
        "nodeType": "ImportDirective",
        "src": "237:28:13",
        "absolutePath": "ILendingPool.sol",
        "file": "./ILendingPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6711,
        "sourceUnit": 508,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3168,
        "nodeType": "ImportDirective",
        "src": "266:25:13",
        "absolutePath": "IBentoBox.sol",
        "file": "./IBentoBox.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6711,
        "sourceUnit": 478,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3169,
        "nodeType": "ImportDirective",
        "src": "292:30:13",
        "absolutePath": "IOpenMevRouter.sol",
        "file": "./IOpenMevRouter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6711,
        "sourceUnit": 1036,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3170,
        "nodeType": "ImportDirective",
        "src": "323:37:13",
        "absolutePath": "IProtocolDataProvider.sol",
        "file": "./IProtocolDataProvider.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6711,
        "sourceUnit": 1046,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6710,
        "nodeType": "ContractDefinition",
        "src": "562:54367:13",
        "nodes": [
          {
            "id": 3181,
            "nodeType": "UsingForDirective",
            "src": "641:32:13",
            "global": false,
            "libraryName": {
              "id": 3178,
              "name": "SafeTransferLib",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7618,
              "src": "647:15:13"
            },
            "typeName": {
              "id": 3180,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3179,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 435,
                "src": "667:5:13"
              },
              "referencedDeclaration": 435,
              "src": "667:5:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$435",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "id": 3183,
            "nodeType": "ErrorDefinition",
            "src": "733:16:13",
            "errorSelector": "203d82d8",
            "name": "Expired",
            "nameLocation": "739:7:13",
            "parameters": {
              "id": 3182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "746:2:13"
            }
          },
          {
            "id": 3185,
            "nodeType": "ErrorDefinition",
            "src": "754:17:13",
            "errorSelector": "df957883",
            "name": "NoTokens",
            "nameLocation": "760:8:13",
            "parameters": {
              "id": 3184,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "768:2:13"
            }
          },
          {
            "id": 3187,
            "nodeType": "ErrorDefinition",
            "src": "776:19:13",
            "errorSelector": "caf861d0",
            "name": "NotPercent",
            "nameLocation": "782:10:13",
            "parameters": {
              "id": 3186,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "792:2:13"
            }
          },
          {
            "id": 3189,
            "nodeType": "ErrorDefinition",
            "src": "800:20:13",
            "errorSelector": "cfebf47b",
            "name": "NoReceivers",
            "nameLocation": "806:11:13",
            "parameters": {
              "id": 3188,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "817:2:13"
            }
          },
          {
            "id": 3191,
            "nodeType": "ErrorDefinition",
            "src": "825:20:13",
            "errorSelector": "20db8267",
            "name": "InvalidPath",
            "nameLocation": "831:11:13",
            "parameters": {
              "id": 3190,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "842:2:13"
            }
          },
          {
            "id": 3193,
            "nodeType": "ErrorDefinition",
            "src": "850:23:13",
            "errorSelector": "90b8ec18",
            "name": "TransferFailed",
            "nameLocation": "856:14:13",
            "parameters": {
              "id": 3192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "870:2:13"
            }
          },
          {
            "id": 3195,
            "nodeType": "ErrorDefinition",
            "src": "878:28:13",
            "errorSelector": "ef71d091",
            "name": "InsufficientBAmount",
            "nameLocation": "884:19:13",
            "parameters": {
              "id": 3194,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "903:2:13"
            }
          },
          {
            "id": 3197,
            "nodeType": "ErrorDefinition",
            "src": "911:28:13",
            "errorSelector": "8dc525d1",
            "name": "InsufficientAAmount",
            "nameLocation": "917:19:13",
            "parameters": {
              "id": 3196,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "936:2:13"
            }
          },
          {
            "id": 3199,
            "nodeType": "ErrorDefinition",
            "src": "944:29:13",
            "errorSelector": "a4de03c7",
            "name": "TokenIsFeeOnTransfer",
            "nameLocation": "950:20:13",
            "parameters": {
              "id": 3198,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "970:2:13"
            }
          },
          {
            "id": 3201,
            "nodeType": "ErrorDefinition",
            "src": "978:29:13",
            "errorSelector": "e1b0da4f",
            "name": "ExcessiveInputAmount",
            "nameLocation": "984:20:13",
            "parameters": {
              "id": 3200,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1004:2:13"
            }
          },
          {
            "id": 3203,
            "nodeType": "ErrorDefinition",
            "src": "1012:29:13",
            "errorSelector": "75c366a9",
            "name": "ExecuteNotAuthorized",
            "nameLocation": "1018:20:13",
            "parameters": {
              "id": 3202,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1038:2:13"
            }
          },
          {
            "id": 3205,
            "nodeType": "ErrorDefinition",
            "src": "1046:30:13",
            "errorSelector": "13be252b",
            "name": "InsufficientAllowance",
            "nameLocation": "1052:21:13",
            "parameters": {
              "id": 3204,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1073:2:13"
            }
          },
          {
            "id": 3207,
            "nodeType": "ErrorDefinition",
            "src": "1081:30:13",
            "errorSelector": "bb55fd27",
            "name": "InsufficientLiquidity",
            "nameLocation": "1087:21:13",
            "parameters": {
              "id": 3206,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1108:2:13"
            }
          },
          {
            "id": 3209,
            "nodeType": "ErrorDefinition",
            "src": "1116:33:13",
            "errorSelector": "42301c23",
            "name": "InsufficientOutputAmount",
            "nameLocation": "1122:24:13",
            "parameters": {
              "id": 3208,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1146:2:13"
            }
          },
          {
            "id": 3217,
            "nodeType": "EventDefinition",
            "src": "1155:70:13",
            "anonymous": false,
            "eventSelector": "8ed9d7f4b992b4476c7f5cee8895a6c9fe5a1601e771e630d67d5ed17d4656d5",
            "name": "MEV",
            "nameLocation": "1161:3:13",
            "parameters": {
              "id": 3216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3211,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1181:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3217,
                  "src": "1165:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3210,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1165:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3213,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1203:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3217,
                  "src": "1187:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3212,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1187:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3215,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1218:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3217,
                  "src": "1210:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3214,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1210:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1164:60:13"
            }
          },
          {
            "id": 3223,
            "nodeType": "EventDefinition",
            "src": "1230:57:13",
            "anonymous": false,
            "eventSelector": "137ac09e2fb89da2cbe32562b3e674e46bba7c473b3f71b5c1bd62f7ef3232ed",
            "name": "LoanError",
            "nameLocation": "1236:9:13",
            "parameters": {
              "id": 3222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3219,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1262:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3223,
                  "src": "1246:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3218,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1246:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3221,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "1277:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3223,
                  "src": "1269:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3220,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1269:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1245:41:13"
            }
          },
          {
            "id": 3231,
            "nodeType": "VariableDeclaration",
            "src": "1293:97:13",
            "constant": true,
            "mutability": "constant",
            "name": "SWAP_SELECTOR",
            "nameLocation": "1318:13:13",
            "scope": 6710,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 3224,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "1293:6:13",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "737761702875696e743235362c75696e743235362c616464726573732c627974657329",
                      "id": 3228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1351:37:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_022c0d9f14a579d1d17baf9fddaebffc4a661f18e5dbcdf9b78b0e655ef26681",
                        "typeString": "literal_string \"swap(uint256,uint256,address,bytes)\""
                      },
                      "value": "swap(uint256,uint256,address,bytes)"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_022c0d9f14a579d1d17baf9fddaebffc4a661f18e5dbcdf9b78b0e655ef26681",
                        "typeString": "literal_string \"swap(uint256,uint256,address,bytes)\""
                      }
                    ],
                    "id": 3227,
                    "name": "keccak256",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": -8,
                    "src": "1341:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                      "typeString": "function (bytes memory) pure returns (bytes32)"
                    }
                  },
                  "id": 3229,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "1341:48:13",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                ],
                "id": 3226,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1334:6:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_bytes4_$",
                  "typeString": "type(bytes4)"
                },
                "typeName": {
                  "id": 3225,
                  "name": "bytes4",
                  "nodeType": "ElementaryTypeName",
                  "src": "1334:6:13",
                  "typeDescriptions": {}
                }
              },
              "id": 3230,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1334:56:13",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 3234,
            "nodeType": "VariableDeclaration",
            "src": "1396:77:13",
            "constant": true,
            "mutability": "constant",
            "name": "WETH09",
            "nameLocation": "1422:6:13",
            "scope": 6710,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3232,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1396:7:13",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307843303261614133396232323346453844304130653543344632376541443930383343373536436332",
              "id": 3233,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1431:42:13",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
            },
            "visibility": "internal"
          },
          {
            "id": 3237,
            "nodeType": "VariableDeclaration",
            "src": "1479:85:13",
            "constant": true,
            "mutability": "constant",
            "name": "BACKUP_FACTORY",
            "nameLocation": "1505:14:13",
            "scope": 6710,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3235,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1479:7:13",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307835433639624565373031656638313461324236613345444434423136353243423963633561413666",
              "id": 3236,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1522:42:13",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f"
            },
            "visibility": "internal"
          },
          {
            "id": 3240,
            "nodeType": "VariableDeclaration",
            "src": "1592:91:13",
            "constant": true,
            "mutability": "constant",
            "name": "LENDING_POOL_ADDRESS",
            "nameLocation": "1618:20:13",
            "scope": 6710,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3238,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1592:7:13",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307837643237363864453332623062383062376133343534633036426441633934413639444463374139",
              "id": 3239,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1641:42:13",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9"
            },
            "visibility": "internal"
          },
          {
            "id": 3243,
            "nodeType": "VariableDeclaration",
            "src": "1718:76:13",
            "constant": true,
            "mutability": "constant",
            "name": "BENTO",
            "nameLocation": "1744:5:13",
            "scope": 6710,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3241,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1718:7:13",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307846354243453530373739303861316237333730423961653034416443353635454264363433393636",
              "id": 3242,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1752:42:13",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xF5BCE5077908a1b7370B9ae04AdC565EBd643966"
            },
            "visibility": "internal"
          },
          {
            "id": 3246,
            "nodeType": "VariableDeclaration",
            "src": "1800:89:13",
            "constant": true,
            "mutability": "constant",
            "name": "AAVE_DATA_PROVIDER",
            "nameLocation": "1826:18:13",
            "scope": 6710,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3244,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1800:7:13",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307830353738333541643231613137376462646433303930624231434145303345614346373846633664",
              "id": 3245,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1847:42:13",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x057835Ad21a177dbdd3090bB1CAE03EaCF78Fc6d"
            },
            "visibility": "internal"
          },
          {
            "id": 3252,
            "nodeType": "VariableDeclaration",
            "src": "1895:93:13",
            "constant": true,
            "mutability": "constant",
            "name": "bento",
            "nameLocation": "1925:5:13",
            "scope": 6710,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IBentoBoxV1_$477",
              "typeString": "contract IBentoBoxV1"
            },
            "typeName": {
              "id": 3248,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3247,
                "name": "IBentoBoxV1",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 477,
                "src": "1895:11:13"
              },
              "referencedDeclaration": 477,
              "src": "1895:11:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IBentoBoxV1_$477",
                "typeString": "contract IBentoBoxV1"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307846354243453530373739303861316237333730423961653034416443353635454264363433393636",
                  "id": 3250,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1945:42:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xF5BCE5077908a1b7370B9ae04AdC565EBd643966"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 3249,
                "name": "IBentoBoxV1",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 477,
                "src": "1933:11:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IBentoBoxV1_$477_$",
                  "typeString": "type(contract IBentoBoxV1)"
                }
              },
              "id": 3251,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1933:55:13",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IBentoBoxV1_$477",
                "typeString": "contract IBentoBoxV1"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 3256,
            "nodeType": "VariableDeclaration",
            "src": "2018:47:13",
            "constant": false,
            "mutability": "mutable",
            "name": "IS_AAVE_ASSET",
            "nameLocation": "2052:13:13",
            "scope": 6710,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 3255,
              "keyType": {
                "id": 3253,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2026:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2018:24:13",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 3254,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "2037:4:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 3303,
            "nodeType": "FunctionDefinition",
            "src": "2195:302:13",
            "body": {
              "id": 3302,
              "nodeType": "Block",
              "src": "2209:288:13",
              "statements": [
                {
                  "assignments": [
                    3264
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3264,
                      "mutability": "mutable",
                      "name": "aaveAssets",
                      "nameLocation": "2236:10:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 3302,
                      "src": "2219:27:13",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 3262,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2219:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3263,
                        "nodeType": "ArrayTypeName",
                        "src": "2219:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3270,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3266,
                            "name": "LENDING_POOL_ADDRESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3240,
                            "src": "2262:20:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3265,
                          "name": "ILendingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 507,
                          "src": "2249:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ILendingPool_$507_$",
                            "typeString": "type(contract ILendingPool)"
                          }
                        },
                        "id": 3267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2249:34:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILendingPool_$507",
                          "typeString": "contract ILendingPool"
                        }
                      },
                      "id": 3268,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getReservesList",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 506,
                      "src": "2249:50:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function () view external returns (address[] memory)"
                      }
                    },
                    "id": 3269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2249:52:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2219:82:13"
                },
                {
                  "assignments": [
                    3272
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3272,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "2319:6:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 3302,
                      "src": "2311:14:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3271,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2311:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3275,
                  "initialValue": {
                    "expression": {
                      "id": 3273,
                      "name": "aaveAssets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3264,
                      "src": "2328:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "id": 3274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "2328:17:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2311:34:13"
                },
                {
                  "body": {
                    "id": 3300,
                    "nodeType": "Block",
                    "src": "2396:95:13",
                    "statements": [
                      {
                        "assignments": [
                          3289
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3289,
                            "mutability": "mutable",
                            "name": "asset",
                            "nameLocation": "2418:5:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 3300,
                            "src": "2410:13:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3288,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2410:7:13",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3293,
                        "initialValue": {
                          "baseExpression": {
                            "id": 3290,
                            "name": "aaveAssets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3264,
                            "src": "2426:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 3292,
                          "indexExpression": {
                            "id": 3291,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3277,
                            "src": "2437:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2426:13:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2410:29:13"
                      },
                      {
                        "expression": {
                          "id": 3298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3294,
                              "name": "IS_AAVE_ASSET",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3256,
                              "src": "2453:13:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 3296,
                            "indexExpression": {
                              "id": 3295,
                              "name": "asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3289,
                              "src": "2467:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2453:20:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 3297,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2476:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2453:27:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3299,
                        "nodeType": "ExpressionStatement",
                        "src": "2453:27:13"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3279,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3277,
                      "src": "2371:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 3280,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3272,
                      "src": "2375:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2371:10:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3301,
                  "initializationExpression": {
                    "assignments": [
                      3277
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3277,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2368:1:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3301,
                        "src": "2360:9:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3276,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2360:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3278,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2360:9:13"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 3286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 3282,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3277,
                        "src": "2383:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "id": 3284,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3277,
                            "src": "2392:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 3283,
                          "name": "_inc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6685,
                          "src": "2387:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) pure returns (uint256)"
                          }
                        },
                        "id": 3285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2387:7:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2383:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3287,
                    "nodeType": "ExpressionStatement",
                    "src": "2383:11:13"
                  },
                  "nodeType": "ForStatement",
                  "src": "2355:136:13"
                }
              ]
            },
            "documentation": {
              "id": 3257,
              "nodeType": "StructuredDocumentation",
              "src": "2124:66:13",
              "text": " @dev Initialize contract by setting aave assets"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 3258,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2206:2:13"
            },
            "returnParameters": {
              "id": 3259,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2209:0:13"
            },
            "scope": 6710,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3318,
            "nodeType": "FunctionDefinition",
            "src": "2746:113:13",
            "body": {
              "id": 3317,
              "nodeType": "Block",
              "src": "2794:65:13",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3309,
                      "name": "deadline",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3306,
                      "src": "2808:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 3310,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "2819:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 3311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2819:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2808:26:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3316,
                  "nodeType": "IfStatement",
                  "src": "2804:48:13",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3313,
                        "name": "Expired",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3183,
                        "src": "2843:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 3314,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2843:9:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3315,
                    "nodeType": "RevertStatement",
                    "src": "2836:16:13"
                  }
                }
              ]
            },
            "documentation": {
              "id": 3304,
              "nodeType": "StructuredDocumentation",
              "src": "2503:238:13",
              "text": "@notice Ensures deadline is not passed, otherwise revert. (0 = no deadline)\n @dev Modifier has been replaced with a function for gas efficiency\n @param deadline Unix timestamp in seconds for transaction to execute before"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ensure",
            "nameLocation": "2755:6:13",
            "parameters": {
              "id": 3307,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3306,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "2770:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3318,
                  "src": "2762:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3305,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2762:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2761:18:13"
            },
            "returnParameters": {
              "id": 3308,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2794:0:13"
            },
            "scope": 6710,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 3456,
            "nodeType": "FunctionDefinition",
            "src": "3488:1439:13",
            "body": {
              "id": 3455,
              "nodeType": "Block",
              "src": "3745:1182:13",
              "statements": [
                {
                  "assignments": [
                    3339
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3339,
                      "mutability": "mutable",
                      "name": "factory",
                      "nameLocation": "3814:7:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 3455,
                      "src": "3806:15:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3338,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3806:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3342,
                  "initialValue": {
                    "expression": {
                      "id": 3340,
                      "name": "OpenMevLibrary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3158,
                      "src": "3824:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                        "typeString": "type(library OpenMevLibrary)"
                      }
                    },
                    "id": 3341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "SUSHI_FACTORY",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1799,
                    "src": "3824:28:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3806:46:13"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 3347,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3321,
                          "src": "3901:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 3348,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3323,
                          "src": "3909:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 3344,
                              "name": "factory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3339,
                              "src": "3884:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3343,
                            "name": "IUniswapV2Factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1108,
                            "src": "3866:17:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IUniswapV2Factory_$1108_$",
                              "typeString": "type(contract IUniswapV2Factory)"
                            }
                          },
                          "id": 3345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3866:26:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV2Factory_$1108",
                            "typeString": "contract IUniswapV2Factory"
                          }
                        },
                        "id": 3346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getPair",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1076,
                        "src": "3866:34:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_address_$",
                          "typeString": "function (address,address) view external returns (address)"
                        }
                      },
                      "id": 3349,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3866:50:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 3352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3928:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 3351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3920:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 3350,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3920:7:13",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3353,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3920:10:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3866:64:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3364,
                  "nodeType": "IfStatement",
                  "src": "3862:148:13",
                  "trueBody": {
                    "id": 3363,
                    "nodeType": "Block",
                    "src": "3932:78:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3359,
                              "name": "tokenA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3321,
                              "src": "3984:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3360,
                              "name": "tokenB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3323,
                              "src": "3992:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3356,
                                  "name": "factory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3339,
                                  "src": "3964:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3355,
                                "name": "IUniswapV2Factory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1108,
                                "src": "3946:17:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IUniswapV2Factory_$1108_$",
                                  "typeString": "type(contract IUniswapV2Factory)"
                                }
                              },
                              "id": 3357,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3946:26:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV2Factory_$1108",
                                "typeString": "contract IUniswapV2Factory"
                              }
                            },
                            "id": 3358,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "createPair",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1097,
                            "src": "3946:37:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_address_$",
                              "typeString": "function (address,address) external returns (address)"
                            }
                          },
                          "id": 3361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3946:53:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3362,
                        "nodeType": "ExpressionStatement",
                        "src": "3946:53:13"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    3366,
                    3368
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3366,
                      "mutability": "mutable",
                      "name": "reserveA",
                      "nameLocation": "4028:8:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 3455,
                      "src": "4020:16:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3365,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4020:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3368,
                      "mutability": "mutable",
                      "name": "reserveB",
                      "nameLocation": "4046:8:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 3455,
                      "src": "4038:16:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3367,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4038:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3375,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3371,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3339,
                        "src": "4085:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3372,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3321,
                        "src": "4094:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3373,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3323,
                        "src": "4102:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3369,
                        "name": "OpenMevLibrary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3158,
                        "src": "4058:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                          "typeString": "type(library OpenMevLibrary)"
                        }
                      },
                      "id": 3370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getReserves",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1981,
                      "src": "4058:26:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,address) view returns (uint256,uint256)"
                      }
                    },
                    "id": 3374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4058:51:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4019:90:13"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 3382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 3377,
                          "name": "reserveA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3366,
                          "src": "4131:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 3376,
                        "name": "_isZero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6661,
                        "src": "4123:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) pure returns (bool)"
                        }
                      },
                      "id": 3378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4123:17:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 3380,
                          "name": "reserveB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3368,
                          "src": "4152:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 3379,
                        "name": "_isZero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6661,
                        "src": "4144:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) pure returns (bool)"
                        }
                      },
                      "id": 3381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4144:17:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4123:38:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3453,
                    "nodeType": "Block",
                    "src": "4247:674:13",
                    "statements": [
                      {
                        "assignments": [
                          3393
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3393,
                            "mutability": "mutable",
                            "name": "amountBOptimal",
                            "nameLocation": "4269:14:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 3453,
                            "src": "4261:22:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3392,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4261:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3400,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3396,
                              "name": "amountADesired",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3325,
                              "src": "4307:14:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3397,
                              "name": "reserveA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3366,
                              "src": "4323:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3398,
                              "name": "reserveB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3368,
                              "src": "4333:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3394,
                              "name": "OpenMevLibrary",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3158,
                              "src": "4286:14:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                                "typeString": "type(library OpenMevLibrary)"
                              }
                            },
                            "id": 3395,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "quote",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2021,
                            "src": "4286:20:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 3399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4286:56:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4261:81:13"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3401,
                            "name": "amountBOptimal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3393,
                            "src": "4360:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 3402,
                            "name": "amountBDesired",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3327,
                            "src": "4377:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4360:31:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 3451,
                          "nodeType": "Block",
                          "src": "4746:165:13",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3438,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 3436,
                                  "name": "amountBOptimal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3393,
                                  "src": "4768:14:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 3437,
                                  "name": "amountBMin",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3331,
                                  "src": "4785:10:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4768:27:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 3442,
                              "nodeType": "IfStatement",
                              "src": "4764:61:13",
                              "trueBody": {
                                "errorCall": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 3439,
                                    "name": "InsufficientBAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3195,
                                    "src": "4804:19:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 3440,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4804:21:13",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 3441,
                                "nodeType": "RevertStatement",
                                "src": "4797:28:13"
                              }
                            },
                            {
                              "expression": {
                                "id": 3449,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "components": [
                                    {
                                      "id": 3443,
                                      "name": "amountA",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3334,
                                      "src": "4844:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 3444,
                                      "name": "amountB",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3336,
                                      "src": "4853:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 3445,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "TupleExpression",
                                  "src": "4843:18:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                                    "typeString": "tuple(uint256,uint256)"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "components": [
                                    {
                                      "id": 3446,
                                      "name": "amountADesired",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3325,
                                      "src": "4865:14:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 3447,
                                      "name": "amountBOptimal",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3393,
                                      "src": "4881:14:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 3448,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "4864:32:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                                    "typeString": "tuple(uint256,uint256)"
                                  }
                                },
                                "src": "4843:53:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3450,
                              "nodeType": "ExpressionStatement",
                              "src": "4843:53:13"
                            }
                          ]
                        },
                        "id": 3452,
                        "nodeType": "IfStatement",
                        "src": "4356:555:13",
                        "trueBody": {
                          "id": 3435,
                          "nodeType": "Block",
                          "src": "4393:347:13",
                          "statements": [
                            {
                              "assignments": [
                                3405
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3405,
                                  "mutability": "mutable",
                                  "name": "amountAOptimal",
                                  "nameLocation": "4419:14:13",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3435,
                                  "src": "4411:22:13",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 3404,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4411:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3412,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 3408,
                                    "name": "amountBDesired",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3327,
                                    "src": "4457:14:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 3409,
                                    "name": "reserveB",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3368,
                                    "src": "4473:8:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 3410,
                                    "name": "reserveA",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3366,
                                    "src": "4483:8:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 3406,
                                    "name": "OpenMevLibrary",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3158,
                                    "src": "4436:14:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                                      "typeString": "type(library OpenMevLibrary)"
                                    }
                                  },
                                  "id": 3407,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "quote",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2021,
                                  "src": "4436:20:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 3411,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4436:56:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "4411:81:13"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3415,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 3413,
                                  "name": "amountAOptimal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3405,
                                  "src": "4514:14:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "id": 3414,
                                  "name": "amountADesired",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3325,
                                  "src": "4531:14:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4514:31:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 3419,
                              "nodeType": "IfStatement",
                              "src": "4510:65:13",
                              "trueBody": {
                                "errorCall": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 3416,
                                    "name": "InsufficientAAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3197,
                                    "src": "4554:19:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 3417,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4554:21:13",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 3418,
                                "nodeType": "RevertStatement",
                                "src": "4547:28:13"
                              }
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3422,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 3420,
                                  "name": "amountAOptimal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3405,
                                  "src": "4597:14:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 3421,
                                  "name": "amountAMin",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3329,
                                  "src": "4614:10:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4597:27:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 3426,
                              "nodeType": "IfStatement",
                              "src": "4593:61:13",
                              "trueBody": {
                                "errorCall": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 3423,
                                    "name": "InsufficientAAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3197,
                                    "src": "4633:19:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 3424,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4633:21:13",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 3425,
                                "nodeType": "RevertStatement",
                                "src": "4626:28:13"
                              }
                            },
                            {
                              "expression": {
                                "id": 3433,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "components": [
                                    {
                                      "id": 3427,
                                      "name": "amountA",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3334,
                                      "src": "4673:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 3428,
                                      "name": "amountB",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3336,
                                      "src": "4682:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 3429,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "TupleExpression",
                                  "src": "4672:18:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                                    "typeString": "tuple(uint256,uint256)"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "components": [
                                    {
                                      "id": 3430,
                                      "name": "amountAOptimal",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3405,
                                      "src": "4694:14:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 3431,
                                      "name": "amountBDesired",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3327,
                                      "src": "4710:14:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 3432,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "4693:32:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                                    "typeString": "tuple(uint256,uint256)"
                                  }
                                },
                                "src": "4672:53:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3434,
                              "nodeType": "ExpressionStatement",
                              "src": "4672:53:13"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 3454,
                  "nodeType": "IfStatement",
                  "src": "4119:802:13",
                  "trueBody": {
                    "id": 3391,
                    "nodeType": "Block",
                    "src": "4163:78:13",
                    "statements": [
                      {
                        "expression": {
                          "id": 3389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 3383,
                                "name": "amountA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3334,
                                "src": "4178:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 3384,
                                "name": "amountB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3336,
                                "src": "4187:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 3385,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "4177:18:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "components": [
                              {
                                "id": 3386,
                                "name": "amountADesired",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3325,
                                "src": "4199:14:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 3387,
                                "name": "amountBDesired",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3327,
                                "src": "4215:14:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 3388,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4198:32:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "src": "4177:53:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3390,
                        "nodeType": "ExpressionStatement",
                        "src": "4177:53:13"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 3319,
              "nodeType": "StructuredDocumentation",
              "src": "2865:618:13",
              "text": "@notice Checks amounts for token A and token B are balanced for pool. Creates a pair if none exists\n @dev Reverts with custom errors replace requires\n @param tokenA Token in pool\n @param tokenB Token in pool\n @param amountADesired Amount of token A desired to add to pool\n @param amountBDesired Amount of token B desired to add to pool\n @param amountAMin Minimum amount of token A, can be 0\n @param amountBMin Minimum amount of token B, can be 0\n @return amountA exact amount of token A to be added\n @return amountB exact amount of token B to be added"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addLiquidity",
            "nameLocation": "3497:13:13",
            "parameters": {
              "id": 3332,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3321,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "3528:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3456,
                  "src": "3520:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3320,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3520:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3323,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "3552:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3456,
                  "src": "3544:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3322,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3544:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3325,
                  "mutability": "mutable",
                  "name": "amountADesired",
                  "nameLocation": "3576:14:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3456,
                  "src": "3568:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3324,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3568:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3327,
                  "mutability": "mutable",
                  "name": "amountBDesired",
                  "nameLocation": "3608:14:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3456,
                  "src": "3600:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3326,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3600:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3329,
                  "mutability": "mutable",
                  "name": "amountAMin",
                  "nameLocation": "3640:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3456,
                  "src": "3632:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3328,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3632:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3331,
                  "mutability": "mutable",
                  "name": "amountBMin",
                  "nameLocation": "3668:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3456,
                  "src": "3660:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3330,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3660:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3510:174:13"
            },
            "returnParameters": {
              "id": 3337,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3334,
                  "mutability": "mutable",
                  "name": "amountA",
                  "nameLocation": "3719:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3456,
                  "src": "3711:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3333,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3711:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3336,
                  "mutability": "mutable",
                  "name": "amountB",
                  "nameLocation": "3736:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3456,
                  "src": "3728:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3335,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3728:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3710:34:13"
            },
            "scope": 6710,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 3539,
            "nodeType": "FunctionDefinition",
            "src": "5778:822:13",
            "body": {
              "id": 3538,
              "nodeType": "Block",
              "src": "6173:427:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3483,
                        "name": "deadline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3473,
                        "src": "6190:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3482,
                      "name": "ensure",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3318,
                      "src": "6183:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 3484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6183:16:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3485,
                  "nodeType": "ExpressionStatement",
                  "src": "6183:16:13"
                },
                {
                  "expression": {
                    "id": 3497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 3486,
                          "name": "amountA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3476,
                          "src": "6210:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3487,
                          "name": "amountB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3478,
                          "src": "6219:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 3488,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "6209:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3490,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3459,
                          "src": "6244:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 3491,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3461,
                          "src": "6252:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 3492,
                          "name": "amountADesired",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3463,
                          "src": "6260:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3493,
                          "name": "amountBDesired",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3465,
                          "src": "6276:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3494,
                          "name": "amountAMin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3467,
                          "src": "6292:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3495,
                          "name": "amountBMin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3469,
                          "src": "6304:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 3489,
                        "name": "_addLiquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3456,
                        "src": "6230:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address,address,uint256,uint256,uint256,uint256) returns (uint256,uint256)"
                        }
                      },
                      "id": 3496,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6230:85:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "6209:106:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3498,
                  "nodeType": "ExpressionStatement",
                  "src": "6209:106:13"
                },
                {
                  "assignments": [
                    3500
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3500,
                      "mutability": "mutable",
                      "name": "pair",
                      "nameLocation": "6333:4:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 3538,
                      "src": "6325:12:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3499,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6325:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3508,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3503,
                          "name": "OpenMevLibrary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3158,
                          "src": "6363:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                            "typeString": "type(library OpenMevLibrary)"
                          }
                        },
                        "id": 3504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "SUSHI_FACTORY",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1799,
                        "src": "6363:28:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3505,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3459,
                        "src": "6393:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3506,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3461,
                        "src": "6401:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3501,
                        "name": "OpenMevLibrary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3158,
                        "src": "6340:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                          "typeString": "type(library OpenMevLibrary)"
                        }
                      },
                      "id": 3502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "pairFor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1906,
                      "src": "6340:22:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_address_$",
                        "typeString": "function (address,address,address) pure returns (address)"
                      }
                    },
                    "id": 3507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6340:68:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6325:83:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3513,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6449:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6449:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3515,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3500,
                        "src": "6461:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3516,
                        "name": "amountA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3476,
                        "src": "6467:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3510,
                            "name": "tokenA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3459,
                            "src": "6424:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3509,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 435,
                          "src": "6418:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$435_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 3511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6418:13:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$435",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 3512,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7577,
                      "src": "6418:30:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$435_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$435_$",
                        "typeString": "function (contract ERC20,address,address,uint256)"
                      }
                    },
                    "id": 3517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6418:57:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3518,
                  "nodeType": "ExpressionStatement",
                  "src": "6418:57:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3523,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6516:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6516:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3525,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3500,
                        "src": "6528:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3526,
                        "name": "amountB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3478,
                        "src": "6534:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3520,
                            "name": "tokenB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3461,
                            "src": "6491:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3519,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 435,
                          "src": "6485:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$435_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 3521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6485:13:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$435",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 3522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7577,
                      "src": "6485:30:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$435_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$435_$",
                        "typeString": "function (contract ERC20,address,address,uint256)"
                      }
                    },
                    "id": 3527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6485:57:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3528,
                  "nodeType": "ExpressionStatement",
                  "src": "6485:57:13"
                },
                {
                  "expression": {
                    "id": 3536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3529,
                      "name": "liquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3480,
                      "src": "6552:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3534,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3471,
                          "src": "6590:2:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 3531,
                              "name": "pair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3500,
                              "src": "6579:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3530,
                            "name": "IUniswapV2Pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1350,
                            "src": "6564:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$1350_$",
                              "typeString": "type(contract IUniswapV2Pair)"
                            }
                          },
                          "id": 3532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6564:20:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV2Pair_$1350",
                            "typeString": "contract IUniswapV2Pair"
                          }
                        },
                        "id": 3533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mint",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1314,
                        "src": "6564:25:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) external returns (uint256)"
                        }
                      },
                      "id": 3535,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6564:29:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6552:41:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3537,
                  "nodeType": "ExpressionStatement",
                  "src": "6552:41:13"
                }
              ]
            },
            "baseFunctions": [
              671
            ],
            "documentation": {
              "id": 3457,
              "nodeType": "StructuredDocumentation",
              "src": "4933:840:13",
              "text": "@notice Adds liquidity to an ERC-20⇄ERC-20 pool. msg.sender should have already given the router an allowance of at least amountADesired/amountBDesired on tokenA/tokenB\n @param tokenA Token in pool\n @param tokenB Token in pool\n @param amountADesired Amount of token A desired to add to pool\n @param amountBDesired Amount of token B desired to add to pool\n @param amountAMin Minimum amount of token A, can be 0\n @param amountBMin Minimum amount of token B, can be 0\n @param to Address to receive liquidity token\n @param deadline Unix timestamp in seconds after which the transaction will revert\n @return amountA exact amount of token A added to pool\n @return amountB exact amount of token B added to pool\n @return liquidity amount of liquidity token received"
            },
            "functionSelector": "e8e33700",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addLiquidity",
            "nameLocation": "5787:12:13",
            "parameters": {
              "id": 3474,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3459,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "5817:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3539,
                  "src": "5809:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3458,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5809:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3461,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "5841:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3539,
                  "src": "5833:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3460,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5833:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3463,
                  "mutability": "mutable",
                  "name": "amountADesired",
                  "nameLocation": "5865:14:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3539,
                  "src": "5857:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3462,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5857:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3465,
                  "mutability": "mutable",
                  "name": "amountBDesired",
                  "nameLocation": "5897:14:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3539,
                  "src": "5889:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3464,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5889:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3467,
                  "mutability": "mutable",
                  "name": "amountAMin",
                  "nameLocation": "5929:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3539,
                  "src": "5921:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3466,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5921:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3469,
                  "mutability": "mutable",
                  "name": "amountBMin",
                  "nameLocation": "5957:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3539,
                  "src": "5949:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3468,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5949:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3471,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5985:2:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3539,
                  "src": "5977:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3470,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5977:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3473,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "6005:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3539,
                  "src": "5997:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3472,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5997:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5799:220:13"
            },
            "returnParameters": {
              "id": 3481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3476,
                  "mutability": "mutable",
                  "name": "amountA",
                  "nameLocation": "6091:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3539,
                  "src": "6083:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3475,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6083:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3478,
                  "mutability": "mutable",
                  "name": "amountB",
                  "nameLocation": "6120:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3539,
                  "src": "6112:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3477,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6112:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3480,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "6149:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3539,
                  "src": "6141:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3479,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6141:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6069:99:13"
            },
            "scope": 6710,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 3645,
            "nodeType": "FunctionDefinition",
            "src": "7426:1094:13",
            "body": {
              "id": 3644,
              "nodeType": "Block",
              "src": "7799:721:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3562,
                        "name": "deadline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3552,
                        "src": "7816:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3561,
                      "name": "ensure",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3318,
                      "src": "7809:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 3563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7809:16:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3564,
                  "nodeType": "ExpressionStatement",
                  "src": "7809:16:13"
                },
                {
                  "assignments": [
                    3566
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3566,
                      "mutability": "mutable",
                      "name": "weth",
                      "nameLocation": "7843:4:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 3644,
                      "src": "7835:12:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3565,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7835:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3568,
                  "initialValue": {
                    "id": 3567,
                    "name": "WETH09",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3234,
                    "src": "7850:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7835:21:13"
                },
                {
                  "expression": {
                    "id": 3581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 3569,
                          "name": "amountToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3555,
                          "src": "7867:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3570,
                          "name": "amountETH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3557,
                          "src": "7880:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 3571,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "7866:24:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3573,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3542,
                          "src": "7920:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 3574,
                          "name": "weth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3566,
                          "src": "7939:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 3575,
                          "name": "amountTokenDesired",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3544,
                          "src": "7957:18:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 3576,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7989:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "7989:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3578,
                          "name": "amountTokenMin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3546,
                          "src": "8012:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3579,
                          "name": "amountETHMin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3548,
                          "src": "8040:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 3572,
                        "name": "_addLiquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3456,
                        "src": "7893:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address,address,uint256,uint256,uint256,uint256) returns (uint256,uint256)"
                        }
                      },
                      "id": 3580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7893:169:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "7866:196:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3582,
                  "nodeType": "ExpressionStatement",
                  "src": "7866:196:13"
                },
                {
                  "assignments": [
                    3584
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3584,
                      "mutability": "mutable",
                      "name": "pair",
                      "nameLocation": "8080:4:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 3644,
                      "src": "8072:12:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3583,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8072:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3592,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3587,
                          "name": "OpenMevLibrary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3158,
                          "src": "8110:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                            "typeString": "type(library OpenMevLibrary)"
                          }
                        },
                        "id": 3588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "SUSHI_FACTORY",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1799,
                        "src": "8110:28:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3589,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3542,
                        "src": "8140:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3590,
                        "name": "weth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3566,
                        "src": "8147:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3585,
                        "name": "OpenMevLibrary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3158,
                        "src": "8087:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                          "typeString": "type(library OpenMevLibrary)"
                        }
                      },
                      "id": 3586,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "pairFor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1906,
                      "src": "8087:22:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_address_$",
                        "typeString": "function (address,address,address) pure returns (address)"
                      }
                    },
                    "id": 3591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8087:65:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8072:80:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3597,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8192:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8192:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3599,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3584,
                        "src": "8204:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3600,
                        "name": "amountToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3555,
                        "src": "8210:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3594,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3542,
                            "src": "8168:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3593,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 435,
                          "src": "8162:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$435_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 3595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8162:12:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$435",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 3596,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7577,
                      "src": "8162:29:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$435_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$435_$",
                        "typeString": "function (contract ERC20,address,address,uint256)"
                      }
                    },
                    "id": 3601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8162:60:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3602,
                  "nodeType": "ExpressionStatement",
                  "src": "8162:60:13"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 3604,
                              "name": "weth",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3566,
                              "src": "8238:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3603,
                            "name": "IWETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1763,
                            "src": "8232:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IWETH_$1763_$",
                              "typeString": "type(contract IWETH)"
                            }
                          },
                          "id": 3605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8232:11:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IWETH_$1763",
                            "typeString": "contract IWETH"
                          }
                        },
                        "id": 3606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1748,
                        "src": "8232:19:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 3608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 3607,
                          "name": "amountETH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3557,
                          "src": "8260:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "8232:39:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 3609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8232:41:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3610,
                  "nodeType": "ExpressionStatement",
                  "src": "8232:41:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3615,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3584,
                        "src": "8308:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3616,
                        "name": "amountETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3557,
                        "src": "8314:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3612,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3566,
                            "src": "8289:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3611,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 435,
                          "src": "8283:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$435_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 3613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8283:11:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$435",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 3614,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7597,
                      "src": "8283:24:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$435_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$435_$",
                        "typeString": "function (contract ERC20,address,uint256)"
                      }
                    },
                    "id": 3617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8283:41:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3618,
                  "nodeType": "ExpressionStatement",
                  "src": "8283:41:13"
                },
                {
                  "expression": {
                    "id": 3626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3619,
                      "name": "liquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3559,
                      "src": "8334:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3624,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3550,
                          "src": "8372:2:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 3621,
                              "name": "pair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3584,
                              "src": "8361:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3620,
                            "name": "IUniswapV2Pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1350,
                            "src": "8346:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$1350_$",
                              "typeString": "type(contract IUniswapV2Pair)"
                            }
                          },
                          "id": 3622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8346:20:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV2Pair_$1350",
                            "typeString": "contract IUniswapV2Pair"
                          }
                        },
                        "id": 3623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mint",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1314,
                        "src": "8346:25:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) external returns (uint256)"
                        }
                      },
                      "id": 3625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8346:29:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8334:41:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3627,
                  "nodeType": "ExpressionStatement",
                  "src": "8334:41:13"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 3628,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "8424:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3629,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "8424:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 3630,
                      "name": "amountETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3557,
                      "src": "8436:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8424:21:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3643,
                  "nodeType": "IfStatement",
                  "src": "8420:93:13",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 3635,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "8479:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "8479:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 3637,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "8491:3:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3638,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "8491:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 3639,
                            "name": "amountETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3557,
                            "src": "8503:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8491:21:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 3632,
                          "name": "SafeTransferLib",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7618,
                          "src": "8447:15:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SafeTransferLib_$7618_$",
                            "typeString": "type(library SafeTransferLib)"
                          }
                        },
                        "id": 3634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "safeTransferETH",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7555,
                        "src": "8447:31:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256)"
                        }
                      },
                      "id": 3641,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8447:66:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3642,
                    "nodeType": "ExpressionStatement",
                    "src": "8447:66:13"
                  }
                }
              ]
            },
            "baseFunctions": [
              692
            ],
            "documentation": {
              "id": 3540,
              "nodeType": "StructuredDocumentation",
              "src": "6606:815:13",
              "text": "@notice Adds liquidity to an ERC-20⇄WETH pool with ETH. msg.sender should have already given the router an allowance of at least amountTokenDesired on token. msg.value is treated as a amountETHDesired. Leftover ETH, if any, is returned to msg.sender\n @param token Token in pool\n @param amountTokenDesired Amount of token desired to add to pool\n @param amountTokenMin Minimum amount of token, can be 0\n @param amountETHMin Minimum amount of ETH, can be 0\n @param to Address to receive liquidity token\n @param deadline Unix timestamp in seconds after which the transaction will revert\n @return amountToken exact amount of token added to pool\n @return amountETH exact amount of ETH added to pool\n @return liquidity amount of liquidity token received"
            },
            "functionSelector": "f305d719",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addLiquidityETH",
            "nameLocation": "7435:15:13",
            "parameters": {
              "id": 3553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3542,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "7468:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3645,
                  "src": "7460:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3541,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7460:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3544,
                  "mutability": "mutable",
                  "name": "amountTokenDesired",
                  "nameLocation": "7491:18:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3645,
                  "src": "7483:26:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3543,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7483:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3546,
                  "mutability": "mutable",
                  "name": "amountTokenMin",
                  "nameLocation": "7527:14:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3645,
                  "src": "7519:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3545,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7519:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3548,
                  "mutability": "mutable",
                  "name": "amountETHMin",
                  "nameLocation": "7559:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3645,
                  "src": "7551:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3547,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7551:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3550,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7589:2:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3645,
                  "src": "7581:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3549,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7581:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3552,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "7609:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3645,
                  "src": "7601:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3551,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7601:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7450:173:13"
            },
            "returnParameters": {
              "id": 3560,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3555,
                  "mutability": "mutable",
                  "name": "amountToken",
                  "nameLocation": "7711:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3645,
                  "src": "7703:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3554,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7703:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3557,
                  "mutability": "mutable",
                  "name": "amountETH",
                  "nameLocation": "7744:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3645,
                  "src": "7736:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3556,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7736:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3559,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "7775:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3645,
                  "src": "7767:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3558,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7767:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7689:105:13"
            },
            "scope": 6710,
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 3740,
            "nodeType": "FunctionDefinition",
            "src": "9185:850:13",
            "body": {
              "id": 3739,
              "nodeType": "Block",
              "src": "9451:584:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3668,
                        "name": "deadline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3660,
                        "src": "9468:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3667,
                      "name": "ensure",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3318,
                      "src": "9461:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 3669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9461:16:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3670,
                  "nodeType": "ExpressionStatement",
                  "src": "9461:16:13"
                },
                {
                  "assignments": [
                    3672
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3672,
                      "mutability": "mutable",
                      "name": "pair",
                      "nameLocation": "9495:4:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 3739,
                      "src": "9487:12:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3671,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9487:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3680,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3675,
                          "name": "OpenMevLibrary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3158,
                          "src": "9525:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                            "typeString": "type(library OpenMevLibrary)"
                          }
                        },
                        "id": 3676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "SUSHI_FACTORY",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1799,
                        "src": "9525:28:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3677,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3648,
                        "src": "9555:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3678,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3650,
                        "src": "9563:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3673,
                        "name": "OpenMevLibrary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3158,
                        "src": "9502:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                          "typeString": "type(library OpenMevLibrary)"
                        }
                      },
                      "id": 3674,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "pairFor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1906,
                      "src": "9502:22:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_address_$",
                        "typeString": "function (address,address,address) pure returns (address)"
                      }
                    },
                    "id": 3679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9502:68:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9487:83:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3685,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9609:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9609:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3687,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3672,
                        "src": "9621:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3688,
                        "name": "liquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3652,
                        "src": "9627:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3682,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3672,
                            "src": "9586:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3681,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 435,
                          "src": "9580:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$435_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 3683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9580:11:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$435",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 3684,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7577,
                      "src": "9580:28:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$435_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$435_$",
                        "typeString": "function (contract ERC20,address,address,uint256)"
                      }
                    },
                    "id": 3689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9580:57:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3690,
                  "nodeType": "ExpressionStatement",
                  "src": "9580:57:13"
                },
                {
                  "assignments": [
                    3692,
                    3694
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3692,
                      "mutability": "mutable",
                      "name": "amount0",
                      "nameLocation": "9682:7:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 3739,
                      "src": "9674:15:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3691,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9674:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3694,
                      "mutability": "mutable",
                      "name": "amount1",
                      "nameLocation": "9699:7:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 3739,
                      "src": "9691:15:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3693,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9691:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3701,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3699,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3658,
                        "src": "9736:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3696,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3672,
                            "src": "9725:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3695,
                          "name": "IUniswapV2Pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1350,
                          "src": "9710:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$1350_$",
                            "typeString": "type(contract IUniswapV2Pair)"
                          }
                        },
                        "id": 3697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9710:20:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2Pair_$1350",
                          "typeString": "contract IUniswapV2Pair"
                        }
                      },
                      "id": 3698,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1323,
                      "src": "9710:25:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address) external returns (uint256,uint256)"
                      }
                    },
                    "id": 3700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9710:29:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9673:66:13"
                },
                {
                  "assignments": [
                    3703,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3703,
                      "mutability": "mutable",
                      "name": "token0",
                      "nameLocation": "9758:6:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 3739,
                      "src": "9750:14:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3702,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9750:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 3709,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3706,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3648,
                        "src": "9796:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3707,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3650,
                        "src": "9804:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3704,
                        "name": "OpenMevLibrary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3158,
                        "src": "9770:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                          "typeString": "type(library OpenMevLibrary)"
                        }
                      },
                      "id": 3705,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sortTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1876,
                      "src": "9770:25:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$returns$_t_address_$_t_address_$",
                        "typeString": "function (address,address) pure returns (address,address)"
                      }
                    },
                    "id": 3708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9770:41:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9749:62:13"
                },
                {
                  "expression": {
                    "id": 3723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 3710,
                          "name": "amountA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3663,
                          "src": "9822:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3711,
                          "name": "amountB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3665,
                          "src": "9831:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 3712,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "9821:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3715,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3713,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3648,
                          "src": "9842:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3714,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3703,
                          "src": "9852:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9842:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "components": [
                          {
                            "id": 3719,
                            "name": "amount1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3694,
                            "src": "9883:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 3720,
                            "name": "amount0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3692,
                            "src": "9892:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 3721,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "9882:18:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                          "typeString": "tuple(uint256,uint256)"
                        }
                      },
                      "id": 3722,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "9842:58:13",
                      "trueExpression": {
                        "components": [
                          {
                            "id": 3716,
                            "name": "amount0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3692,
                            "src": "9862:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 3717,
                            "name": "amount1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3694,
                            "src": "9871:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 3718,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "9861:18:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                          "typeString": "tuple(uint256,uint256)"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "9821:79:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3724,
                  "nodeType": "ExpressionStatement",
                  "src": "9821:79:13"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3725,
                      "name": "amountA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3663,
                      "src": "9914:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 3726,
                      "name": "amountAMin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3654,
                      "src": "9924:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9914:20:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3731,
                  "nodeType": "IfStatement",
                  "src": "9910:54:13",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3728,
                        "name": "InsufficientAAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3197,
                        "src": "9943:19:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 3729,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9943:21:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3730,
                    "nodeType": "RevertStatement",
                    "src": "9936:28:13"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3732,
                      "name": "amountB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3665,
                      "src": "9978:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 3733,
                      "name": "amountBMin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3656,
                      "src": "9988:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9978:20:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3738,
                  "nodeType": "IfStatement",
                  "src": "9974:54:13",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3735,
                        "name": "InsufficientBAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3195,
                        "src": "10007:19:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 3736,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10007:21:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3737,
                    "nodeType": "RevertStatement",
                    "src": "10000:28:13"
                  }
                }
              ]
            },
            "baseFunctions": [
              713
            ],
            "documentation": {
              "id": 3646,
              "nodeType": "StructuredDocumentation",
              "src": "8526:654:13",
              "text": "@notice Removes liquidity from an ERC-20⇄ERC-20 pool. msg.sender should have already given the router an allowance of at least liquidity on the pool.\n @param tokenA Token in pool\n @param tokenB Token in pool\n @param liquidity Amount of liquidity tokens to remove\n @param amountAMin Minimum amount of token A, can be 0\n @param amountBMin Minimum amount of token B, can be 0\n @param to Address to receive pool tokens\n @param deadline Unix timestamp in seconds after which the transaction will revert\n @return amountA Amount of token A received\n @return amountB Amount of token B received"
            },
            "functionSelector": "baa2abde",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeLiquidity",
            "nameLocation": "9194:15:13",
            "parameters": {
              "id": 3661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3648,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "9227:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3740,
                  "src": "9219:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3647,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9219:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3650,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "9251:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3740,
                  "src": "9243:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3649,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9243:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3652,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "9275:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3740,
                  "src": "9267:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3651,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9267:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3654,
                  "mutability": "mutable",
                  "name": "amountAMin",
                  "nameLocation": "9302:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3740,
                  "src": "9294:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3653,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9294:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3656,
                  "mutability": "mutable",
                  "name": "amountBMin",
                  "nameLocation": "9330:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3740,
                  "src": "9322:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3655,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9322:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3658,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9358:2:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3740,
                  "src": "9350:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3657,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9350:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3660,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "9378:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3740,
                  "src": "9370:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3659,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9370:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9209:183:13"
            },
            "returnParameters": {
              "id": 3666,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3663,
                  "mutability": "mutable",
                  "name": "amountA",
                  "nameLocation": "9425:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3740,
                  "src": "9417:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3662,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9417:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3665,
                  "mutability": "mutable",
                  "name": "amountB",
                  "nameLocation": "9442:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3740,
                  "src": "9434:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3664,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9434:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9416:34:13"
            },
            "scope": 6710,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 3833,
            "nodeType": "FunctionDefinition",
            "src": "10677:905:13",
            "body": {
              "id": 3832,
              "nodeType": "Block",
              "src": "10933:649:13",
              "statements": [
                {
                  "assignments": [
                    3761
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3761,
                      "mutability": "mutable",
                      "name": "weth",
                      "nameLocation": "10951:4:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 3832,
                      "src": "10943:12:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3760,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10943:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3763,
                  "initialValue": {
                    "id": 3762,
                    "name": "WETH09",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3234,
                    "src": "10958:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10943:21:13"
                },
                {
                  "assignments": [
                    3765
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3765,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "10982:13:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 3832,
                      "src": "10974:21:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3764,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10974:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3775,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3772,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "11029:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OpenMevRouter_$6710",
                              "typeString": "contract OpenMevRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OpenMevRouter_$6710",
                              "typeString": "contract OpenMevRouter"
                            }
                          ],
                          "id": 3771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11021:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3770,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11021:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11021:13:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3767,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3743,
                            "src": "11004:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3766,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 435,
                          "src": "10998:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$435_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 3768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10998:12:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$435",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 3769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 127,
                      "src": "10998:22:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 3774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10998:37:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10974:61:13"
                },
                {
                  "expression": {
                    "id": 3791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 3776,
                          "name": "amountToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3756,
                          "src": "11046:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3777,
                          "name": "amountETH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3758,
                          "src": "11059:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 3778,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "11045:24:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3780,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3743,
                          "src": "11101:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 3781,
                          "name": "weth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3761,
                          "src": "11120:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 3782,
                          "name": "liquidity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3745,
                          "src": "11138:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3783,
                          "name": "amountTokenMin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3747,
                          "src": "11161:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3784,
                          "name": "amountETHMin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3749,
                          "src": "11189:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 3787,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "11223:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OpenMevRouter_$6710",
                                "typeString": "contract OpenMevRouter"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_OpenMevRouter_$6710",
                                "typeString": "contract OpenMevRouter"
                              }
                            ],
                            "id": 3786,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11215:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3785,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11215:7:13",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11215:13:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 3789,
                          "name": "deadline",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3753,
                          "src": "11242:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 3779,
                        "name": "removeLiquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3740,
                        "src": "11072:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address,address,uint256,uint256,uint256,address,uint256) returns (uint256,uint256)"
                        }
                      },
                      "id": 3790,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11072:188:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "11045:215:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3792,
                  "nodeType": "ExpressionStatement",
                  "src": "11045:215:13"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3793,
                      "name": "amountToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3756,
                      "src": "11327:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3804,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 3800,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "11373:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OpenMevRouter_$6710",
                                  "typeString": "contract OpenMevRouter"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_OpenMevRouter_$6710",
                                  "typeString": "contract OpenMevRouter"
                                }
                              ],
                              "id": 3799,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11365:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3798,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11365:7:13",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3801,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11365:13:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 3795,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3743,
                                "src": "11348:5:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3794,
                              "name": "ERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 435,
                              "src": "11342:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC20_$435_$",
                                "typeString": "type(contract ERC20)"
                              }
                            },
                            "id": 3796,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11342:12:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$435",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 3797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 127,
                          "src": "11342:22:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 3802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11342:37:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 3803,
                        "name": "balanceBefore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3765,
                        "src": "11382:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "11342:53:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11327:68:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3809,
                  "nodeType": "IfStatement",
                  "src": "11323:103:13",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3806,
                        "name": "TokenIsFeeOnTransfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3199,
                        "src": "11404:20:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 3807,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11404:22:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3808,
                    "nodeType": "RevertStatement",
                    "src": "11397:29:13"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3814,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3751,
                        "src": "11462:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3815,
                        "name": "amountToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3756,
                        "src": "11466:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3811,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3743,
                            "src": "11442:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3810,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 435,
                          "src": "11436:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$435_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 3812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11436:12:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$435",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 3813,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7597,
                      "src": "11436:25:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$435_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$435_$",
                        "typeString": "function (contract ERC20,address,uint256)"
                      }
                    },
                    "id": 3816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11436:42:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3817,
                  "nodeType": "ExpressionStatement",
                  "src": "11436:42:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3822,
                        "name": "amountETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3758,
                        "src": "11509:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3819,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3761,
                            "src": "11494:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3818,
                          "name": "IWETH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1763,
                          "src": "11488:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IWETH_$1763_$",
                            "typeString": "type(contract IWETH)"
                          }
                        },
                        "id": 3820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11488:11:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IWETH_$1763",
                          "typeString": "contract IWETH"
                        }
                      },
                      "id": 3821,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1762,
                      "src": "11488:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 3823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11488:31:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3824,
                  "nodeType": "ExpressionStatement",
                  "src": "11488:31:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3828,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3751,
                        "src": "11561:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3829,
                        "name": "amountETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3758,
                        "src": "11565:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3825,
                        "name": "SafeTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7618,
                        "src": "11529:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeTransferLib_$7618_$",
                          "typeString": "type(library SafeTransferLib)"
                        }
                      },
                      "id": 3827,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7555,
                      "src": "11529:31:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11529:46:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3831,
                  "nodeType": "ExpressionStatement",
                  "src": "11529:46:13"
                }
              ]
            },
            "baseFunctions": [
              732
            ],
            "documentation": {
              "id": 3741,
              "nodeType": "StructuredDocumentation",
              "src": "10041:631:13",
              "text": "@notice Removes liquidity from an ERC-20⇄WETH pool and receive ETH. msg.sender should have already given the router an allowance of at least liquidity on the pool.\n @param token Token in pool\n @param liquidity Amount of liquidity tokens to remove\n @param amountTokenMin Minimum amount of token, can be 0\n @param amountETHMin Minimum amount of ETH, can be 0\n @param to Address to receive pool tokens\n @param deadline Unix timestamp in seconds after which the transaction will revert\n @return amountToken Amount of token received\n @return amountETH Amount of ETH received"
            },
            "functionSelector": "02751cec",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeLiquidityETH",
            "nameLocation": "10686:18:13",
            "parameters": {
              "id": 3754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3743,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "10722:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3833,
                  "src": "10714:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3742,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10714:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3745,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "10745:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3833,
                  "src": "10737:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3744,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10737:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3747,
                  "mutability": "mutable",
                  "name": "amountTokenMin",
                  "nameLocation": "10772:14:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3833,
                  "src": "10764:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3746,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10764:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3749,
                  "mutability": "mutable",
                  "name": "amountETHMin",
                  "nameLocation": "10804:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3833,
                  "src": "10796:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3748,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10796:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3751,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10834:2:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3833,
                  "src": "10826:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3750,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10826:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3753,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "10854:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3833,
                  "src": "10846:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3752,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10846:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10704:164:13"
            },
            "returnParameters": {
              "id": 3759,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3756,
                  "mutability": "mutable",
                  "name": "amountToken",
                  "nameLocation": "10901:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3833,
                  "src": "10893:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3755,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10893:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3758,
                  "mutability": "mutable",
                  "name": "amountETH",
                  "nameLocation": "10922:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3833,
                  "src": "10914:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3757,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10914:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10892:40:13"
            },
            "scope": 6710,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 3908,
            "nodeType": "FunctionDefinition",
            "src": "12468:761:13",
            "body": {
              "id": 3907,
              "nodeType": "Block",
              "src": "12826:403:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3873,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12941:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3874,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12941:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3877,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "12973:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OpenMevRouter_$6710",
                              "typeString": "contract OpenMevRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OpenMevRouter_$6710",
                              "typeString": "contract OpenMevRouter"
                            }
                          ],
                          "id": 3876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12965:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3875,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12965:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12965:13:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "condition": {
                          "id": 3879,
                          "name": "approveMax",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3850,
                          "src": "12992:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "id": 3885,
                          "name": "liquidity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3840,
                          "src": "13025:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "12992:42:13",
                        "trueExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 3882,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "13010:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 3881,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "13010:7:13",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                }
                              ],
                              "id": 3880,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "13005:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 3883,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13005:13:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_uint256",
                              "typeString": "type(uint256)"
                            }
                          },
                          "id": 3884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "src": "13005:17:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3887,
                        "name": "deadline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3848,
                        "src": "13048:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3888,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3852,
                        "src": "13070:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 3889,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3854,
                        "src": "13085:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 3890,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3856,
                        "src": "13100:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 3866,
                                  "name": "OpenMevLibrary",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3158,
                                  "src": "12874:14:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                                    "typeString": "type(library OpenMevLibrary)"
                                  }
                                },
                                "id": 3867,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "SUSHI_FACTORY",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1799,
                                "src": "12874:28:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 3868,
                                "name": "tokenA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3836,
                                "src": "12904:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 3869,
                                "name": "tokenB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3838,
                                "src": "12912:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 3864,
                                "name": "OpenMevLibrary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3158,
                                "src": "12851:14:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                                  "typeString": "type(library OpenMevLibrary)"
                                }
                              },
                              "id": 3865,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "pairFor",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1906,
                              "src": "12851:22:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_address_$",
                                "typeString": "function (address,address,address) pure returns (address)"
                              }
                            },
                            "id": 3870,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12851:68:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3863,
                          "name": "IUniswapV2Pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1350,
                          "src": "12836:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$1350_$",
                            "typeString": "type(contract IUniswapV2Pair)"
                          }
                        },
                        "id": 3871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12836:84:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2Pair_$1350",
                          "typeString": "contract IUniswapV2Pair"
                        }
                      },
                      "id": 3872,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "permit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1225,
                      "src": "12836:91:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
                      }
                    },
                    "id": 3891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12836:275:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3892,
                  "nodeType": "ExpressionStatement",
                  "src": "12836:275:13"
                },
                {
                  "expression": {
                    "id": 3905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 3893,
                          "name": "amountA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3859,
                          "src": "13122:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3894,
                          "name": "amountB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3861,
                          "src": "13131:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 3895,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "13121:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3897,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3836,
                          "src": "13158:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 3898,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3838,
                          "src": "13166:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 3899,
                          "name": "liquidity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3840,
                          "src": "13174:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3900,
                          "name": "amountAMin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3842,
                          "src": "13185:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3901,
                          "name": "amountBMin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3844,
                          "src": "13197:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3902,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3846,
                          "src": "13209:2:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 3903,
                          "name": "deadline",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3848,
                          "src": "13213:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 3896,
                        "name": "removeLiquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3740,
                        "src": "13142:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address,address,uint256,uint256,uint256,address,uint256) returns (uint256,uint256)"
                        }
                      },
                      "id": 3904,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13142:80:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "13121:101:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3906,
                  "nodeType": "ExpressionStatement",
                  "src": "13121:101:13"
                }
              ]
            },
            "baseFunctions": [
              761
            ],
            "documentation": {
              "id": 3834,
              "nodeType": "StructuredDocumentation",
              "src": "11588:875:13",
              "text": "@notice Removes liquidity from an ERC-20⇄ERC-20 pool without pre-approval, thanks to permit.\n @param tokenA Token in pool\n @param tokenB Token in pool\n @param liquidity Amount of liquidity tokens to remove\n @param amountAMin Minimum amount of token A, can be 0\n @param amountBMin Minimum amount of token B, can be 0\n @param to Address to receive pool tokens\n @param deadline Unix timestamp in seconds after which the transaction will revert\n @param approveMax Whether or not the approval amount in the signature is for liquidity or uint(-1)\n @param v The v component of the permit signature\n @param r The r component of the permit signature\n @param s The s component of the permit signature\n @return amountA Amount of token A received\n @return amountB Amount of token B received"
            },
            "functionSelector": "2195995c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeLiquidityWithPermit",
            "nameLocation": "12477:25:13",
            "parameters": {
              "id": 3857,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3836,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "12520:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3908,
                  "src": "12512:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3835,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12512:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3838,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "12544:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3908,
                  "src": "12536:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3837,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12536:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3840,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "12568:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3908,
                  "src": "12560:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3839,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12560:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3842,
                  "mutability": "mutable",
                  "name": "amountAMin",
                  "nameLocation": "12595:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3908,
                  "src": "12587:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3841,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12587:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3844,
                  "mutability": "mutable",
                  "name": "amountBMin",
                  "nameLocation": "12623:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3908,
                  "src": "12615:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3843,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12615:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3846,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12651:2:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3908,
                  "src": "12643:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3845,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12643:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3848,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "12671:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3908,
                  "src": "12663:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3847,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12663:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3850,
                  "mutability": "mutable",
                  "name": "approveMax",
                  "nameLocation": "12694:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3908,
                  "src": "12689:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3849,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12689:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3852,
                  "mutability": "mutable",
                  "name": "v",
                  "nameLocation": "12720:1:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3908,
                  "src": "12714:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 3851,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "12714:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3854,
                  "mutability": "mutable",
                  "name": "r",
                  "nameLocation": "12739:1:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3908,
                  "src": "12731:9:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3853,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12731:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3856,
                  "mutability": "mutable",
                  "name": "s",
                  "nameLocation": "12758:1:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3908,
                  "src": "12750:9:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3855,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12750:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12502:263:13"
            },
            "returnParameters": {
              "id": 3862,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3859,
                  "mutability": "mutable",
                  "name": "amountA",
                  "nameLocation": "12800:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3908,
                  "src": "12792:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3858,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12792:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3861,
                  "mutability": "mutable",
                  "name": "amountB",
                  "nameLocation": "12817:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3908,
                  "src": "12809:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3860,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12809:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12791:34:13"
            },
            "scope": 6710,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 3980,
            "nodeType": "FunctionDefinition",
            "src": "14092:756:13",
            "body": {
              "id": 3979,
              "nodeType": "Block",
              "src": "14440:408:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3946,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "14554:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "14554:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3950,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "14586:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OpenMevRouter_$6710",
                              "typeString": "contract OpenMevRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OpenMevRouter_$6710",
                              "typeString": "contract OpenMevRouter"
                            }
                          ],
                          "id": 3949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14578:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3948,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14578:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14578:13:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "condition": {
                          "id": 3952,
                          "name": "approveMax",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3923,
                          "src": "14605:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "id": 3958,
                          "name": "liquidity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3913,
                          "src": "14638:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "14605:42:13",
                        "trueExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 3955,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "14623:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 3954,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "14623:7:13",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                }
                              ],
                              "id": 3953,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "14618:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 3956,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14618:13:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_uint256",
                              "typeString": "type(uint256)"
                            }
                          },
                          "id": 3957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "src": "14618:17:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3960,
                        "name": "deadline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3921,
                        "src": "14661:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3961,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3925,
                        "src": "14683:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 3962,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3927,
                        "src": "14698:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 3963,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3929,
                        "src": "14713:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 3939,
                                  "name": "OpenMevLibrary",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3158,
                                  "src": "14488:14:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                                    "typeString": "type(library OpenMevLibrary)"
                                  }
                                },
                                "id": 3940,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "SUSHI_FACTORY",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1799,
                                "src": "14488:28:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 3941,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3911,
                                "src": "14518:5:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 3942,
                                "name": "WETH09",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3234,
                                "src": "14525:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 3937,
                                "name": "OpenMevLibrary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3158,
                                "src": "14465:14:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                                  "typeString": "type(library OpenMevLibrary)"
                                }
                              },
                              "id": 3938,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "pairFor",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1906,
                              "src": "14465:22:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_address_$",
                                "typeString": "function (address,address,address) pure returns (address)"
                              }
                            },
                            "id": 3943,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14465:67:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3936,
                          "name": "IUniswapV2Pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1350,
                          "src": "14450:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$1350_$",
                            "typeString": "type(contract IUniswapV2Pair)"
                          }
                        },
                        "id": 3944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14450:83:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2Pair_$1350",
                          "typeString": "contract IUniswapV2Pair"
                        }
                      },
                      "id": 3945,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "permit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1225,
                      "src": "14450:90:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
                      }
                    },
                    "id": 3964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14450:274:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3965,
                  "nodeType": "ExpressionStatement",
                  "src": "14450:274:13"
                },
                {
                  "expression": {
                    "id": 3977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 3966,
                          "name": "amountToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3932,
                          "src": "14735:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3967,
                          "name": "amountETH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3934,
                          "src": "14748:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 3968,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "14734:24:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3970,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3911,
                          "src": "14780:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 3971,
                          "name": "liquidity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3913,
                          "src": "14787:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3972,
                          "name": "amountTokenMin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3915,
                          "src": "14798:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3973,
                          "name": "amountETHMin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3917,
                          "src": "14814:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3974,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3919,
                          "src": "14828:2:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 3975,
                          "name": "deadline",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3921,
                          "src": "14832:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 3969,
                        "name": "removeLiquidityETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3833,
                        "src": "14761:18:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address,uint256,uint256,uint256,address,uint256) returns (uint256,uint256)"
                        }
                      },
                      "id": 3976,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14761:80:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "14734:107:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3978,
                  "nodeType": "ExpressionStatement",
                  "src": "14734:107:13"
                }
              ]
            },
            "baseFunctions": [
              788
            ],
            "documentation": {
              "id": 3909,
              "nodeType": "StructuredDocumentation",
              "src": "13235:852:13",
              "text": "@notice Removes liquidity from an ERC-20⇄WETTH pool and receive ETH without pre-approval, thanks to permit\n @param token Token in pool\n @param liquidity Amount of liquidity tokens to remove\n @param amountTokenMin Minimum amount of token, can be 0\n @param amountETHMin Minimum amount of ETH, can be 0\n @param to Address to receive pool tokens\n @param deadline Unix timestamp in seconds after which the transaction will revert\n @param approveMax Whether or not the approval amount in the signature is for liquidity or uint(-1)\n @param v The v component of the permit signature\n @param r The r component of the permit signature\n @param s The s component of the permit signature\n @return amountToken Amount of token received\n @return amountETH Amount of ETH received"
            },
            "functionSelector": "ded9382a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeLiquidityETHWithPermit",
            "nameLocation": "14101:28:13",
            "parameters": {
              "id": 3930,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3911,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "14147:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3980,
                  "src": "14139:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3910,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14139:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3913,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "14170:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3980,
                  "src": "14162:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3912,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14162:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3915,
                  "mutability": "mutable",
                  "name": "amountTokenMin",
                  "nameLocation": "14197:14:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3980,
                  "src": "14189:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3914,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14189:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3917,
                  "mutability": "mutable",
                  "name": "amountETHMin",
                  "nameLocation": "14229:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3980,
                  "src": "14221:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3916,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14221:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3919,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "14259:2:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3980,
                  "src": "14251:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3918,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14251:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3921,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "14279:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3980,
                  "src": "14271:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3920,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14271:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3923,
                  "mutability": "mutable",
                  "name": "approveMax",
                  "nameLocation": "14302:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3980,
                  "src": "14297:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3922,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14297:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3925,
                  "mutability": "mutable",
                  "name": "v",
                  "nameLocation": "14328:1:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3980,
                  "src": "14322:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 3924,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "14322:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3927,
                  "mutability": "mutable",
                  "name": "r",
                  "nameLocation": "14347:1:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3980,
                  "src": "14339:9:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3926,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14339:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3929,
                  "mutability": "mutable",
                  "name": "s",
                  "nameLocation": "14366:1:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3980,
                  "src": "14358:9:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3928,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14358:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14129:244:13"
            },
            "returnParameters": {
              "id": 3935,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3932,
                  "mutability": "mutable",
                  "name": "amountToken",
                  "nameLocation": "14408:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3980,
                  "src": "14400:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3931,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14400:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3934,
                  "mutability": "mutable",
                  "name": "amountETH",
                  "nameLocation": "14429:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3980,
                  "src": "14421:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3933,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14421:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14399:40:13"
            },
            "scope": 6710,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 4063,
            "nodeType": "FunctionDefinition",
            "src": "15461:684:13",
            "body": {
              "id": 4062,
              "nodeType": "Block",
              "src": "15725:420:13",
              "statements": [
                {
                  "assignments": [
                    3999
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3999,
                      "mutability": "mutable",
                      "name": "weth",
                      "nameLocation": "15743:4:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 4062,
                      "src": "15735:12:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3998,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "15735:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4001,
                  "initialValue": {
                    "id": 4000,
                    "name": "WETH09",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3234,
                    "src": "15750:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15735:21:13"
                },
                {
                  "assignments": [
                    4003
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4003,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "15774:13:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 4062,
                      "src": "15766:21:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4002,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15766:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4013,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4010,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "15821:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OpenMevRouter_$6710",
                              "typeString": "contract OpenMevRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OpenMevRouter_$6710",
                              "typeString": "contract OpenMevRouter"
                            }
                          ],
                          "id": 4009,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15813:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4008,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15813:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15813:13:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 4005,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3983,
                            "src": "15796:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4004,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 435,
                          "src": "15790:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$435_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 4006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15790:12:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$435",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 4007,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 127,
                      "src": "15790:22:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 4012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15790:37:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15766:61:13"
                },
                {
                  "expression": {
                    "id": 4028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        {
                          "id": 4014,
                          "name": "amountETH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3996,
                          "src": "15840:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 4015,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "15837:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_uint256_$",
                        "typeString": "tuple(,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4017,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3983,
                          "src": "15869:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 4018,
                          "name": "weth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3999,
                          "src": "15876:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 4019,
                          "name": "liquidity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3985,
                          "src": "15882:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 4020,
                          "name": "amountTokenMin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3987,
                          "src": "15893:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 4021,
                          "name": "amountETHMin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3989,
                          "src": "15909:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 4024,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "15931:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OpenMevRouter_$6710",
                                "typeString": "contract OpenMevRouter"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_OpenMevRouter_$6710",
                                "typeString": "contract OpenMevRouter"
                              }
                            ],
                            "id": 4023,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "15923:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4022,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "15923:7:13",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15923:13:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 4026,
                          "name": "deadline",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3993,
                          "src": "15938:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 4016,
                        "name": "removeLiquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3740,
                        "src": "15853:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address,address,uint256,uint256,uint256,address,uint256) returns (uint256,uint256)"
                        }
                      },
                      "id": 4027,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15853:94:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "15837:110:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4029,
                  "nodeType": "ExpressionStatement",
                  "src": "15837:110:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4034,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3991,
                        "src": "15983:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 4041,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "16018:4:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_OpenMevRouter_$6710",
                                    "typeString": "contract OpenMevRouter"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_OpenMevRouter_$6710",
                                    "typeString": "contract OpenMevRouter"
                                  }
                                ],
                                "id": 4040,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "16010:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 4039,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "16010:7:13",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4042,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16010:13:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 4036,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3983,
                                  "src": "15993:5:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4035,
                                "name": "ERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 435,
                                "src": "15987:5:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC20_$435_$",
                                  "typeString": "type(contract ERC20)"
                                }
                              },
                              "id": 4037,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15987:12:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$435",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 4038,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 127,
                            "src": "15987:22:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 4043,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15987:37:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 4044,
                          "name": "balanceBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4003,
                          "src": "16027:13:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15987:53:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 4031,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3983,
                            "src": "15963:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4030,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 435,
                          "src": "15957:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$435_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 4032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15957:12:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$435",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 4033,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7597,
                      "src": "15957:25:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$435_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$435_$",
                        "typeString": "function (contract ERC20,address,uint256)"
                      }
                    },
                    "id": 4046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15957:84:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4047,
                  "nodeType": "ExpressionStatement",
                  "src": "15957:84:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4052,
                        "name": "amountETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3996,
                        "src": "16072:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 4049,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3999,
                            "src": "16057:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4048,
                          "name": "IWETH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1763,
                          "src": "16051:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IWETH_$1763_$",
                            "typeString": "type(contract IWETH)"
                          }
                        },
                        "id": 4050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16051:11:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IWETH_$1763",
                          "typeString": "contract IWETH"
                        }
                      },
                      "id": 4051,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1762,
                      "src": "16051:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 4053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16051:31:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4054,
                  "nodeType": "ExpressionStatement",
                  "src": "16051:31:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4058,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3991,
                        "src": "16124:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4059,
                        "name": "amountETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3996,
                        "src": "16128:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4055,
                        "name": "SafeTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7618,
                        "src": "16092:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeTransferLib_$7618_$",
                          "typeString": "type(library SafeTransferLib)"
                        }
                      },
                      "id": 4057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7555,
                      "src": "16092:31:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16092:46:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4061,
                  "nodeType": "ExpressionStatement",
                  "src": "16092:46:13"
                }
              ]
            },
            "baseFunctions": [
              958
            ],
            "documentation": {
              "id": 3981,
              "nodeType": "StructuredDocumentation",
              "src": "14854:602:13",
              "text": "@notice Identical to removeLiquidityETH, but succeeds for tokens that take a fee on transfer. msg.sender should have already given the router an allowance of at least liquidity on the pool.\n @param token Token in pool\n @param liquidity Amount of liquidity tokens to remove\n @param amountTokenMin Minimum amount of token, can be 0\n @param amountETHMin Minimum amount of ETH, can be 0\n @param to Address to receive pool tokens\n @param deadline Unix timestamp in seconds after which the transaction will revert\n @return amountETH Amount of ETH received"
            },
            "functionSelector": "af2979eb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeLiquidityETHSupportingFeeOnTransferTokens",
            "nameLocation": "15470:47:13",
            "parameters": {
              "id": 3994,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3983,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "15535:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4063,
                  "src": "15527:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3982,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15527:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3985,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "15558:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4063,
                  "src": "15550:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3984,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15550:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3987,
                  "mutability": "mutable",
                  "name": "amountTokenMin",
                  "nameLocation": "15585:14:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4063,
                  "src": "15577:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3986,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15577:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3989,
                  "mutability": "mutable",
                  "name": "amountETHMin",
                  "nameLocation": "15617:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4063,
                  "src": "15609:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3988,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15609:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3991,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "15647:2:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4063,
                  "src": "15639:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3990,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15639:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3993,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "15667:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4063,
                  "src": "15659:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3992,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15659:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15517:164:13"
            },
            "returnParameters": {
              "id": 3997,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3996,
                  "mutability": "mutable",
                  "name": "amountETH",
                  "nameLocation": "15714:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4063,
                  "src": "15706:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3995,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15706:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15705:19:13"
            },
            "scope": 6710,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 4131,
            "nodeType": "FunctionDefinition",
            "src": "16950:860:13",
            "body": {
              "id": 4130,
              "nodeType": "Block",
              "src": "17306:504:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4099,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "17420:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "17420:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 4103,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "17452:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OpenMevRouter_$6710",
                              "typeString": "contract OpenMevRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OpenMevRouter_$6710",
                              "typeString": "contract OpenMevRouter"
                            }
                          ],
                          "id": 4102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17444:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4101,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17444:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17444:13:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "condition": {
                          "id": 4105,
                          "name": "approveMax",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4078,
                          "src": "17471:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "id": 4111,
                          "name": "liquidity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4068,
                          "src": "17504:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "17471:42:13",
                        "trueExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 4108,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "17489:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 4107,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "17489:7:13",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                }
                              ],
                              "id": 4106,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "17484:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 4109,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17484:13:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_uint256",
                              "typeString": "type(uint256)"
                            }
                          },
                          "id": 4110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "src": "17484:17:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4113,
                        "name": "deadline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4076,
                        "src": "17527:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4114,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4080,
                        "src": "17549:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 4115,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4082,
                        "src": "17564:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 4116,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4084,
                        "src": "17579:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 4092,
                                  "name": "OpenMevLibrary",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3158,
                                  "src": "17354:14:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                                    "typeString": "type(library OpenMevLibrary)"
                                  }
                                },
                                "id": 4093,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "SUSHI_FACTORY",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1799,
                                "src": "17354:28:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 4094,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4066,
                                "src": "17384:5:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 4095,
                                "name": "WETH09",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3234,
                                "src": "17391:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 4090,
                                "name": "OpenMevLibrary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3158,
                                "src": "17331:14:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                                  "typeString": "type(library OpenMevLibrary)"
                                }
                              },
                              "id": 4091,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "pairFor",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1906,
                              "src": "17331:22:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_address_$",
                                "typeString": "function (address,address,address) pure returns (address)"
                              }
                            },
                            "id": 4096,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17331:67:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4089,
                          "name": "IUniswapV2Pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1350,
                          "src": "17316:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$1350_$",
                            "typeString": "type(contract IUniswapV2Pair)"
                          }
                        },
                        "id": 4097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17316:83:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2Pair_$1350",
                          "typeString": "contract IUniswapV2Pair"
                        }
                      },
                      "id": 4098,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "permit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1225,
                      "src": "17316:90:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
                      }
                    },
                    "id": 4117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17316:274:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4118,
                  "nodeType": "ExpressionStatement",
                  "src": "17316:274:13"
                },
                {
                  "expression": {
                    "id": 4128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4119,
                      "name": "amountETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4087,
                      "src": "17600:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4121,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4066,
                          "src": "17673:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 4122,
                          "name": "liquidity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4068,
                          "src": "17692:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 4123,
                          "name": "amountTokenMin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4070,
                          "src": "17715:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 4124,
                          "name": "amountETHMin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4072,
                          "src": "17743:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 4125,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4074,
                          "src": "17769:2:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 4126,
                          "name": "deadline",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4076,
                          "src": "17785:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 4120,
                        "name": "removeLiquidityETHSupportingFeeOnTransferTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4063,
                        "src": "17612:47:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (address,uint256,uint256,uint256,address,uint256) returns (uint256)"
                        }
                      },
                      "id": 4127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17612:191:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17600:203:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4129,
                  "nodeType": "ExpressionStatement",
                  "src": "17600:203:13"
                }
              ]
            },
            "baseFunctions": [
              983
            ],
            "documentation": {
              "id": 4064,
              "nodeType": "StructuredDocumentation",
              "src": "16151:794:13",
              "text": "@notice Identical to removeLiquidityETHWithPermit, but succeeds for tokens that take a fee on transfer.\n @param token Token in pool\n @param liquidity Amount of liquidity tokens to remove\n @param amountTokenMin Minimum amount of token, can be 0\n @param amountETHMin Minimum amount of ETH, can be 0\n @param to Address to receive pool tokens\n @param deadline Unix timestamp in seconds after which the transaction will revert\n @param approveMax Whether or not the approval amount in the signature is for liquidity or uint(-1)\n @param v The v component of the permit signature\n @param r The r component of the permit signature\n @param s The s component of the permit signature\n @return amountETH Amount of ETH received"
            },
            "functionSelector": "5b0d5984",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
            "nameLocation": "16959:57:13",
            "parameters": {
              "id": 4085,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4066,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "17034:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4131,
                  "src": "17026:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4065,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17026:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4068,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "17057:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4131,
                  "src": "17049:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4067,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17049:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4070,
                  "mutability": "mutable",
                  "name": "amountTokenMin",
                  "nameLocation": "17084:14:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4131,
                  "src": "17076:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4069,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17076:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4072,
                  "mutability": "mutable",
                  "name": "amountETHMin",
                  "nameLocation": "17116:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4131,
                  "src": "17108:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4071,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17108:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4074,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "17146:2:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4131,
                  "src": "17138:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4073,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17138:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4076,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "17166:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4131,
                  "src": "17158:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4075,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17158:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4078,
                  "mutability": "mutable",
                  "name": "approveMax",
                  "nameLocation": "17189:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4131,
                  "src": "17184:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4077,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "17184:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4080,
                  "mutability": "mutable",
                  "name": "v",
                  "nameLocation": "17215:1:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4131,
                  "src": "17209:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 4079,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "17209:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4082,
                  "mutability": "mutable",
                  "name": "r",
                  "nameLocation": "17234:1:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4131,
                  "src": "17226:9:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4081,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "17226:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4084,
                  "mutability": "mutable",
                  "name": "s",
                  "nameLocation": "17253:1:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4131,
                  "src": "17245:9:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4083,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "17245:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17016:244:13"
            },
            "returnParameters": {
              "id": 4088,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4087,
                  "mutability": "mutable",
                  "name": "amountETH",
                  "nameLocation": "17295:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4131,
                  "src": "17287:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4086,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17287:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17286:19:13"
            },
            "scope": 6710,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 4251,
            "nodeType": "FunctionDefinition",
            "src": "18009:812:13",
            "body": {
              "id": 4250,
              "nodeType": "Block",
              "src": "18153:668:13",
              "statements": [
                {
                  "assignments": [
                    4145
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4145,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "18171:6:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 4250,
                      "src": "18163:14:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4144,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18163:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4148,
                  "initialValue": {
                    "expression": {
                      "id": 4146,
                      "name": "swaps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4138,
                      "src": "18180:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                      }
                    },
                    "id": 4147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "18180:12:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18163:29:13"
                },
                {
                  "expression": {
                    "id": 4157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4149,
                      "name": "amounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4142,
                      "src": "18202:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 4154,
                              "name": "length",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4145,
                              "src": "18231:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4153,
                            "name": "_inc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6685,
                            "src": "18226:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) pure returns (uint256)"
                            }
                          },
                          "id": 4155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18226:12:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 4152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "18212:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (uint256[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 4150,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "18216:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 4151,
                          "nodeType": "ArrayTypeName",
                          "src": "18216:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        }
                      },
                      "id": 4156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18212:27:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "18202:37:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 4158,
                  "nodeType": "ExpressionStatement",
                  "src": "18202:37:13"
                },
                {
                  "expression": {
                    "id": 4166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4159,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4142,
                        "src": "18249:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 4161,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 4160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18257:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "18249:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 4162,
                          "name": "swaps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4138,
                          "src": "18262:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                          }
                        },
                        "id": 4164,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 4163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18268:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "18262:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$1796_memory_ptr",
                          "typeString": "struct OpenMevLibrary.Swap memory"
                        }
                      },
                      "id": 4165,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amountIn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1793,
                      "src": "18262:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18249:30:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4167,
                  "nodeType": "ExpressionStatement",
                  "src": "18249:30:13"
                },
                {
                  "body": {
                    "id": 4248,
                    "nodeType": "Block",
                    "src": "18330:485:13",
                    "statements": [
                      {
                        "assignments": [
                          4181
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4181,
                            "mutability": "mutable",
                            "name": "amountOut",
                            "nameLocation": "18352:9:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 4248,
                            "src": "18344:17:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4180,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "18344:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4186,
                        "initialValue": {
                          "expression": {
                            "baseExpression": {
                              "id": 4182,
                              "name": "swaps",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4138,
                              "src": "18364:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                              }
                            },
                            "id": 4184,
                            "indexExpression": {
                              "id": 4183,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4169,
                              "src": "18370:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "18364:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Swap_$1796_memory_ptr",
                              "typeString": "struct OpenMevLibrary.Swap memory"
                            }
                          },
                          "id": 4185,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amountOut",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1795,
                          "src": "18364:18:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18344:38:13"
                      },
                      {
                        "id": 4239,
                        "nodeType": "Block",
                        "src": "18396:367:13",
                        "statements": [
                          {
                            "assignments": [
                              4188,
                              4190
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 4188,
                                "mutability": "mutable",
                                "name": "amount0Out",
                                "nameLocation": "18423:10:13",
                                "nodeType": "VariableDeclaration",
                                "scope": 4239,
                                "src": "18415:18:13",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 4187,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "18415:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              },
                              {
                                "constant": false,
                                "id": 4190,
                                "mutability": "mutable",
                                "name": "amount1Out",
                                "nameLocation": "18443:10:13",
                                "nodeType": "VariableDeclaration",
                                "scope": 4239,
                                "src": "18435:18:13",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 4189,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "18435:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 4208,
                            "initialValue": {
                              "condition": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 4191,
                                    "name": "swaps",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4138,
                                    "src": "18457:5:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                                    }
                                  },
                                  "id": 4193,
                                  "indexExpression": {
                                    "id": 4192,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4169,
                                    "src": "18463:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "18457:8:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Swap_$1796_memory_ptr",
                                    "typeString": "struct OpenMevLibrary.Swap memory"
                                  }
                                },
                                "id": 4194,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "isReverse",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1783,
                                "src": "18457:18:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseExpression": {
                                "components": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 4203,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "18553:1:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 4202,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "18545:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 4201,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "18545:7:13",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 4204,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "18545:10:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 4205,
                                    "name": "amountOut",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4181,
                                    "src": "18557:9:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 4206,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "18544:23:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                                  "typeString": "tuple(uint256,uint256)"
                                }
                              },
                              "id": 4207,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "Conditional",
                              "src": "18457:110:13",
                              "trueExpression": {
                                "components": [
                                  {
                                    "id": 4195,
                                    "name": "amountOut",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4181,
                                    "src": "18499:9:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 4198,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "18518:1:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 4197,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "18510:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 4196,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "18510:7:13",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 4199,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "18510:10:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 4200,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "18498:23:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                                  "typeString": "tuple(uint256,uint256)"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                                "typeString": "tuple(uint256,uint256)"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "18414:153:13"
                          },
                          {
                            "assignments": [
                              4210
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 4210,
                                "mutability": "mutable",
                                "name": "to",
                                "nameLocation": "18593:2:13",
                                "nodeType": "VariableDeclaration",
                                "scope": 4239,
                                "src": "18585:10:13",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "typeName": {
                                  "id": 4209,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "18585:7:13",
                                  "stateMutability": "nonpayable",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 4224,
                            "initialValue": {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 4215,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 4211,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4169,
                                  "src": "18598:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "id": 4213,
                                      "name": "length",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4145,
                                      "src": "18607:6:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 4212,
                                    "name": "_dec",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6699,
                                    "src": "18602:4:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                                      "typeString": "function (uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 4214,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "18602:12:13",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "18598:16:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseExpression": {
                                "id": 4222,
                                "name": "_to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4134,
                                "src": "18639:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 4223,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "Conditional",
                              "src": "18598:44:13",
                              "trueExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 4216,
                                    "name": "swaps",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4138,
                                    "src": "18617:5:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                                    }
                                  },
                                  "id": 4220,
                                  "indexExpression": {
                                    "arguments": [
                                      {
                                        "id": 4218,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4169,
                                        "src": "18628:1:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 4217,
                                      "name": "_inc",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6685,
                                      "src": "18623:4:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                                        "typeString": "function (uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 4219,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "18623:7:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "18617:14:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Swap_$1796_memory_ptr",
                                    "typeString": "struct OpenMevLibrary.Swap memory"
                                  }
                                },
                                "id": 4221,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "pair",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1791,
                                "src": "18617:19:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "18585:57:13"
                          },
                          {
                            "assignments": [
                              4226
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 4226,
                                "mutability": "mutable",
                                "name": "pair",
                                "nameLocation": "18668:4:13",
                                "nodeType": "VariableDeclaration",
                                "scope": 4239,
                                "src": "18660:12:13",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "typeName": {
                                  "id": 4225,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "18660:7:13",
                                  "stateMutability": "nonpayable",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 4231,
                            "initialValue": {
                              "expression": {
                                "baseExpression": {
                                  "id": 4227,
                                  "name": "swaps",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4138,
                                  "src": "18675:5:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                                  }
                                },
                                "id": 4229,
                                "indexExpression": {
                                  "id": 4228,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4169,
                                  "src": "18681:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "18675:8:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Swap_$1796_memory_ptr",
                                  "typeString": "struct OpenMevLibrary.Swap memory"
                                }
                              },
                              "id": 4230,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "pair",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1791,
                              "src": "18675:13:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "18660:28:13"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 4233,
                                  "name": "pair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4226,
                                  "src": "18715:4:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 4234,
                                  "name": "amount0Out",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4188,
                                  "src": "18721:10:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 4235,
                                  "name": "amount1Out",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4190,
                                  "src": "18733:10:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 4236,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4210,
                                  "src": "18745:2:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4232,
                                "name": "_asmSwap",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6222,
                                "src": "18706:8:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                                  "typeString": "function (address,uint256,uint256,address)"
                                }
                              },
                              "id": 4237,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18706:42:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 4238,
                            "nodeType": "ExpressionStatement",
                            "src": "18706:42:13"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "id": 4246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 4240,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4142,
                              "src": "18776:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 4244,
                            "indexExpression": {
                              "arguments": [
                                {
                                  "id": 4242,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4169,
                                  "src": "18789:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 4241,
                                "name": "_inc",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6685,
                                "src": "18784:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (uint256) pure returns (uint256)"
                                }
                              },
                              "id": 4243,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18784:7:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "18776:16:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 4245,
                            "name": "amountOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4181,
                            "src": "18795:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18776:28:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4247,
                        "nodeType": "ExpressionStatement",
                        "src": "18776:28:13"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4171,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4169,
                      "src": "18305:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 4172,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4145,
                      "src": "18309:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18305:10:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4249,
                  "initializationExpression": {
                    "assignments": [
                      4169
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 4169,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "18302:1:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 4249,
                        "src": "18294:9:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4168,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "18294:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 4170,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "18294:9:13"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 4178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 4174,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4169,
                        "src": "18317:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "id": 4176,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4169,
                            "src": "18326:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 4175,
                          "name": "_inc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6685,
                          "src": "18321:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) pure returns (uint256)"
                          }
                        },
                        "id": 4177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18321:7:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "18317:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4179,
                    "nodeType": "ExpressionStatement",
                    "src": "18317:11:13"
                  },
                  "nodeType": "ForStatement",
                  "src": "18289:526:13"
                }
              ]
            },
            "documentation": {
              "id": 4132,
              "nodeType": "StructuredDocumentation",
              "src": "17816:188:13",
              "text": "@notice Internal core swap. Requires the initial amount to have already been sent to the first pair.\n @param _to Address of receiver\n @param swaps Array of user swap data"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_swap",
            "nameLocation": "18018:5:13",
            "parameters": {
              "id": 4139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4134,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "18032:3:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4251,
                  "src": "18024:11:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4133,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18024:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4138,
                  "mutability": "mutable",
                  "name": "swaps",
                  "nameLocation": "18066:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4251,
                  "src": "18037:34:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct OpenMevLibrary.Swap[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4136,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 4135,
                        "name": "OpenMevLibrary.Swap",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1796,
                        "src": "18037:19:13"
                      },
                      "referencedDeclaration": 1796,
                      "src": "18037:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$1796_storage_ptr",
                        "typeString": "struct OpenMevLibrary.Swap"
                      }
                    },
                    "id": 4137,
                    "nodeType": "ArrayTypeName",
                    "src": "18037:21:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Swap_$1796_storage_$dyn_storage_ptr",
                      "typeString": "struct OpenMevLibrary.Swap[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18023:49:13"
            },
            "returnParameters": {
              "id": 4143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4142,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "18140:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4251,
                  "src": "18123:24:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4140,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "18123:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4141,
                    "nodeType": "ArrayTypeName",
                    "src": "18123:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18122:26:13"
            },
            "scope": 6710,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 4359,
            "nodeType": "FunctionDefinition",
            "src": "19884:1010:13",
            "body": {
              "id": 4358,
              "nodeType": "Block",
              "src": "20111:783:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4270,
                        "name": "deadline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4263,
                        "src": "20128:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4269,
                      "name": "ensure",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3318,
                      "src": "20121:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 4271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20121:16:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4272,
                  "nodeType": "ExpressionStatement",
                  "src": "20121:16:13"
                },
                {
                  "assignments": [
                    4274
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4274,
                      "mutability": "mutable",
                      "name": "factory",
                      "nameLocation": "20155:7:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 4358,
                      "src": "20147:15:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4273,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "20147:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4277,
                  "initialValue": {
                    "expression": {
                      "id": 4275,
                      "name": "OpenMevLibrary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3158,
                      "src": "20165:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                        "typeString": "type(library OpenMevLibrary)"
                      }
                    },
                    "id": 4276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "SUSHI_FACTORY",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1799,
                    "src": "20165:28:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20147:46:13"
                },
                {
                  "assignments": [
                    4283
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4283,
                      "mutability": "mutable",
                      "name": "swaps",
                      "nameLocation": "20232:5:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 4358,
                      "src": "20203:34:13",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct OpenMevLibrary.Swap[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 4281,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 4280,
                            "name": "OpenMevLibrary.Swap",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1796,
                            "src": "20203:19:13"
                          },
                          "referencedDeclaration": 1796,
                          "src": "20203:19:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$1796_storage_ptr",
                            "typeString": "struct OpenMevLibrary.Swap"
                          }
                        },
                        "id": 4282,
                        "nodeType": "ArrayTypeName",
                        "src": "20203:21:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Swap_$1796_storage_$dyn_storage_ptr",
                          "typeString": "struct OpenMevLibrary.Swap[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4290,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4286,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4274,
                        "src": "20267:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4287,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4254,
                        "src": "20276:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4288,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4259,
                        "src": "20286:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      ],
                      "expression": {
                        "id": 4284,
                        "name": "OpenMevLibrary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3158,
                        "src": "20240:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                          "typeString": "type(library OpenMevLibrary)"
                        }
                      },
                      "id": 4285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getSwapsOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2474,
                      "src": "20240:26:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (address,uint256,address[] memory) view returns (struct OpenMevLibrary.Swap memory[] memory)"
                      }
                    },
                    "id": 4289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20240:51:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20203:88:13"
                },
                {
                  "assignments": [
                    4292
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4292,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "20309:6:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 4358,
                      "src": "20301:14:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4291,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "20301:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4295,
                  "initialValue": {
                    "expression": {
                      "id": 4293,
                      "name": "swaps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4283,
                      "src": "20318:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                      }
                    },
                    "id": 4294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "20318:12:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20301:29:13"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 4296,
                          "name": "swaps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4283,
                          "src": "20344:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                          }
                        },
                        "id": 4300,
                        "indexExpression": {
                          "arguments": [
                            {
                              "id": 4298,
                              "name": "length",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4292,
                              "src": "20355:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4297,
                            "name": "_dec",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6699,
                            "src": "20350:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) pure returns (uint256)"
                            }
                          },
                          "id": 4299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20350:12:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "20344:19:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$1796_memory_ptr",
                          "typeString": "struct OpenMevLibrary.Swap memory"
                        }
                      },
                      "id": 4301,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amountOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1795,
                      "src": "20344:29:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 4302,
                      "name": "amountOutMin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4256,
                      "src": "20376:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "20344:44:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4330,
                  "nodeType": "IfStatement",
                  "src": "20340:357:13",
                  "trueBody": {
                    "id": 4329,
                    "nodeType": "Block",
                    "src": "20390:307:13",
                    "statements": [
                      {
                        "expression": {
                          "id": 4306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4304,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4274,
                            "src": "20492:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 4305,
                            "name": "BACKUP_FACTORY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3237,
                            "src": "20502:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "20492:24:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 4307,
                        "nodeType": "ExpressionStatement",
                        "src": "20492:24:13"
                      },
                      {
                        "expression": {
                          "id": 4315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4308,
                            "name": "swaps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4283,
                            "src": "20530:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 4311,
                                "name": "factory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4274,
                                "src": "20565:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 4312,
                                "name": "amountIn",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4254,
                                "src": "20574:8:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 4313,
                                "name": "path",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4259,
                                "src": "20584:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              ],
                              "expression": {
                                "id": 4309,
                                "name": "OpenMevLibrary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3158,
                                "src": "20538:14:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                                  "typeString": "type(library OpenMevLibrary)"
                                }
                              },
                              "id": 4310,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getSwapsOut",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2474,
                              "src": "20538:26:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr_$",
                                "typeString": "function (address,uint256,address[] memory) view returns (struct OpenMevLibrary.Swap memory[] memory)"
                              }
                            },
                            "id": 4314,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20538:51:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                            }
                          },
                          "src": "20530:59:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                          }
                        },
                        "id": 4316,
                        "nodeType": "ExpressionStatement",
                        "src": "20530:59:13"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 4317,
                                "name": "swaps",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4283,
                                "src": "20607:5:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                                }
                              },
                              "id": 4321,
                              "indexExpression": {
                                "arguments": [
                                  {
                                    "id": 4319,
                                    "name": "length",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4292,
                                    "src": "20618:6:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 4318,
                                  "name": "_dec",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6699,
                                  "src": "20613:4:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 4320,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "20613:12:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "20607:19:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$1796_memory_ptr",
                                "typeString": "struct OpenMevLibrary.Swap memory"
                              }
                            },
                            "id": 4322,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amountOut",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1795,
                            "src": "20607:29:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 4323,
                            "name": "amountOutMin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4256,
                            "src": "20639:12:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "20607:44:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4328,
                        "nodeType": "IfStatement",
                        "src": "20603:83:13",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 4325,
                              "name": "InsufficientOutputAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3209,
                              "src": "20660:24:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 4326,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20660:26:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 4327,
                          "nodeType": "RevertStatement",
                          "src": "20653:33:13"
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4337,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "20738:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "20738:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 4339,
                            "name": "swaps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4283,
                            "src": "20750:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                            }
                          },
                          "id": 4341,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 4340,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20756:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "20750:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$1796_memory_ptr",
                            "typeString": "struct OpenMevLibrary.Swap memory"
                          }
                        },
                        "id": 4342,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "pair",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1791,
                        "src": "20750:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4343,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4254,
                        "src": "20765:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 4332,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4259,
                              "src": "20712:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            "id": 4334,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 4333,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20717:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "20712:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4331,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 435,
                          "src": "20706:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$435_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 4335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20706:14:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$435",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 4336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7577,
                      "src": "20706:31:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$435_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$435_$",
                        "typeString": "function (contract ERC20,address,address,uint256)"
                      }
                    },
                    "id": 4344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20706:68:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4345,
                  "nodeType": "ExpressionStatement",
                  "src": "20706:68:13"
                },
                {
                  "expression": {
                    "id": 4351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4346,
                      "name": "amounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4267,
                      "src": "20784:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4348,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4261,
                          "src": "20800:2:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 4349,
                          "name": "swaps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4283,
                          "src": "20804:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                          }
                        ],
                        "id": 4347,
                        "name": "_swap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4251,
                        "src": "20794:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (address,struct OpenMevLibrary.Swap memory[] memory) returns (uint256[] memory)"
                        }
                      },
                      "id": 4350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "20794:16:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "20784:26:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 4352,
                  "nodeType": "ExpressionStatement",
                  "src": "20784:26:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4354,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4274,
                        "src": "20872:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4355,
                        "name": "swaps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4283,
                        "src": "20881:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                        }
                      ],
                      "id": 4353,
                      "name": "_backrunSwaps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5854,
                      "src": "20858:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,struct OpenMevLibrary.Swap memory[] memory)"
                      }
                    },
                    "id": 4356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20858:29:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4357,
                  "nodeType": "ExpressionStatement",
                  "src": "20858:29:13"
                }
              ]
            },
            "baseFunctions": [
              805
            ],
            "documentation": {
              "id": 4252,
              "nodeType": "StructuredDocumentation",
              "src": "18827:1052:13",
              "text": "@notice Swaps an exact amount of input tokens for as many output tokens as possible, along the route determined by the path. The first element of path is the input token, the last is the output token, and any intermediate elements represent intermediate pairs to trade through. msg.sender should have already given the router an allowance of at least amountIn on the input token.\n @dev Require has been replaced with revert for gas optimization. Fallback alternate router check for insufficient output amount. Attempt to back-run swaps.\n @param amountIn Amount of input tokens to send.\n @param amountOutMin Minimum amount of output tokens that must be received\n @param path Array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity\n @param to Address of receiver\n @param deadline Unix timestamp in seconds after which the transaction will revert\n @return amounts Array of input token amount and all subsequent output token amounts"
            },
            "functionSelector": "38ed1739",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapExactTokensForTokens",
            "nameLocation": "19893:24:13",
            "parameters": {
              "id": 4264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4254,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "19935:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4359,
                  "src": "19927:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4253,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19927:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4256,
                  "mutability": "mutable",
                  "name": "amountOutMin",
                  "nameLocation": "19961:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4359,
                  "src": "19953:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4255,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19953:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4259,
                  "mutability": "mutable",
                  "name": "path",
                  "nameLocation": "20002:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4359,
                  "src": "19983:23:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4257,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "19983:7:13",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 4258,
                    "nodeType": "ArrayTypeName",
                    "src": "19983:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4261,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "20024:2:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4359,
                  "src": "20016:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4260,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20016:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4263,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "20044:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4359,
                  "src": "20036:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4262,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20036:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19917:141:13"
            },
            "returnParameters": {
              "id": 4268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4267,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "20102:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4359,
                  "src": "20085:24:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4265,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "20085:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4266,
                    "nodeType": "ArrayTypeName",
                    "src": "20085:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20084:26:13"
            },
            "scope": 6710,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 4461,
            "nodeType": "FunctionDefinition",
            "src": "21788:1027:13",
            "body": {
              "id": 4460,
              "nodeType": "Block",
              "src": "22015:800:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4378,
                        "name": "deadline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4371,
                        "src": "22032:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4377,
                      "name": "ensure",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3318,
                      "src": "22025:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 4379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22025:16:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4380,
                  "nodeType": "ExpressionStatement",
                  "src": "22025:16:13"
                },
                {
                  "assignments": [
                    4382
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4382,
                      "mutability": "mutable",
                      "name": "factory",
                      "nameLocation": "22059:7:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 4460,
                      "src": "22051:15:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4381,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "22051:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4385,
                  "initialValue": {
                    "expression": {
                      "id": 4383,
                      "name": "OpenMevLibrary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3158,
                      "src": "22069:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                        "typeString": "type(library OpenMevLibrary)"
                      }
                    },
                    "id": 4384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "SUSHI_FACTORY",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1799,
                    "src": "22069:28:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22051:46:13"
                },
                {
                  "assignments": [
                    4391
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4391,
                      "mutability": "mutable",
                      "name": "swaps",
                      "nameLocation": "22212:5:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 4460,
                      "src": "22183:34:13",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct OpenMevLibrary.Swap[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 4389,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 4388,
                            "name": "OpenMevLibrary.Swap",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1796,
                            "src": "22183:19:13"
                          },
                          "referencedDeclaration": 1796,
                          "src": "22183:19:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$1796_storage_ptr",
                            "typeString": "struct OpenMevLibrary.Swap"
                          }
                        },
                        "id": 4390,
                        "nodeType": "ArrayTypeName",
                        "src": "22183:21:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Swap_$1796_storage_$dyn_storage_ptr",
                          "typeString": "struct OpenMevLibrary.Swap[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4398,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4394,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4382,
                        "src": "22246:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4395,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4362,
                        "src": "22255:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4396,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4367,
                        "src": "22266:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      ],
                      "expression": {
                        "id": 4392,
                        "name": "OpenMevLibrary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3158,
                        "src": "22220:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                          "typeString": "type(library OpenMevLibrary)"
                        }
                      },
                      "id": 4393,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getSwapsIn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2792,
                      "src": "22220:25:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (address,uint256,address[] memory) view returns (struct OpenMevLibrary.Swap memory[] memory)"
                      }
                    },
                    "id": 4397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22220:51:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22183:88:13"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 4399,
                          "name": "swaps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4391,
                          "src": "22285:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                          }
                        },
                        "id": 4401,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 4400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "22291:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "22285:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$1796_memory_ptr",
                          "typeString": "struct OpenMevLibrary.Swap memory"
                        }
                      },
                      "id": 4402,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amountIn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1793,
                      "src": "22285:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 4403,
                      "name": "amountInMax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4364,
                      "src": "22305:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "22285:31:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4429,
                  "nodeType": "IfStatement",
                  "src": "22281:327:13",
                  "trueBody": {
                    "id": 4428,
                    "nodeType": "Block",
                    "src": "22318:290:13",
                    "statements": [
                      {
                        "expression": {
                          "id": 4407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4405,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4382,
                            "src": "22332:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 4406,
                            "name": "BACKUP_FACTORY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3237,
                            "src": "22342:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "22332:24:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 4408,
                        "nodeType": "ExpressionStatement",
                        "src": "22332:24:13"
                      },
                      {
                        "expression": {
                          "id": 4416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4409,
                            "name": "swaps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4391,
                            "src": "22458:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 4412,
                                "name": "factory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4382,
                                "src": "22492:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 4413,
                                "name": "amountOut",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4362,
                                "src": "22501:9:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 4414,
                                "name": "path",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4367,
                                "src": "22512:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              ],
                              "expression": {
                                "id": 4410,
                                "name": "OpenMevLibrary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3158,
                                "src": "22466:14:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                                  "typeString": "type(library OpenMevLibrary)"
                                }
                              },
                              "id": 4411,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getSwapsIn",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2792,
                              "src": "22466:25:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr_$",
                                "typeString": "function (address,uint256,address[] memory) view returns (struct OpenMevLibrary.Swap memory[] memory)"
                              }
                            },
                            "id": 4415,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "22466:51:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                            }
                          },
                          "src": "22458:59:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                          }
                        },
                        "id": 4417,
                        "nodeType": "ExpressionStatement",
                        "src": "22458:59:13"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 4418,
                                "name": "swaps",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4391,
                                "src": "22535:5:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                                }
                              },
                              "id": 4420,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 4419,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "22541:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "22535:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$1796_memory_ptr",
                                "typeString": "struct OpenMevLibrary.Swap memory"
                              }
                            },
                            "id": 4421,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amountIn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1793,
                            "src": "22535:17:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 4422,
                            "name": "amountInMax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4364,
                            "src": "22555:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "22535:31:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4427,
                        "nodeType": "IfStatement",
                        "src": "22531:66:13",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 4424,
                              "name": "ExcessiveInputAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3201,
                              "src": "22575:20:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 4425,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "22575:22:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 4426,
                          "nodeType": "RevertStatement",
                          "src": "22568:29:13"
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4436,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "22650:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "22650:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 4438,
                            "name": "swaps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4391,
                            "src": "22662:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                            }
                          },
                          "id": 4440,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 4439,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "22668:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "22662:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$1796_memory_ptr",
                            "typeString": "struct OpenMevLibrary.Swap memory"
                          }
                        },
                        "id": 4441,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "pair",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1791,
                        "src": "22662:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 4442,
                            "name": "swaps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4391,
                            "src": "22677:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                            }
                          },
                          "id": 4444,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 4443,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "22683:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "22677:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$1796_memory_ptr",
                            "typeString": "struct OpenMevLibrary.Swap memory"
                          }
                        },
                        "id": 4445,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amountIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1793,
                        "src": "22677:17:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 4431,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4367,
                              "src": "22624:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            "id": 4433,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 4432,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22629:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "22624:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4430,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 435,
                          "src": "22618:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$435_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 4434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22618:14:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$435",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 4435,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7577,
                      "src": "22618:31:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$435_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$435_$",
                        "typeString": "function (contract ERC20,address,address,uint256)"
                      }
                    },
                    "id": 4446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22618:77:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4447,
                  "nodeType": "ExpressionStatement",
                  "src": "22618:77:13"
                },
                {
                  "expression": {
                    "id": 4453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4448,
                      "name": "amounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4375,
                      "src": "22705:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4450,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4369,
                          "src": "22721:2:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 4451,
                          "name": "swaps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4391,
                          "src": "22725:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                          }
                        ],
                        "id": 4449,
                        "name": "_swap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4251,
                        "src": "22715:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (address,struct OpenMevLibrary.Swap memory[] memory) returns (uint256[] memory)"
                        }
                      },
                      "id": 4452,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "22715:16:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "22705:26:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 4454,
                  "nodeType": "ExpressionStatement",
                  "src": "22705:26:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4456,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4382,
                        "src": "22793:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4457,
                        "name": "swaps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4391,
                        "src": "22802:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                        }
                      ],
                      "id": 4455,
                      "name": "_backrunSwaps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5854,
                      "src": "22779:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,struct OpenMevLibrary.Swap memory[] memory)"
                      }
                    },
                    "id": 4458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22779:29:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4459,
                  "nodeType": "ExpressionStatement",
                  "src": "22779:29:13"
                }
              ]
            },
            "baseFunctions": [
              822
            ],
            "documentation": {
              "id": 4360,
              "nodeType": "StructuredDocumentation",
              "src": "20900:883:13",
              "text": "@notice Receive an exact amount of output tokens for as few input tokens as possible, along the route determined by the path. msg.sender should have already given the router an allowance of at least amountInMax on the input token.\n @dev Require has been replaced with revert for gas optimization. Fallback alternate router check for insufficient output amount. Attempt to back-run swaps.\n @param amountOut Amount of output tokens to receive\n @param amountInMax Maximum amount of input tokens\n @param path Array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity\n @param to Address of receiver\n @param deadline Unix timestamp in seconds after which the transaction will revert\n @return amounts Array of input token amount and all subsequent output token amounts"
            },
            "functionSelector": "8803dbee",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapTokensForExactTokens",
            "nameLocation": "21797:24:13",
            "parameters": {
              "id": 4372,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4362,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nameLocation": "21839:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4461,
                  "src": "21831:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4361,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21831:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4364,
                  "mutability": "mutable",
                  "name": "amountInMax",
                  "nameLocation": "21866:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4461,
                  "src": "21858:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4363,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21858:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4367,
                  "mutability": "mutable",
                  "name": "path",
                  "nameLocation": "21906:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4461,
                  "src": "21887:23:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4365,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "21887:7:13",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 4366,
                    "nodeType": "ArrayTypeName",
                    "src": "21887:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4369,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "21928:2:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4461,
                  "src": "21920:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4368,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21920:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4371,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "21948:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4461,
                  "src": "21940:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4370,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21940:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21821:141:13"
            },
            "returnParameters": {
              "id": 4376,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4375,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "22006:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4461,
                  "src": "21989:24:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4373,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "21989:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4374,
                    "nodeType": "ArrayTypeName",
                    "src": "21989:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21988:26:13"
            },
            "scope": 6710,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 4590,
            "nodeType": "FunctionDefinition",
            "src": "23650:1116:13",
            "body": {
              "id": 4589,
              "nodeType": "Block",
              "src": "23856:910:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4478,
                        "name": "deadline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4471,
                        "src": "23873:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4477,
                      "name": "ensure",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3318,
                      "src": "23866:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 4479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23866:16:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4480,
                  "nodeType": "ExpressionStatement",
                  "src": "23866:16:13"
                },
                {
                  "assignments": [
                    4482
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4482,
                      "mutability": "mutable",
                      "name": "weth",
                      "nameLocation": "23900:4:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 4589,
                      "src": "23892:12:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4481,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "23892:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4484,
                  "initialValue": {
                    "id": 4483,
                    "name": "WETH09",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3234,
                    "src": "23907:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23892:21:13"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 4485,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4467,
                        "src": "23927:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 4487,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 4486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23932:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "23927:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 4488,
                      "name": "weth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4482,
                      "src": "23938:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "23927:15:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4493,
                  "nodeType": "IfStatement",
                  "src": "23923:41:13",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4490,
                        "name": "InvalidPath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3191,
                        "src": "23951:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 4491,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23951:13:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4492,
                    "nodeType": "RevertStatement",
                    "src": "23944:20:13"
                  }
                },
                {
                  "assignments": [
                    4495
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4495,
                      "mutability": "mutable",
                      "name": "factory",
                      "nameLocation": "23982:7:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 4589,
                      "src": "23974:15:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4494,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "23974:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4498,
                  "initialValue": {
                    "expression": {
                      "id": 4496,
                      "name": "OpenMevLibrary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3158,
                      "src": "23992:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                        "typeString": "type(library OpenMevLibrary)"
                      }
                    },
                    "id": 4497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "SUSHI_FACTORY",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1799,
                    "src": "23992:28:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23974:46:13"
                },
                {
                  "assignments": [
                    4504
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4504,
                      "mutability": "mutable",
                      "name": "swaps",
                      "nameLocation": "24059:5:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 4589,
                      "src": "24030:34:13",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct OpenMevLibrary.Swap[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 4502,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 4501,
                            "name": "OpenMevLibrary.Swap",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1796,
                            "src": "24030:19:13"
                          },
                          "referencedDeclaration": 1796,
                          "src": "24030:19:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$1796_storage_ptr",
                            "typeString": "struct OpenMevLibrary.Swap"
                          }
                        },
                        "id": 4503,
                        "nodeType": "ArrayTypeName",
                        "src": "24030:21:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Swap_$1796_storage_$dyn_storage_ptr",
                          "typeString": "struct OpenMevLibrary.Swap[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4512,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4507,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4495,
                        "src": "24094:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 4508,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "24103:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "24103:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4510,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4467,
                        "src": "24114:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      ],
                      "expression": {
                        "id": 4505,
                        "name": "OpenMevLibrary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3158,
                        "src": "24067:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                          "typeString": "type(library OpenMevLibrary)"
                        }
                      },
                      "id": 4506,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getSwapsOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2474,
                      "src": "24067:26:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (address,uint256,address[] memory) view returns (struct OpenMevLibrary.Swap memory[] memory)"
                      }
                    },
                    "id": 4511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24067:52:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24030:89:13"
                },
                {
                  "assignments": [
                    4514
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4514,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "24137:6:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 4589,
                      "src": "24129:14:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4513,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "24129:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4517,
                  "initialValue": {
                    "expression": {
                      "id": 4515,
                      "name": "swaps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4504,
                      "src": "24146:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                      }
                    },
                    "id": 4516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "24146:12:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24129:29:13"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 4518,
                          "name": "swaps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4504,
                          "src": "24172:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                          }
                        },
                        "id": 4522,
                        "indexExpression": {
                          "arguments": [
                            {
                              "id": 4520,
                              "name": "length",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4514,
                              "src": "24183:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4519,
                            "name": "_dec",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6699,
                            "src": "24178:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) pure returns (uint256)"
                            }
                          },
                          "id": 4521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24178:12:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "24172:19:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$1796_memory_ptr",
                          "typeString": "struct OpenMevLibrary.Swap memory"
                        }
                      },
                      "id": 4523,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amountOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1795,
                      "src": "24172:29:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 4524,
                      "name": "amountOutMin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4464,
                      "src": "24204:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "24172:44:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4553,
                  "nodeType": "IfStatement",
                  "src": "24168:358:13",
                  "trueBody": {
                    "id": 4552,
                    "nodeType": "Block",
                    "src": "24218:308:13",
                    "statements": [
                      {
                        "expression": {
                          "id": 4528,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4526,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4495,
                            "src": "24232:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 4527,
                            "name": "BACKUP_FACTORY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3237,
                            "src": "24242:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "24232:24:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 4529,
                        "nodeType": "ExpressionStatement",
                        "src": "24232:24:13"
                      },
                      {
                        "expression": {
                          "id": 4538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4530,
                            "name": "swaps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4504,
                            "src": "24358:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 4533,
                                "name": "factory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4495,
                                "src": "24393:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 4534,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "24402:3:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 4535,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "24402:9:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 4536,
                                "name": "path",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4467,
                                "src": "24413:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              ],
                              "expression": {
                                "id": 4531,
                                "name": "OpenMevLibrary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3158,
                                "src": "24366:14:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                                  "typeString": "type(library OpenMevLibrary)"
                                }
                              },
                              "id": 4532,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getSwapsOut",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2474,
                              "src": "24366:26:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr_$",
                                "typeString": "function (address,uint256,address[] memory) view returns (struct OpenMevLibrary.Swap memory[] memory)"
                              }
                            },
                            "id": 4537,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "24366:52:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                            }
                          },
                          "src": "24358:60:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                          }
                        },
                        "id": 4539,
                        "nodeType": "ExpressionStatement",
                        "src": "24358:60:13"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 4540,
                                "name": "swaps",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4504,
                                "src": "24436:5:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                                }
                              },
                              "id": 4544,
                              "indexExpression": {
                                "arguments": [
                                  {
                                    "id": 4542,
                                    "name": "length",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4514,
                                    "src": "24447:6:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 4541,
                                  "name": "_dec",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6699,
                                  "src": "24442:4:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 4543,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "24442:12:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "24436:19:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$1796_memory_ptr",
                                "typeString": "struct OpenMevLibrary.Swap memory"
                              }
                            },
                            "id": 4545,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amountOut",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1795,
                            "src": "24436:29:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 4546,
                            "name": "amountOutMin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4464,
                            "src": "24468:12:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "24436:44:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4551,
                        "nodeType": "IfStatement",
                        "src": "24432:83:13",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 4548,
                              "name": "InsufficientOutputAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3209,
                              "src": "24489:24:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 4549,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "24489:26:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 4550,
                          "nodeType": "RevertStatement",
                          "src": "24482:33:13"
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 4555,
                              "name": "weth",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4482,
                              "src": "24542:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 4554,
                            "name": "IWETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1763,
                            "src": "24536:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IWETH_$1763_$",
                              "typeString": "type(contract IWETH)"
                            }
                          },
                          "id": 4556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24536:11:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IWETH_$1763",
                            "typeString": "contract IWETH"
                          }
                        },
                        "id": 4557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1748,
                        "src": "24536:19:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 4560,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 4558,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "24564:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "24564:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "24536:39:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 4561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24536:41:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4562,
                  "nodeType": "ExpressionStatement",
                  "src": "24536:41:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 4567,
                            "name": "swaps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4504,
                            "src": "24612:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                            }
                          },
                          "id": 4569,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 4568,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "24618:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "24612:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$1796_memory_ptr",
                            "typeString": "struct OpenMevLibrary.Swap memory"
                          }
                        },
                        "id": 4570,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "pair",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1791,
                        "src": "24612:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 4571,
                            "name": "swaps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4504,
                            "src": "24627:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                            }
                          },
                          "id": 4573,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 4572,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "24633:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "24627:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$1796_memory_ptr",
                            "typeString": "struct OpenMevLibrary.Swap memory"
                          }
                        },
                        "id": 4574,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amountIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1793,
                        "src": "24627:17:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 4564,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4482,
                            "src": "24593:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4563,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 435,
                          "src": "24587:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$435_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 4565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24587:11:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$435",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 4566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7597,
                      "src": "24587:24:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$435_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$435_$",
                        "typeString": "function (contract ERC20,address,uint256)"
                      }
                    },
                    "id": 4575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24587:58:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4576,
                  "nodeType": "ExpressionStatement",
                  "src": "24587:58:13"
                },
                {
                  "expression": {
                    "id": 4582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4577,
                      "name": "amounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4475,
                      "src": "24655:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4579,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4469,
                          "src": "24671:2:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 4580,
                          "name": "swaps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4504,
                          "src": "24675:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                          }
                        ],
                        "id": 4578,
                        "name": "_swap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4251,
                        "src": "24665:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (address,struct OpenMevLibrary.Swap memory[] memory) returns (uint256[] memory)"
                        }
                      },
                      "id": 4581,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "24665:16:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "24655:26:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 4583,
                  "nodeType": "ExpressionStatement",
                  "src": "24655:26:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4585,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4495,
                        "src": "24744:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4586,
                        "name": "swaps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4504,
                        "src": "24753:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                        }
                      ],
                      "id": 4584,
                      "name": "_backrunSwaps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5854,
                      "src": "24730:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,struct OpenMevLibrary.Swap memory[] memory)"
                      }
                    },
                    "id": 4587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24730:29:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4588,
                  "nodeType": "ExpressionStatement",
                  "src": "24730:29:13"
                }
              ]
            },
            "baseFunctions": [
              837
            ],
            "documentation": {
              "id": 4462,
              "nodeType": "StructuredDocumentation",
              "src": "22821:824:13",
              "text": "@notice Swaps an exact amount of ETH for as many output tokens as possible, along the route determined by the path. The first element of path must be WETH9, the last is the output token. amountIn = msg.value\n @dev Require has been replaced with revert for gas optimization. Fallback alternate router check for insufficient output amount. Attempt to back-run swaps.\n @param amountOutMin Minimum amount of output tokens that must be received\n @param path Array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity\n @param to Address of receiver\n @param deadline Unix timestamp in seconds after which the transaction will revert\n @return amounts Array of input token amount and all subsequent output token amounts"
            },
            "functionSelector": "7ff36ab5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapExactETHForTokens",
            "nameLocation": "23659:21:13",
            "parameters": {
              "id": 4472,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4464,
                  "mutability": "mutable",
                  "name": "amountOutMin",
                  "nameLocation": "23698:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4590,
                  "src": "23690:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4463,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23690:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4467,
                  "mutability": "mutable",
                  "name": "path",
                  "nameLocation": "23739:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4590,
                  "src": "23720:23:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4465,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "23720:7:13",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 4466,
                    "nodeType": "ArrayTypeName",
                    "src": "23720:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4469,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "23761:2:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4590,
                  "src": "23753:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4468,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23753:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4471,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "23781:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4590,
                  "src": "23773:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4470,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23773:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23680:115:13"
            },
            "returnParameters": {
              "id": 4476,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4475,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "23847:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4590,
                  "src": "23830:24:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4473,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "23830:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4474,
                    "nodeType": "ArrayTypeName",
                    "src": "23830:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23829:26:13"
            },
            "scope": 6710,
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 4725,
            "nodeType": "FunctionDefinition",
            "src": "25710:1155:13",
            "body": {
              "id": 4724,
              "nodeType": "Block",
              "src": "25934:931:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4609,
                        "name": "deadline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4602,
                        "src": "25951:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4608,
                      "name": "ensure",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3318,
                      "src": "25944:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 4610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25944:16:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4611,
                  "nodeType": "ExpressionStatement",
                  "src": "25944:16:13"
                },
                {
                  "assignments": [
                    4613
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4613,
                      "mutability": "mutable",
                      "name": "weth",
                      "nameLocation": "25978:4:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 4724,
                      "src": "25970:12:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4612,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "25970:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4615,
                  "initialValue": {
                    "id": 4614,
                    "name": "WETH09",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3234,
                    "src": "25985:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25970:21:13"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 4616,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4598,
                        "src": "26005:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 4621,
                      "indexExpression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 4618,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4598,
                              "src": "26015:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            "id": 4619,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "26015:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 4617,
                          "name": "_dec",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6699,
                          "src": "26010:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) pure returns (uint256)"
                          }
                        },
                        "id": 4620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26010:17:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "26005:23:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 4622,
                      "name": "weth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4613,
                      "src": "26032:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "26005:31:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4627,
                  "nodeType": "IfStatement",
                  "src": "26001:57:13",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4624,
                        "name": "InvalidPath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3191,
                        "src": "26045:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 4625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "26045:13:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4626,
                    "nodeType": "RevertStatement",
                    "src": "26038:20:13"
                  }
                },
                {
                  "assignments": [
                    4629
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4629,
                      "mutability": "mutable",
                      "name": "factory",
                      "nameLocation": "26076:7:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 4724,
                      "src": "26068:15:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4628,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "26068:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4632,
                  "initialValue": {
                    "expression": {
                      "id": 4630,
                      "name": "OpenMevLibrary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3158,
                      "src": "26086:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                        "typeString": "type(library OpenMevLibrary)"
                      }
                    },
                    "id": 4631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "SUSHI_FACTORY",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1799,
                    "src": "26086:28:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26068:46:13"
                },
                {
                  "assignments": [
                    4638
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4638,
                      "mutability": "mutable",
                      "name": "swaps",
                      "nameLocation": "26153:5:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 4724,
                      "src": "26124:34:13",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct OpenMevLibrary.Swap[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 4636,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 4635,
                            "name": "OpenMevLibrary.Swap",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1796,
                            "src": "26124:19:13"
                          },
                          "referencedDeclaration": 1796,
                          "src": "26124:19:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$1796_storage_ptr",
                            "typeString": "struct OpenMevLibrary.Swap"
                          }
                        },
                        "id": 4637,
                        "nodeType": "ArrayTypeName",
                        "src": "26124:21:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Swap_$1796_storage_$dyn_storage_ptr",
                          "typeString": "struct OpenMevLibrary.Swap[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4645,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4641,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4629,
                        "src": "26187:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4642,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4593,
                        "src": "26196:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4643,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4598,
                        "src": "26207:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      ],
                      "expression": {
                        "id": 4639,
                        "name": "OpenMevLibrary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3158,
                        "src": "26161:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                          "typeString": "type(library OpenMevLibrary)"
                        }
                      },
                      "id": 4640,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getSwapsIn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2792,
                      "src": "26161:25:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (address,uint256,address[] memory) view returns (struct OpenMevLibrary.Swap memory[] memory)"
                      }
                    },
                    "id": 4644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26161:51:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26124:88:13"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 4646,
                          "name": "swaps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4638,
                          "src": "26226:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                          }
                        },
                        "id": 4648,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 4647,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "26232:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "26226:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$1796_memory_ptr",
                          "typeString": "struct OpenMevLibrary.Swap memory"
                        }
                      },
                      "id": 4649,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amountIn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1793,
                      "src": "26226:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 4650,
                      "name": "amountInMax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4595,
                      "src": "26246:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "26226:31:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4676,
                  "nodeType": "IfStatement",
                  "src": "26222:327:13",
                  "trueBody": {
                    "id": 4675,
                    "nodeType": "Block",
                    "src": "26259:290:13",
                    "statements": [
                      {
                        "expression": {
                          "id": 4654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4652,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4629,
                            "src": "26273:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 4653,
                            "name": "BACKUP_FACTORY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3237,
                            "src": "26283:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "26273:24:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 4655,
                        "nodeType": "ExpressionStatement",
                        "src": "26273:24:13"
                      },
                      {
                        "expression": {
                          "id": 4663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4656,
                            "name": "swaps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4638,
                            "src": "26399:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 4659,
                                "name": "factory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4629,
                                "src": "26433:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 4660,
                                "name": "amountOut",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4593,
                                "src": "26442:9:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 4661,
                                "name": "path",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4598,
                                "src": "26453:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              ],
                              "expression": {
                                "id": 4657,
                                "name": "OpenMevLibrary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3158,
                                "src": "26407:14:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                                  "typeString": "type(library OpenMevLibrary)"
                                }
                              },
                              "id": 4658,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getSwapsIn",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2792,
                              "src": "26407:25:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr_$",
                                "typeString": "function (address,uint256,address[] memory) view returns (struct OpenMevLibrary.Swap memory[] memory)"
                              }
                            },
                            "id": 4662,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "26407:51:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                            }
                          },
                          "src": "26399:59:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                          }
                        },
                        "id": 4664,
                        "nodeType": "ExpressionStatement",
                        "src": "26399:59:13"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 4665,
                                "name": "swaps",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4638,
                                "src": "26476:5:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                                }
                              },
                              "id": 4667,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 4666,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "26482:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "26476:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$1796_memory_ptr",
                                "typeString": "struct OpenMevLibrary.Swap memory"
                              }
                            },
                            "id": 4668,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amountIn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1793,
                            "src": "26476:17:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 4669,
                            "name": "amountInMax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4595,
                            "src": "26496:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "26476:31:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4674,
                        "nodeType": "IfStatement",
                        "src": "26472:66:13",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 4671,
                              "name": "ExcessiveInputAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3201,
                              "src": "26516:20:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 4672,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "26516:22:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 4673,
                          "nodeType": "RevertStatement",
                          "src": "26509:29:13"
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4683,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "26591:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "26591:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 4685,
                            "name": "swaps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4638,
                            "src": "26603:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                            }
                          },
                          "id": 4687,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 4686,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "26609:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26603:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$1796_memory_ptr",
                            "typeString": "struct OpenMevLibrary.Swap memory"
                          }
                        },
                        "id": 4688,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "pair",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1791,
                        "src": "26603:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 4689,
                            "name": "swaps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4638,
                            "src": "26618:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                            }
                          },
                          "id": 4691,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 4690,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "26624:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26618:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$1796_memory_ptr",
                            "typeString": "struct OpenMevLibrary.Swap memory"
                          }
                        },
                        "id": 4692,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amountIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1793,
                        "src": "26618:17:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 4678,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4598,
                              "src": "26565:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            "id": 4680,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 4679,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "26570:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "26565:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4677,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 435,
                          "src": "26559:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$435_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 4681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26559:14:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$435",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 4682,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7577,
                      "src": "26559:31:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$435_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$435_$",
                        "typeString": "function (contract ERC20,address,address,uint256)"
                      }
                    },
                    "id": 4693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26559:77:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4694,
                  "nodeType": "ExpressionStatement",
                  "src": "26559:77:13"
                },
                {
                  "expression": {
                    "id": 4703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4695,
                      "name": "amounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4606,
                      "src": "26646:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 4699,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "26670:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OpenMevRouter_$6710",
                                "typeString": "contract OpenMevRouter"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_OpenMevRouter_$6710",
                                "typeString": "contract OpenMevRouter"
                              }
                            ],
                            "id": 4698,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "26662:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4697,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "26662:7:13",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4700,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26662:13:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 4701,
                          "name": "swaps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4638,
                          "src": "26677:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                          }
                        ],
                        "id": 4696,
                        "name": "_swap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4251,
                        "src": "26656:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (address,struct OpenMevLibrary.Swap memory[] memory) returns (uint256[] memory)"
                        }
                      },
                      "id": 4702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "26656:27:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "26646:37:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 4704,
                  "nodeType": "ExpressionStatement",
                  "src": "26646:37:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4709,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4593,
                        "src": "26714:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 4706,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4613,
                            "src": "26699:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4705,
                          "name": "IWETH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1763,
                          "src": "26693:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IWETH_$1763_$",
                            "typeString": "type(contract IWETH)"
                          }
                        },
                        "id": 4707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26693:11:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IWETH_$1763",
                          "typeString": "contract IWETH"
                        }
                      },
                      "id": 4708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1762,
                      "src": "26693:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 4710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26693:31:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4711,
                  "nodeType": "ExpressionStatement",
                  "src": "26693:31:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4715,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4600,
                        "src": "26766:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4716,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4593,
                        "src": "26770:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4712,
                        "name": "SafeTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7618,
                        "src": "26734:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeTransferLib_$7618_$",
                          "typeString": "type(library SafeTransferLib)"
                        }
                      },
                      "id": 4714,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7555,
                      "src": "26734:31:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26734:46:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4718,
                  "nodeType": "ExpressionStatement",
                  "src": "26734:46:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4720,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4629,
                        "src": "26843:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4721,
                        "name": "swaps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4638,
                        "src": "26852:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                        }
                      ],
                      "id": 4719,
                      "name": "_backrunSwaps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5854,
                      "src": "26829:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,struct OpenMevLibrary.Swap memory[] memory)"
                      }
                    },
                    "id": 4722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26829:29:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4723,
                  "nodeType": "ExpressionStatement",
                  "src": "26829:29:13"
                }
              ]
            },
            "baseFunctions": [
              854
            ],
            "documentation": {
              "id": 4591,
              "nodeType": "StructuredDocumentation",
              "src": "24772:933:13",
              "text": "@notice Receive an exact amount of ETH for as few input tokens as possible, along the route determined by the path. The first element of path is the input token, the last must be WETH9. msg.sender should have already given the router an allowance of at least amountInMax on the input token.\n @dev Require has been replaced with revert for gas optimization. Fallback alternate router check for insufficient output amount. Attempt to back-run swaps.\n @param amountOut Amount of ETH to receive\n @param amountInMax Maximum amount of input tokens\n @param path Array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity\n @param to Address of receiver\n @param deadline Unix timestamp in seconds after which the transaction will revert\n @return amounts Array of input token amount and all subsequent output token amounts"
            },
            "functionSelector": "4a25d94a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapTokensForExactETH",
            "nameLocation": "25719:21:13",
            "parameters": {
              "id": 4603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4593,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nameLocation": "25758:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4725,
                  "src": "25750:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4592,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25750:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4595,
                  "mutability": "mutable",
                  "name": "amountInMax",
                  "nameLocation": "25785:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4725,
                  "src": "25777:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4594,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25777:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4598,
                  "mutability": "mutable",
                  "name": "path",
                  "nameLocation": "25825:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4725,
                  "src": "25806:23:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4596,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "25806:7:13",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 4597,
                    "nodeType": "ArrayTypeName",
                    "src": "25806:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4600,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "25847:2:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4725,
                  "src": "25839:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4599,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25839:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4602,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "25867:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4725,
                  "src": "25859:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4601,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25859:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25740:141:13"
            },
            "returnParameters": {
              "id": 4607,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4606,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "25925:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4725,
                  "src": "25908:24:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4604,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "25908:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4605,
                    "nodeType": "ArrayTypeName",
                    "src": "25908:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25907:26:13"
            },
            "scope": 6710,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 4875,
            "nodeType": "FunctionDefinition",
            "src": "27717:1273:13",
            "body": {
              "id": 4874,
              "nodeType": "Block",
              "src": "27941:1049:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4744,
                        "name": "deadline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4737,
                        "src": "27958:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4743,
                      "name": "ensure",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3318,
                      "src": "27951:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 4745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27951:16:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4746,
                  "nodeType": "ExpressionStatement",
                  "src": "27951:16:13"
                },
                {
                  "assignments": [
                    4748
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4748,
                      "mutability": "mutable",
                      "name": "weth",
                      "nameLocation": "27985:4:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 4874,
                      "src": "27977:12:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4747,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "27977:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4750,
                  "initialValue": {
                    "id": 4749,
                    "name": "WETH09",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3234,
                    "src": "27992:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "27977:21:13"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 4751,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4733,
                        "src": "28012:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 4756,
                      "indexExpression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 4753,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4733,
                              "src": "28022:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            "id": 4754,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "28022:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 4752,
                          "name": "_dec",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6699,
                          "src": "28017:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) pure returns (uint256)"
                          }
                        },
                        "id": 4755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "28017:17:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "28012:23:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 4757,
                      "name": "weth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4748,
                      "src": "28039:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "28012:31:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4762,
                  "nodeType": "IfStatement",
                  "src": "28008:57:13",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4759,
                        "name": "InvalidPath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3191,
                        "src": "28052:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 4760,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "28052:13:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4761,
                    "nodeType": "RevertStatement",
                    "src": "28045:20:13"
                  }
                },
                {
                  "assignments": [
                    4764
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4764,
                      "mutability": "mutable",
                      "name": "factory",
                      "nameLocation": "28083:7:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 4874,
                      "src": "28075:15:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4763,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "28075:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4767,
                  "initialValue": {
                    "expression": {
                      "id": 4765,
                      "name": "OpenMevLibrary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3158,
                      "src": "28093:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                        "typeString": "type(library OpenMevLibrary)"
                      }
                    },
                    "id": 4766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "SUSHI_FACTORY",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1799,
                    "src": "28093:28:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28075:46:13"
                },
                {
                  "assignments": [
                    4773
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4773,
                      "mutability": "mutable",
                      "name": "swaps",
                      "nameLocation": "28160:5:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 4874,
                      "src": "28131:34:13",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct OpenMevLibrary.Swap[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 4771,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 4770,
                            "name": "OpenMevLibrary.Swap",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1796,
                            "src": "28131:19:13"
                          },
                          "referencedDeclaration": 1796,
                          "src": "28131:19:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$1796_storage_ptr",
                            "typeString": "struct OpenMevLibrary.Swap"
                          }
                        },
                        "id": 4772,
                        "nodeType": "ArrayTypeName",
                        "src": "28131:21:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Swap_$1796_storage_$dyn_storage_ptr",
                          "typeString": "struct OpenMevLibrary.Swap[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4780,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4776,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4764,
                        "src": "28195:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4777,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4728,
                        "src": "28204:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4778,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4733,
                        "src": "28214:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      ],
                      "expression": {
                        "id": 4774,
                        "name": "OpenMevLibrary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3158,
                        "src": "28168:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                          "typeString": "type(library OpenMevLibrary)"
                        }
                      },
                      "id": 4775,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getSwapsOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2474,
                      "src": "28168:26:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (address,uint256,address[] memory) view returns (struct OpenMevLibrary.Swap memory[] memory)"
                      }
                    },
                    "id": 4779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28168:51:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28131:88:13"
                },
                {
                  "assignments": [
                    4782
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4782,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "28237:6:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 4874,
                      "src": "28229:14:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4781,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "28229:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4785,
                  "initialValue": {
                    "expression": {
                      "id": 4783,
                      "name": "swaps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4773,
                      "src": "28246:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                      }
                    },
                    "id": 4784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "28246:12:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28229:29:13"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 4786,
                          "name": "swaps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4773,
                          "src": "28272:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                          }
                        },
                        "id": 4790,
                        "indexExpression": {
                          "arguments": [
                            {
                              "id": 4788,
                              "name": "length",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4782,
                              "src": "28283:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4787,
                            "name": "_dec",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6699,
                            "src": "28278:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) pure returns (uint256)"
                            }
                          },
                          "id": 4789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28278:12:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "28272:19:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$1796_memory_ptr",
                          "typeString": "struct OpenMevLibrary.Swap memory"
                        }
                      },
                      "id": 4791,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amountOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1795,
                      "src": "28272:29:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 4792,
                      "name": "amountOutMin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4730,
                      "src": "28304:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "28272:44:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4820,
                  "nodeType": "IfStatement",
                  "src": "28268:357:13",
                  "trueBody": {
                    "id": 4819,
                    "nodeType": "Block",
                    "src": "28318:307:13",
                    "statements": [
                      {
                        "expression": {
                          "id": 4796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4794,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4764,
                            "src": "28332:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 4795,
                            "name": "BACKUP_FACTORY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3237,
                            "src": "28342:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "28332:24:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 4797,
                        "nodeType": "ExpressionStatement",
                        "src": "28332:24:13"
                      },
                      {
                        "expression": {
                          "id": 4805,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4798,
                            "name": "swaps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4773,
                            "src": "28458:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 4801,
                                "name": "factory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4764,
                                "src": "28493:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 4802,
                                "name": "amountIn",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4728,
                                "src": "28502:8:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 4803,
                                "name": "path",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4733,
                                "src": "28512:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              ],
                              "expression": {
                                "id": 4799,
                                "name": "OpenMevLibrary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3158,
                                "src": "28466:14:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                                  "typeString": "type(library OpenMevLibrary)"
                                }
                              },
                              "id": 4800,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getSwapsOut",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2474,
                              "src": "28466:26:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr_$",
                                "typeString": "function (address,uint256,address[] memory) view returns (struct OpenMevLibrary.Swap memory[] memory)"
                              }
                            },
                            "id": 4804,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "28466:51:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                            }
                          },
                          "src": "28458:59:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                          }
                        },
                        "id": 4806,
                        "nodeType": "ExpressionStatement",
                        "src": "28458:59:13"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 4807,
                                "name": "swaps",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4773,
                                "src": "28535:5:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                                }
                              },
                              "id": 4811,
                              "indexExpression": {
                                "arguments": [
                                  {
                                    "id": 4809,
                                    "name": "length",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4782,
                                    "src": "28546:6:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 4808,
                                  "name": "_dec",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6699,
                                  "src": "28541:4:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 4810,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "28541:12:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "28535:19:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$1796_memory_ptr",
                                "typeString": "struct OpenMevLibrary.Swap memory"
                              }
                            },
                            "id": 4812,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amountOut",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1795,
                            "src": "28535:29:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 4813,
                            "name": "amountOutMin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4730,
                            "src": "28567:12:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "28535:44:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4818,
                        "nodeType": "IfStatement",
                        "src": "28531:83:13",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 4815,
                              "name": "InsufficientOutputAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3209,
                              "src": "28588:24:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 4816,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "28588:26:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 4817,
                          "nodeType": "RevertStatement",
                          "src": "28581:33:13"
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4827,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "28667:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "28667:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 4829,
                            "name": "swaps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4773,
                            "src": "28679:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                            }
                          },
                          "id": 4831,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 4830,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "28685:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "28679:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$1796_memory_ptr",
                            "typeString": "struct OpenMevLibrary.Swap memory"
                          }
                        },
                        "id": 4832,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "pair",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1791,
                        "src": "28679:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4833,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4728,
                        "src": "28694:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 4822,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4733,
                              "src": "28641:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            "id": 4824,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 4823,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "28646:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "28641:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4821,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 435,
                          "src": "28635:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$435_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 4825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "28635:14:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$435",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 4826,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7577,
                      "src": "28635:31:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$435_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$435_$",
                        "typeString": "function (contract ERC20,address,address,uint256)"
                      }
                    },
                    "id": 4834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28635:68:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4835,
                  "nodeType": "ExpressionStatement",
                  "src": "28635:68:13"
                },
                {
                  "expression": {
                    "id": 4844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4836,
                      "name": "amounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4741,
                      "src": "28713:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 4840,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "28737:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OpenMevRouter_$6710",
                                "typeString": "contract OpenMevRouter"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_OpenMevRouter_$6710",
                                "typeString": "contract OpenMevRouter"
                              }
                            ],
                            "id": 4839,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "28729:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4838,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "28729:7:13",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28729:13:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 4842,
                          "name": "swaps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4773,
                          "src": "28744:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                          }
                        ],
                        "id": 4837,
                        "name": "_swap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4251,
                        "src": "28723:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (address,struct OpenMevLibrary.Swap memory[] memory) returns (uint256[] memory)"
                        }
                      },
                      "id": 4843,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "28723:27:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "28713:37:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 4845,
                  "nodeType": "ExpressionStatement",
                  "src": "28713:37:13"
                },
                {
                  "assignments": [
                    4847
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4847,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "28768:9:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 4874,
                      "src": "28760:17:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4846,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "28760:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4854,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 4848,
                        "name": "swaps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4773,
                        "src": "28780:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                        }
                      },
                      "id": 4852,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 4850,
                            "name": "length",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4782,
                            "src": "28791:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 4849,
                          "name": "_dec",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6699,
                          "src": "28786:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) pure returns (uint256)"
                          }
                        },
                        "id": 4851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "28786:12:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "28780:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$1796_memory_ptr",
                        "typeString": "struct OpenMevLibrary.Swap memory"
                      }
                    },
                    "id": 4853,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amountOut",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1795,
                    "src": "28780:29:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28760:49:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4859,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4847,
                        "src": "28840:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 4856,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4748,
                            "src": "28825:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4855,
                          "name": "IWETH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1763,
                          "src": "28819:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IWETH_$1763_$",
                            "typeString": "type(contract IWETH)"
                          }
                        },
                        "id": 4857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "28819:11:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IWETH_$1763",
                          "typeString": "contract IWETH"
                        }
                      },
                      "id": 4858,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1762,
                      "src": "28819:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 4860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28819:31:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4861,
                  "nodeType": "ExpressionStatement",
                  "src": "28819:31:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4865,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4735,
                        "src": "28892:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4866,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4847,
                        "src": "28896:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4862,
                        "name": "SafeTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7618,
                        "src": "28860:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeTransferLib_$7618_$",
                          "typeString": "type(library SafeTransferLib)"
                        }
                      },
                      "id": 4864,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7555,
                      "src": "28860:31:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28860:46:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4868,
                  "nodeType": "ExpressionStatement",
                  "src": "28860:46:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4870,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4764,
                        "src": "28968:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4871,
                        "name": "swaps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4773,
                        "src": "28977:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                        }
                      ],
                      "id": 4869,
                      "name": "_backrunSwaps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5854,
                      "src": "28954:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,struct OpenMevLibrary.Swap memory[] memory)"
                      }
                    },
                    "id": 4872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28954:29:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4873,
                  "nodeType": "ExpressionStatement",
                  "src": "28954:29:13"
                }
              ]
            },
            "baseFunctions": [
              871
            ],
            "documentation": {
              "id": 4726,
              "nodeType": "StructuredDocumentation",
              "src": "26871:841:13",
              "text": "@notice Swaps an exact amount of tokens for as much ETH as possible, along the route determined by the path. The first element of path is the input token, the last must be WETH9.\n @dev Require has been replaced with revert for gas optimization. Fallback alternate router check for insufficient output amount. Attempt to back-run swaps.\n @param amountIn Amount of input tokens to send.\n @param amountOutMin Minimum amount of ETH that must be received\n @param path Array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity\n @param to Address of receiver\n @param deadline Unix timestamp in seconds after which the transaction will revert\n @return amounts Array of input token amount and all subsequent output token amounts"
            },
            "functionSelector": "18cbafe5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapExactTokensForETH",
            "nameLocation": "27726:21:13",
            "parameters": {
              "id": 4738,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4728,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "27765:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4875,
                  "src": "27757:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4727,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27757:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4730,
                  "mutability": "mutable",
                  "name": "amountOutMin",
                  "nameLocation": "27791:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4875,
                  "src": "27783:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4729,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27783:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4733,
                  "mutability": "mutable",
                  "name": "path",
                  "nameLocation": "27832:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4875,
                  "src": "27813:23:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4731,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "27813:7:13",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 4732,
                    "nodeType": "ArrayTypeName",
                    "src": "27813:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4735,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "27854:2:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4875,
                  "src": "27846:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4734,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "27846:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4737,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "27874:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4875,
                  "src": "27866:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4736,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27866:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27747:141:13"
            },
            "returnParameters": {
              "id": 4742,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4741,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "27932:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4875,
                  "src": "27915:24:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4739,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "27915:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4740,
                    "nodeType": "ArrayTypeName",
                    "src": "27915:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27914:26:13"
            },
            "scope": 6710,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 5019,
            "nodeType": "FunctionDefinition",
            "src": "29833:1200:13",
            "body": {
              "id": 5018,
              "nodeType": "Block",
              "src": "30036:997:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4892,
                        "name": "deadline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4885,
                        "src": "30053:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4891,
                      "name": "ensure",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3318,
                      "src": "30046:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 4893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30046:16:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4894,
                  "nodeType": "ExpressionStatement",
                  "src": "30046:16:13"
                },
                {
                  "assignments": [
                    4896
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4896,
                      "mutability": "mutable",
                      "name": "weth",
                      "nameLocation": "30080:4:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 5018,
                      "src": "30072:12:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4895,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "30072:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4898,
                  "initialValue": {
                    "id": 4897,
                    "name": "WETH09",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3234,
                    "src": "30087:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "30072:21:13"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 4899,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4881,
                        "src": "30107:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 4901,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 4900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30112:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "30107:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 4902,
                      "name": "weth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4896,
                      "src": "30118:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "30107:15:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4907,
                  "nodeType": "IfStatement",
                  "src": "30103:41:13",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4904,
                        "name": "InvalidPath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3191,
                        "src": "30131:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 4905,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "30131:13:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4906,
                    "nodeType": "RevertStatement",
                    "src": "30124:20:13"
                  }
                },
                {
                  "assignments": [
                    4909
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4909,
                      "mutability": "mutable",
                      "name": "factory",
                      "nameLocation": "30162:7:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 5018,
                      "src": "30154:15:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4908,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "30154:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4912,
                  "initialValue": {
                    "expression": {
                      "id": 4910,
                      "name": "OpenMevLibrary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3158,
                      "src": "30172:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                        "typeString": "type(library OpenMevLibrary)"
                      }
                    },
                    "id": 4911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "SUSHI_FACTORY",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1799,
                    "src": "30172:28:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "30154:46:13"
                },
                {
                  "assignments": [
                    4918
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4918,
                      "mutability": "mutable",
                      "name": "swaps",
                      "nameLocation": "30239:5:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 5018,
                      "src": "30210:34:13",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct OpenMevLibrary.Swap[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 4916,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 4915,
                            "name": "OpenMevLibrary.Swap",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1796,
                            "src": "30210:19:13"
                          },
                          "referencedDeclaration": 1796,
                          "src": "30210:19:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$1796_storage_ptr",
                            "typeString": "struct OpenMevLibrary.Swap"
                          }
                        },
                        "id": 4917,
                        "nodeType": "ArrayTypeName",
                        "src": "30210:21:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Swap_$1796_storage_$dyn_storage_ptr",
                          "typeString": "struct OpenMevLibrary.Swap[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4925,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4921,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4909,
                        "src": "30273:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4922,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4878,
                        "src": "30282:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4923,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4881,
                        "src": "30293:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      ],
                      "expression": {
                        "id": 4919,
                        "name": "OpenMevLibrary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3158,
                        "src": "30247:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                          "typeString": "type(library OpenMevLibrary)"
                        }
                      },
                      "id": 4920,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getSwapsIn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2792,
                      "src": "30247:25:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (address,uint256,address[] memory) view returns (struct OpenMevLibrary.Swap memory[] memory)"
                      }
                    },
                    "id": 4924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30247:51:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "30210:88:13"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 4926,
                          "name": "swaps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4918,
                          "src": "30312:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                          }
                        },
                        "id": 4928,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 4927,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "30318:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "30312:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$1796_memory_ptr",
                          "typeString": "struct OpenMevLibrary.Swap memory"
                        }
                      },
                      "id": 4929,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amountIn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1793,
                      "src": "30312:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "expression": {
                        "id": 4930,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "30332:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4931,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "30332:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "30312:29:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4958,
                  "nodeType": "IfStatement",
                  "src": "30308:323:13",
                  "trueBody": {
                    "id": 4957,
                    "nodeType": "Block",
                    "src": "30343:288:13",
                    "statements": [
                      {
                        "expression": {
                          "id": 4935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4933,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4909,
                            "src": "30357:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 4934,
                            "name": "BACKUP_FACTORY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3237,
                            "src": "30367:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "30357:24:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 4936,
                        "nodeType": "ExpressionStatement",
                        "src": "30357:24:13"
                      },
                      {
                        "expression": {
                          "id": 4944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4937,
                            "name": "swaps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4918,
                            "src": "30483:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 4940,
                                "name": "factory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4909,
                                "src": "30517:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 4941,
                                "name": "amountOut",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4878,
                                "src": "30526:9:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 4942,
                                "name": "path",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4881,
                                "src": "30537:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              ],
                              "expression": {
                                "id": 4938,
                                "name": "OpenMevLibrary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3158,
                                "src": "30491:14:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                                  "typeString": "type(library OpenMevLibrary)"
                                }
                              },
                              "id": 4939,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getSwapsIn",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2792,
                              "src": "30491:25:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr_$",
                                "typeString": "function (address,uint256,address[] memory) view returns (struct OpenMevLibrary.Swap memory[] memory)"
                              }
                            },
                            "id": 4943,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "30491:51:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                            }
                          },
                          "src": "30483:59:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                          }
                        },
                        "id": 4945,
                        "nodeType": "ExpressionStatement",
                        "src": "30483:59:13"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 4946,
                                "name": "swaps",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4918,
                                "src": "30560:5:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                                }
                              },
                              "id": 4948,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 4947,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "30566:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "30560:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$1796_memory_ptr",
                                "typeString": "struct OpenMevLibrary.Swap memory"
                              }
                            },
                            "id": 4949,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amountIn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1793,
                            "src": "30560:17:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "expression": {
                              "id": 4950,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "30580:3:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 4951,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "30580:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "30560:29:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4956,
                        "nodeType": "IfStatement",
                        "src": "30556:64:13",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 4953,
                              "name": "ExcessiveInputAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3201,
                              "src": "30598:20:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 4954,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "30598:22:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 4955,
                          "nodeType": "RevertStatement",
                          "src": "30591:29:13"
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 4960,
                              "name": "weth",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4896,
                              "src": "30647:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 4959,
                            "name": "IWETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1763,
                            "src": "30641:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IWETH_$1763_$",
                              "typeString": "type(contract IWETH)"
                            }
                          },
                          "id": 4961,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "30641:11:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IWETH_$1763",
                            "typeString": "contract IWETH"
                          }
                        },
                        "id": 4962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1748,
                        "src": "30641:19:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 4967,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "baseExpression": {
                              "id": 4963,
                              "name": "swaps",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4918,
                              "src": "30669:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                              }
                            },
                            "id": 4965,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 4964,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "30675:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "30669:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Swap_$1796_memory_ptr",
                              "typeString": "struct OpenMevLibrary.Swap memory"
                            }
                          },
                          "id": 4966,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amountIn",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1793,
                          "src": "30669:17:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "30641:47:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 4968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30641:49:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4969,
                  "nodeType": "ExpressionStatement",
                  "src": "30641:49:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 4974,
                            "name": "swaps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4918,
                            "src": "30725:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                            }
                          },
                          "id": 4976,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 4975,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "30731:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "30725:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$1796_memory_ptr",
                            "typeString": "struct OpenMevLibrary.Swap memory"
                          }
                        },
                        "id": 4977,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "pair",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1791,
                        "src": "30725:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 4978,
                            "name": "swaps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4918,
                            "src": "30740:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                            }
                          },
                          "id": 4980,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 4979,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "30746:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "30740:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$1796_memory_ptr",
                            "typeString": "struct OpenMevLibrary.Swap memory"
                          }
                        },
                        "id": 4981,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amountIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1793,
                        "src": "30740:17:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 4971,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4896,
                            "src": "30706:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4970,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 435,
                          "src": "30700:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$435_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 4972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "30700:11:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$435",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 4973,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7597,
                      "src": "30700:24:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$435_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$435_$",
                        "typeString": "function (contract ERC20,address,uint256)"
                      }
                    },
                    "id": 4982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30700:58:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4983,
                  "nodeType": "ExpressionStatement",
                  "src": "30700:58:13"
                },
                {
                  "expression": {
                    "id": 4989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4984,
                      "name": "amounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4889,
                      "src": "30768:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4986,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4883,
                          "src": "30784:2:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 4987,
                          "name": "swaps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4918,
                          "src": "30788:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                          }
                        ],
                        "id": 4985,
                        "name": "_swap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4251,
                        "src": "30778:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (address,struct OpenMevLibrary.Swap memory[] memory) returns (uint256[] memory)"
                        }
                      },
                      "id": 4988,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "30778:16:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "30768:26:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 4990,
                  "nodeType": "ExpressionStatement",
                  "src": "30768:26:13"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 4991,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "30843:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4992,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "30843:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 4993,
                          "name": "swaps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4918,
                          "src": "30855:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                          }
                        },
                        "id": 4995,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 4994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "30861:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "30855:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$1796_memory_ptr",
                          "typeString": "struct OpenMevLibrary.Swap memory"
                        }
                      },
                      "id": 4996,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amountIn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1793,
                      "src": "30855:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "30843:29:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5012,
                  "nodeType": "IfStatement",
                  "src": "30839:109:13",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 5001,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "30906:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 5002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "30906:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5009,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 5003,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "30918:3:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 5004,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "30918:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 5005,
                                "name": "swaps",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4918,
                                "src": "30930:5:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                                }
                              },
                              "id": 5007,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 5006,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "30936:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "30930:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$1796_memory_ptr",
                                "typeString": "struct OpenMevLibrary.Swap memory"
                              }
                            },
                            "id": 5008,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amountIn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1793,
                            "src": "30930:17:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "30918:29:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 4998,
                          "name": "SafeTransferLib",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7618,
                          "src": "30874:15:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SafeTransferLib_$7618_$",
                            "typeString": "type(library SafeTransferLib)"
                          }
                        },
                        "id": 5000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "safeTransferETH",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7555,
                        "src": "30874:31:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256)"
                        }
                      },
                      "id": 5010,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "30874:74:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 5011,
                    "nodeType": "ExpressionStatement",
                    "src": "30874:74:13"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5014,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4909,
                        "src": "31011:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5015,
                        "name": "swaps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4918,
                        "src": "31020:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                        }
                      ],
                      "id": 5013,
                      "name": "_backrunSwaps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5854,
                      "src": "30997:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,struct OpenMevLibrary.Swap memory[] memory)"
                      }
                    },
                    "id": 5016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30997:29:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5017,
                  "nodeType": "ExpressionStatement",
                  "src": "30997:29:13"
                }
              ]
            },
            "baseFunctions": [
              886
            ],
            "documentation": {
              "id": 4876,
              "nodeType": "StructuredDocumentation",
              "src": "28996:832:13",
              "text": "@notice Receive an exact amount of tokens for as little ETH as possible, along the route determined by the path. The first element of path must be WETH9. Leftover ETH, if any, is returned to msg.sender. amountInMax = msg.value\n @dev Require has been replaced with revert for gas optimization. Fallback alternate router check for insufficient output amount. Attempt to back-run swaps.\n @param amountOut Amount of output tokens that must be received\n @param path Array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity\n @param to Address of receiver\n @param deadline Unix timestamp in seconds after which the transaction will revert\n @return amounts Array of input token amount and all subsequent output token amounts"
            },
            "functionSelector": "fb3bdb41",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapETHForExactTokens",
            "nameLocation": "29842:21:13",
            "parameters": {
              "id": 4886,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4878,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nameLocation": "29881:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5019,
                  "src": "29873:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4877,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "29873:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4881,
                  "mutability": "mutable",
                  "name": "path",
                  "nameLocation": "29919:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5019,
                  "src": "29900:23:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4879,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "29900:7:13",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 4880,
                    "nodeType": "ArrayTypeName",
                    "src": "29900:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4883,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "29941:2:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5019,
                  "src": "29933:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4882,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "29933:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4885,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "29961:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5019,
                  "src": "29953:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4884,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "29953:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29863:112:13"
            },
            "returnParameters": {
              "id": 4890,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4889,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "30027:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5019,
                  "src": "30010:24:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4887,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "30010:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4888,
                    "nodeType": "ArrayTypeName",
                    "src": "30010:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "30009:26:13"
            },
            "scope": 6710,
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 5057,
            "nodeType": "FunctionDefinition",
            "src": "31117:349:13",
            "body": {
              "id": 5056,
              "nodeType": "Block",
              "src": "31287:179:13",
              "statements": [
                {
                  "assignments": [
                    5031,
                    5033
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5031,
                      "mutability": "mutable",
                      "name": "amount0Out",
                      "nameLocation": "31306:10:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 5056,
                      "src": "31298:18:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5030,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "31298:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 5033,
                      "mutability": "mutable",
                      "name": "amount1Out",
                      "nameLocation": "31326:10:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 5056,
                      "src": "31318:18:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5032,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "31318:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5048,
                  "initialValue": {
                    "condition": {
                      "id": 5034,
                      "name": "isReverse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5025,
                      "src": "31340:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5043,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "31390:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5042,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "31382:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 5041,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "31382:7:13",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "31382:10:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 5045,
                          "name": "amountOutput",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5023,
                          "src": "31394:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 5046,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "31381:26:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "id": 5047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "31340:67:13",
                    "trueExpression": {
                      "components": [
                        {
                          "id": 5035,
                          "name": "amountOutput",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5023,
                          "src": "31353:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5038,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "31375:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5037,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "31367:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 5036,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "31367:7:13",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "31367:10:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 5040,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "31352:26:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "31297:110:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5050,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5021,
                        "src": "31426:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5051,
                        "name": "amount0Out",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5031,
                        "src": "31432:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 5052,
                        "name": "amount1Out",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5033,
                        "src": "31444:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 5053,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5027,
                        "src": "31456:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5049,
                      "name": "_asmSwap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6222,
                      "src": "31417:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,uint256,address)"
                      }
                    },
                    "id": 5054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31417:42:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5055,
                  "nodeType": "ExpressionStatement",
                  "src": "31417:42:13"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_swapSupportingFeeOnTransferTokensExecute",
            "nameLocation": "31126:41:13",
            "parameters": {
              "id": 5028,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5021,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "31185:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5057,
                  "src": "31177:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5020,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "31177:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5023,
                  "mutability": "mutable",
                  "name": "amountOutput",
                  "nameLocation": "31207:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5057,
                  "src": "31199:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5022,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "31199:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5025,
                  "mutability": "mutable",
                  "name": "isReverse",
                  "nameLocation": "31234:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5057,
                  "src": "31229:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5024,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "31229:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5027,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "31261:2:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5057,
                  "src": "31253:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5026,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "31253:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "31167:102:13"
            },
            "returnParameters": {
              "id": 5029,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "31287:0:13"
            },
            "scope": 6710,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 5212,
            "nodeType": "FunctionDefinition",
            "src": "31472:1378:13",
            "body": {
              "id": 5211,
              "nodeType": "Block",
              "src": "31616:1234:13",
              "statements": [
                {
                  "assignments": [
                    5068
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5068,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "31634:6:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 5211,
                      "src": "31626:14:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5067,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "31626:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5071,
                  "initialValue": {
                    "expression": {
                      "id": 5069,
                      "name": "path",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5060,
                      "src": "31643:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "id": 5070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "31643:11:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "31626:28:13"
                },
                {
                  "body": {
                    "id": 5209,
                    "nodeType": "Block",
                    "src": "31711:1133:13",
                    "statements": [
                      {
                        "assignments": [
                          5087,
                          5089
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 5087,
                            "mutability": "mutable",
                            "name": "tokenIn",
                            "nameLocation": "31734:7:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 5209,
                            "src": "31726:15:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 5086,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "31726:7:13",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 5089,
                            "mutability": "mutable",
                            "name": "tokenOut",
                            "nameLocation": "31751:8:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 5209,
                            "src": "31743:16:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 5088,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "31743:7:13",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 5099,
                        "initialValue": {
                          "components": [
                            {
                              "baseExpression": {
                                "id": 5090,
                                "name": "path",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5060,
                                "src": "31764:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 5092,
                              "indexExpression": {
                                "id": 5091,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5073,
                                "src": "31769:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "31764:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 5093,
                                "name": "path",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5060,
                                "src": "31773:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 5097,
                              "indexExpression": {
                                "arguments": [
                                  {
                                    "id": 5095,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5073,
                                    "src": "31783:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 5094,
                                  "name": "_inc",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6685,
                                  "src": "31778:4:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 5096,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "31778:7:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "31773:13:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "id": 5098,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "31763:24:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                            "typeString": "tuple(address,address)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "31725:62:13"
                      },
                      {
                        "assignments": [
                          5101
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 5101,
                            "mutability": "mutable",
                            "name": "isReverse",
                            "nameLocation": "31806:9:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 5209,
                            "src": "31801:14:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 5100,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "31801:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 5102,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "31801:14:13"
                      },
                      {
                        "assignments": [
                          5104
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 5104,
                            "mutability": "mutable",
                            "name": "pair",
                            "nameLocation": "31837:4:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 5209,
                            "src": "31829:12:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 5103,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "31829:7:13",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 5105,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "31829:12:13"
                      },
                      {
                        "id": 5131,
                        "nodeType": "Block",
                        "src": "31855:236:13",
                        "statements": [
                          {
                            "assignments": [
                              5107,
                              5109
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 5107,
                                "mutability": "mutable",
                                "name": "token0",
                                "nameLocation": "31882:6:13",
                                "nodeType": "VariableDeclaration",
                                "scope": 5131,
                                "src": "31874:14:13",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "typeName": {
                                  "id": 5106,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "31874:7:13",
                                  "stateMutability": "nonpayable",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "visibility": "internal"
                              },
                              {
                                "constant": false,
                                "id": 5109,
                                "mutability": "mutable",
                                "name": "token1",
                                "nameLocation": "31898:6:13",
                                "nodeType": "VariableDeclaration",
                                "scope": 5131,
                                "src": "31890:14:13",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "typeName": {
                                  "id": 5108,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "31890:7:13",
                                  "stateMutability": "nonpayable",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 5115,
                            "initialValue": {
                              "arguments": [
                                {
                                  "id": 5112,
                                  "name": "tokenIn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5087,
                                  "src": "31934:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 5113,
                                  "name": "tokenOut",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5089,
                                  "src": "31943:8:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 5110,
                                  "name": "OpenMevLibrary",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3158,
                                  "src": "31908:14:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                                    "typeString": "type(library OpenMevLibrary)"
                                  }
                                },
                                "id": 5111,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sortTokens",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1876,
                                "src": "31908:25:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$returns$_t_address_$_t_address_$",
                                  "typeString": "function (address,address) pure returns (address,address)"
                                }
                              },
                              "id": 5114,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "31908:44:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                                "typeString": "tuple(address,address)"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "31873:79:13"
                          },
                          {
                            "expression": {
                              "id": 5120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 5116,
                                "name": "isReverse",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5101,
                                "src": "31970:9:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 5119,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 5117,
                                  "name": "tokenOut",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5089,
                                  "src": "31982:8:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 5118,
                                  "name": "token0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5107,
                                  "src": "31994:6:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "31982:18:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "31970:30:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 5121,
                            "nodeType": "ExpressionStatement",
                            "src": "31970:30:13"
                          },
                          {
                            "expression": {
                              "id": 5129,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 5122,
                                "name": "pair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5104,
                                "src": "32018:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "id": 5125,
                                    "name": "factory",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5064,
                                    "src": "32052:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 5126,
                                    "name": "token0",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5107,
                                    "src": "32061:6:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 5127,
                                    "name": "token1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5109,
                                    "src": "32069:6:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 5123,
                                    "name": "OpenMevLibrary",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3158,
                                    "src": "32025:14:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                                      "typeString": "type(library OpenMevLibrary)"
                                    }
                                  },
                                  "id": 5124,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "_asmPairFor",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1928,
                                  "src": "32025:26:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_address_$",
                                    "typeString": "function (address,address,address) pure returns (address)"
                                  }
                                },
                                "id": 5128,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "32025:51:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "32018:58:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 5130,
                            "nodeType": "ExpressionStatement",
                            "src": "32018:58:13"
                          }
                        ]
                      },
                      {
                        "assignments": [
                          5133
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 5133,
                            "mutability": "mutable",
                            "name": "amountOutput",
                            "nameLocation": "32112:12:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 5209,
                            "src": "32104:20:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 5132,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "32104:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 5134,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "32104:20:13"
                      },
                      {
                        "id": 5181,
                        "nodeType": "Block",
                        "src": "32138:501:13",
                        "statements": [
                          {
                            "assignments": [
                              5136
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 5136,
                                "mutability": "mutable",
                                "name": "amountInput",
                                "nameLocation": "32220:11:13",
                                "nodeType": "VariableDeclaration",
                                "scope": 5181,
                                "src": "32212:19:13",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 5135,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "32212:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 5137,
                            "nodeType": "VariableDeclarationStatement",
                            "src": "32212:19:13"
                          },
                          {
                            "assignments": [
                              5139,
                              5141,
                              null
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 5139,
                                "mutability": "mutable",
                                "name": "reserve0",
                                "nameLocation": "32258:8:13",
                                "nodeType": "VariableDeclaration",
                                "scope": 5181,
                                "src": "32250:16:13",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint112",
                                  "typeString": "uint112"
                                },
                                "typeName": {
                                  "id": 5138,
                                  "name": "uint112",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "32250:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint112",
                                    "typeString": "uint112"
                                  }
                                },
                                "visibility": "internal"
                              },
                              {
                                "constant": false,
                                "id": 5141,
                                "mutability": "mutable",
                                "name": "reserve1",
                                "nameLocation": "32276:8:13",
                                "nodeType": "VariableDeclaration",
                                "scope": 5181,
                                "src": "32268:16:13",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint112",
                                  "typeString": "uint112"
                                },
                                "typeName": {
                                  "id": 5140,
                                  "name": "uint112",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "32268:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint112",
                                    "typeString": "uint112"
                                  }
                                },
                                "visibility": "internal"
                              },
                              null
                            ],
                            "id": 5147,
                            "initialValue": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 5143,
                                      "name": "pair",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5104,
                                      "src": "32305:4:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 5142,
                                    "name": "IUniswapV2Pair",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1350,
                                    "src": "32290:14:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$1350_$",
                                      "typeString": "type(contract IUniswapV2Pair)"
                                    }
                                  },
                                  "id": 5144,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "32290:20:13",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IUniswapV2Pair_$1350",
                                    "typeString": "contract IUniswapV2Pair"
                                  }
                                },
                                "id": 5145,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getReserves",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1292,
                                "src": "32290:32:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                                  "typeString": "function () view external returns (uint112,uint112,uint32)"
                                }
                              },
                              "id": 5146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "32290:34:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                                "typeString": "tuple(uint112,uint112,uint32)"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "32249:75:13"
                          },
                          {
                            "assignments": [
                              5149,
                              5151
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 5149,
                                "mutability": "mutable",
                                "name": "reserveInput",
                                "nameLocation": "32351:12:13",
                                "nodeType": "VariableDeclaration",
                                "scope": 5181,
                                "src": "32343:20:13",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint112",
                                  "typeString": "uint112"
                                },
                                "typeName": {
                                  "id": 5148,
                                  "name": "uint112",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "32343:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint112",
                                    "typeString": "uint112"
                                  }
                                },
                                "visibility": "internal"
                              },
                              {
                                "constant": false,
                                "id": 5151,
                                "mutability": "mutable",
                                "name": "reserveOutput",
                                "nameLocation": "32373:13:13",
                                "nodeType": "VariableDeclaration",
                                "scope": 5181,
                                "src": "32365:21:13",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint112",
                                  "typeString": "uint112"
                                },
                                "typeName": {
                                  "id": 5150,
                                  "name": "uint112",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "32365:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint112",
                                    "typeString": "uint112"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 5160,
                            "initialValue": {
                              "condition": {
                                "id": 5152,
                                "name": "isReverse",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5101,
                                "src": "32390:9:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseExpression": {
                                "components": [
                                  {
                                    "id": 5156,
                                    "name": "reserve0",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5139,
                                    "src": "32426:8:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint112",
                                      "typeString": "uint112"
                                    }
                                  },
                                  {
                                    "id": 5157,
                                    "name": "reserve1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5141,
                                    "src": "32436:8:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint112",
                                      "typeString": "uint112"
                                    }
                                  }
                                ],
                                "id": 5158,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "32425:20:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$",
                                  "typeString": "tuple(uint112,uint112)"
                                }
                              },
                              "id": 5159,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "Conditional",
                              "src": "32390:55:13",
                              "trueExpression": {
                                "components": [
                                  {
                                    "id": 5153,
                                    "name": "reserve1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5141,
                                    "src": "32403:8:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint112",
                                      "typeString": "uint112"
                                    }
                                  },
                                  {
                                    "id": 5154,
                                    "name": "reserve0",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5139,
                                    "src": "32413:8:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint112",
                                      "typeString": "uint112"
                                    }
                                  }
                                ],
                                "id": 5155,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "32402:20:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$",
                                  "typeString": "tuple(uint112,uint112)"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$",
                                "typeString": "tuple(uint112,uint112)"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "32342:103:13"
                          },
                          {
                            "expression": {
                              "id": 5170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 5161,
                                "name": "amountInput",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5136,
                                "src": "32463:11:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 5169,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "id": 5166,
                                      "name": "pair",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5104,
                                      "src": "32502:4:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 5163,
                                          "name": "tokenIn",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 5087,
                                          "src": "32483:7:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 5162,
                                        "name": "ERC20",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 435,
                                        "src": "32477:5:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_ERC20_$435_$",
                                          "typeString": "type(contract ERC20)"
                                        }
                                      },
                                      "id": 5164,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "32477:14:13",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ERC20_$435",
                                        "typeString": "contract ERC20"
                                      }
                                    },
                                    "id": 5165,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "balanceOf",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 127,
                                    "src": "32477:24:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (address) view external returns (uint256)"
                                    }
                                  },
                                  "id": 5167,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "32477:30:13",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 5168,
                                  "name": "reserveInput",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5149,
                                  "src": "32510:12:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint112",
                                    "typeString": "uint112"
                                  }
                                },
                                "src": "32477:45:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "32463:59:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 5171,
                            "nodeType": "ExpressionStatement",
                            "src": "32463:59:13"
                          },
                          {
                            "expression": {
                              "id": 5179,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 5172,
                                "name": "amountOutput",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5133,
                                "src": "32540:12:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "id": 5175,
                                    "name": "amountInput",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5136,
                                    "src": "32583:11:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 5176,
                                    "name": "reserveInput",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5149,
                                    "src": "32596:12:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint112",
                                      "typeString": "uint112"
                                    }
                                  },
                                  {
                                    "id": 5177,
                                    "name": "reserveOutput",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5151,
                                    "src": "32610:13:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint112",
                                      "typeString": "uint112"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint112",
                                      "typeString": "uint112"
                                    },
                                    {
                                      "typeIdentifier": "t_uint112",
                                      "typeString": "uint112"
                                    }
                                  ],
                                  "expression": {
                                    "id": 5173,
                                    "name": "OpenMevLibrary",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3158,
                                    "src": "32555:14:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                                      "typeString": "type(library OpenMevLibrary)"
                                    }
                                  },
                                  "id": 5174,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "getAmountOut",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2095,
                                  "src": "32555:27:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 5178,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "32555:69:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "32540:84:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 5180,
                            "nodeType": "ExpressionStatement",
                            "src": "32540:84:13"
                          }
                        ]
                      },
                      {
                        "assignments": [
                          5183
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 5183,
                            "mutability": "mutable",
                            "name": "to",
                            "nameLocation": "32661:2:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 5209,
                            "src": "32653:10:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 5182,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "32653:7:13",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 5201,
                        "initialValue": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 5188,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 5184,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5073,
                              "src": "32666:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 5187,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 5185,
                                "name": "length",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5068,
                                "src": "32670:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "32",
                                "id": 5186,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "32679:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "src": "32670:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "32666:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "id": 5199,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5062,
                            "src": "32740:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 5200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "32666:77:13",
                          "trueExpression": {
                            "arguments": [
                              {
                                "id": 5191,
                                "name": "factory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5064,
                                "src": "32706:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 5192,
                                "name": "tokenOut",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5089,
                                "src": "32715:8:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 5193,
                                  "name": "path",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5060,
                                  "src": "32725:4:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 5197,
                                "indexExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 5196,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 5194,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5073,
                                    "src": "32730:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "hexValue": "32",
                                    "id": 5195,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "32734:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "src": "32730:5:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "32725:11:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 5189,
                                "name": "OpenMevLibrary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3158,
                                "src": "32683:14:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                                  "typeString": "type(library OpenMevLibrary)"
                                }
                              },
                              "id": 5190,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "pairFor",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1906,
                              "src": "32683:22:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_address_$",
                                "typeString": "function (address,address,address) pure returns (address)"
                              }
                            },
                            "id": 5198,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "32683:54:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "32653:90:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 5203,
                              "name": "pair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5104,
                              "src": "32799:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 5204,
                              "name": "amountOutput",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5133,
                              "src": "32805:12:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 5205,
                              "name": "isReverse",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5101,
                              "src": "32819:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 5206,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5183,
                              "src": "32830:2:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 5202,
                            "name": "_swapSupportingFeeOnTransferTokensExecute",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5057,
                            "src": "32757:41:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$_t_address_$returns$__$",
                              "typeString": "function (address,uint256,bool,address)"
                            }
                          },
                          "id": 5207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "32757:76:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5208,
                        "nodeType": "ExpressionStatement",
                        "src": "32757:76:13"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5075,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5073,
                      "src": "31680:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 5077,
                          "name": "length",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5068,
                          "src": "31689:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 5076,
                        "name": "_dec",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6699,
                        "src": "31684:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) pure returns (uint256)"
                        }
                      },
                      "id": 5078,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "31684:12:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "31680:16:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5210,
                  "initializationExpression": {
                    "assignments": [
                      5073
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 5073,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "31677:1:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 5210,
                        "src": "31669:9:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 5072,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "31669:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 5074,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "31669:9:13"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 5084,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 5080,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5073,
                        "src": "31698:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "id": 5082,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5073,
                            "src": "31707:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 5081,
                          "name": "_inc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6685,
                          "src": "31702:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) pure returns (uint256)"
                          }
                        },
                        "id": 5083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "31702:7:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "31698:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 5085,
                    "nodeType": "ExpressionStatement",
                    "src": "31698:11:13"
                  },
                  "nodeType": "ForStatement",
                  "src": "31664:1180:13"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_swapSupportingFeeOnTransferTokens",
            "nameLocation": "31481:34:13",
            "parameters": {
              "id": 5065,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5060,
                  "mutability": "mutable",
                  "name": "path",
                  "nameLocation": "31542:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5212,
                  "src": "31525:21:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5058,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "31525:7:13",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 5059,
                    "nodeType": "ArrayTypeName",
                    "src": "31525:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5062,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "31564:3:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5212,
                  "src": "31556:11:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5061,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "31556:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5064,
                  "mutability": "mutable",
                  "name": "factory",
                  "nameLocation": "31585:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5212,
                  "src": "31577:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5063,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "31577:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "31515:83:13"
            },
            "returnParameters": {
              "id": 5066,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "31616:0:13"
            },
            "scope": 6710,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 5297,
            "nodeType": "FunctionDefinition",
            "src": "33579:701:13",
            "body": {
              "id": 5296,
              "nodeType": "Block",
              "src": "33800:480:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5228,
                        "name": "deadline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5224,
                        "src": "33817:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5227,
                      "name": "ensure",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3318,
                      "src": "33810:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 5229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33810:16:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5230,
                  "nodeType": "ExpressionStatement",
                  "src": "33810:16:13"
                },
                {
                  "assignments": [
                    5232
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5232,
                      "mutability": "mutable",
                      "name": "factory",
                      "nameLocation": "33844:7:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 5296,
                      "src": "33836:15:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 5231,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "33836:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5235,
                  "initialValue": {
                    "expression": {
                      "id": 5233,
                      "name": "OpenMevLibrary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3158,
                      "src": "33854:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                        "typeString": "type(library OpenMevLibrary)"
                      }
                    },
                    "id": 5234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "SUSHI_FACTORY",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1799,
                    "src": "33854:28:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "33836:46:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5242,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "33924:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "33924:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 5246,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5232,
                            "src": "33959:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "baseExpression": {
                              "id": 5247,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5220,
                              "src": "33968:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            "id": 5249,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 5248,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "33973:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "33968:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "baseExpression": {
                              "id": 5250,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5220,
                              "src": "33977:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            "id": 5252,
                            "indexExpression": {
                              "hexValue": "31",
                              "id": 5251,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "33982:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "33977:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 5244,
                            "name": "OpenMevLibrary",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3158,
                            "src": "33936:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                              "typeString": "type(library OpenMevLibrary)"
                            }
                          },
                          "id": 5245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "pairFor",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1906,
                          "src": "33936:22:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_address_$",
                            "typeString": "function (address,address,address) pure returns (address)"
                          }
                        },
                        "id": 5253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "33936:49:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5254,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5215,
                        "src": "33987:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 5237,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5220,
                              "src": "33898:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            "id": 5239,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 5238,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "33903:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "33898:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5236,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 435,
                          "src": "33892:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$435_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 5240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "33892:14:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$435",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 5241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7577,
                      "src": "33892:31:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$435_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$435_$",
                        "typeString": "function (contract ERC20,address,address,uint256)"
                      }
                    },
                    "id": 5255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33892:104:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5256,
                  "nodeType": "ExpressionStatement",
                  "src": "33892:104:13"
                },
                {
                  "assignments": [
                    5258
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5258,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "34014:13:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 5296,
                      "src": "34006:21:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5257,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "34006:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5270,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 5268,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5222,
                        "src": "34071:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 5260,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5220,
                              "src": "34036:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            "id": 5265,
                            "indexExpression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 5262,
                                    "name": "path",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5220,
                                    "src": "34046:4:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                      "typeString": "address[] calldata"
                                    }
                                  },
                                  "id": 5263,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "34046:11:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 5261,
                                "name": "_dec",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6699,
                                "src": "34041:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (uint256) pure returns (uint256)"
                                }
                              },
                              "id": 5264,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "34041:17:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "34036:23:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5259,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 435,
                          "src": "34030:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$435_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 5266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "34030:30:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$435",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 5267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 127,
                      "src": "34030:40:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 5269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "34030:44:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "34006:68:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5272,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5220,
                        "src": "34119:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      {
                        "id": 5273,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5222,
                        "src": "34125:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5274,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5232,
                        "src": "34129:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5271,
                      "name": "_swapSupportingFeeOnTransferTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5212,
                      "src": "34084:34:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address[] memory,address,address)"
                      }
                    },
                    "id": 5275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "34084:53:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5276,
                  "nodeType": "ExpressionStatement",
                  "src": "34084:53:13"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 5289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 5286,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5222,
                            "src": "34192:2:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 5278,
                                  "name": "path",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5220,
                                  "src": "34157:4:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                    "typeString": "address[] calldata"
                                  }
                                },
                                "id": 5283,
                                "indexExpression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 5280,
                                        "name": "path",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 5220,
                                        "src": "34167:4:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                          "typeString": "address[] calldata"
                                        }
                                      },
                                      "id": 5281,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "34167:11:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 5279,
                                    "name": "_dec",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6699,
                                    "src": "34162:4:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                                      "typeString": "function (uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 5282,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "34162:17:13",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "34157:23:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 5277,
                              "name": "ERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 435,
                              "src": "34151:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC20_$435_$",
                                "typeString": "type(contract ERC20)"
                              }
                            },
                            "id": 5284,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "34151:30:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$435",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 5285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 127,
                          "src": "34151:40:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 5287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "34151:44:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 5288,
                        "name": "balanceBefore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5258,
                        "src": "34198:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "34151:60:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 5290,
                      "name": "amountOutMin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5217,
                      "src": "34214:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "34151:75:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5295,
                  "nodeType": "IfStatement",
                  "src": "34147:126:13",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 5292,
                        "name": "InsufficientOutputAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3209,
                        "src": "34247:24:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 5293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "34247:26:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 5294,
                    "nodeType": "RevertStatement",
                    "src": "34240:33:13"
                  }
                }
              ]
            },
            "baseFunctions": [
              997
            ],
            "documentation": {
              "id": 5213,
              "nodeType": "StructuredDocumentation",
              "src": "32856:718:13",
              "text": "@notice Identical to swapExactTokensForTokens, but succeeds for tokens that take a fee on transfer. msg.sender should have already given the router an allowance of at least amountIn on the input token.\n @dev Require has been replaced with revert for gas optimization. Attempt to back-run swaps.\n @param amountIn Amount of input tokens to send.\n @param amountOutMin Minimum amount of output tokens that must be received\n @param path Array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity\n @param to Address of receiver\n @param deadline Unix timestamp in seconds after which the transaction will revert"
            },
            "functionSelector": "5c11d795",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
            "nameLocation": "33588:53:13",
            "parameters": {
              "id": 5225,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5215,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "33659:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5297,
                  "src": "33651:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5214,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "33651:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5217,
                  "mutability": "mutable",
                  "name": "amountOutMin",
                  "nameLocation": "33685:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5297,
                  "src": "33677:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5216,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "33677:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5220,
                  "mutability": "mutable",
                  "name": "path",
                  "nameLocation": "33726:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5297,
                  "src": "33707:23:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5218,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "33707:7:13",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 5219,
                    "nodeType": "ArrayTypeName",
                    "src": "33707:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5222,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "33748:2:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5297,
                  "src": "33740:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5221,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "33740:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5224,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "33768:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5297,
                  "src": "33760:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5223,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "33760:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "33641:141:13"
            },
            "returnParameters": {
              "id": 5226,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "33800:0:13"
            },
            "scope": 6710,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 5402,
            "nodeType": "FunctionDefinition",
            "src": "34869:831:13",
            "body": {
              "id": 5401,
              "nodeType": "Block",
              "src": "35069:631:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5311,
                        "name": "deadline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5307,
                        "src": "35086:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5310,
                      "name": "ensure",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3318,
                      "src": "35079:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 5312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "35079:16:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5313,
                  "nodeType": "ExpressionStatement",
                  "src": "35079:16:13"
                },
                {
                  "assignments": [
                    5315
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5315,
                      "mutability": "mutable",
                      "name": "weth",
                      "nameLocation": "35113:4:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 5401,
                      "src": "35105:12:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 5314,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "35105:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5317,
                  "initialValue": {
                    "id": 5316,
                    "name": "WETH09",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3234,
                    "src": "35120:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "35105:21:13"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 5322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 5318,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5303,
                        "src": "35140:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 5320,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 5319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "35145:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "35140:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 5321,
                      "name": "weth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5315,
                      "src": "35151:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "35140:15:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5326,
                  "nodeType": "IfStatement",
                  "src": "35136:41:13",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 5323,
                        "name": "InvalidPath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3191,
                        "src": "35164:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 5324,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "35164:13:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 5325,
                    "nodeType": "RevertStatement",
                    "src": "35157:20:13"
                  }
                },
                {
                  "assignments": [
                    5328
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5328,
                      "mutability": "mutable",
                      "name": "factory",
                      "nameLocation": "35195:7:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 5401,
                      "src": "35187:15:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 5327,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "35187:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5331,
                  "initialValue": {
                    "expression": {
                      "id": 5329,
                      "name": "OpenMevLibrary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3158,
                      "src": "35205:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                        "typeString": "type(library OpenMevLibrary)"
                      }
                    },
                    "id": 5330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "SUSHI_FACTORY",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1799,
                    "src": "35205:28:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "35187:46:13"
                },
                {
                  "assignments": [
                    5333
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5333,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "nameLocation": "35251:8:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 5401,
                      "src": "35243:16:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5332,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "35243:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5336,
                  "initialValue": {
                    "expression": {
                      "id": 5334,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "35262:3:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 5335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "src": "35262:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "35243:28:13"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 5338,
                              "name": "weth",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5315,
                              "src": "35287:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 5337,
                            "name": "IWETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1763,
                            "src": "35281:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IWETH_$1763_$",
                              "typeString": "type(contract IWETH)"
                            }
                          },
                          "id": 5339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "35281:11:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IWETH_$1763",
                            "typeString": "contract IWETH"
                          }
                        },
                        "id": 5340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1748,
                        "src": "35281:19:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 5342,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 5341,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5333,
                          "src": "35309:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "35281:38:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 5343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "35281:40:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5344,
                  "nodeType": "ExpressionStatement",
                  "src": "35281:40:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 5351,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5328,
                            "src": "35379:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "baseExpression": {
                              "id": 5352,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5303,
                              "src": "35388:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            "id": 5354,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 5353,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "35393:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "35388:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "baseExpression": {
                              "id": 5355,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5303,
                              "src": "35397:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            "id": 5357,
                            "indexExpression": {
                              "hexValue": "31",
                              "id": 5356,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "35402:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "35397:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 5349,
                            "name": "OpenMevLibrary",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3158,
                            "src": "35356:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                              "typeString": "type(library OpenMevLibrary)"
                            }
                          },
                          "id": 5350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "pairFor",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1906,
                          "src": "35356:22:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_address_$",
                            "typeString": "function (address,address,address) pure returns (address)"
                          }
                        },
                        "id": 5358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "35356:49:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5359,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5333,
                        "src": "35407:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 5346,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5315,
                            "src": "35337:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5345,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 435,
                          "src": "35331:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$435_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 5347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "35331:11:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$435",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 5348,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7597,
                      "src": "35331:24:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$435_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$435_$",
                        "typeString": "function (contract ERC20,address,uint256)"
                      }
                    },
                    "id": 5360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "35331:85:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5361,
                  "nodeType": "ExpressionStatement",
                  "src": "35331:85:13"
                },
                {
                  "assignments": [
                    5363
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5363,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "35434:13:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 5401,
                      "src": "35426:21:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5362,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "35426:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5375,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 5373,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5305,
                        "src": "35491:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 5365,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5303,
                              "src": "35456:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            "id": 5370,
                            "indexExpression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 5367,
                                    "name": "path",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5303,
                                    "src": "35466:4:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                      "typeString": "address[] calldata"
                                    }
                                  },
                                  "id": 5368,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "35466:11:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 5366,
                                "name": "_dec",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6699,
                                "src": "35461:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (uint256) pure returns (uint256)"
                                }
                              },
                              "id": 5369,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "35461:17:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "35456:23:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5364,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 435,
                          "src": "35450:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$435_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 5371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "35450:30:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$435",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 5372,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 127,
                      "src": "35450:40:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 5374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "35450:44:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "35426:68:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5377,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5303,
                        "src": "35539:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      {
                        "id": 5378,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5305,
                        "src": "35545:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5379,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5328,
                        "src": "35549:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5376,
                      "name": "_swapSupportingFeeOnTransferTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5212,
                      "src": "35504:34:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address[] memory,address,address)"
                      }
                    },
                    "id": 5380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "35504:53:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5381,
                  "nodeType": "ExpressionStatement",
                  "src": "35504:53:13"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 5394,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 5391,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5305,
                            "src": "35612:2:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 5383,
                                  "name": "path",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5303,
                                  "src": "35577:4:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                    "typeString": "address[] calldata"
                                  }
                                },
                                "id": 5388,
                                "indexExpression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 5385,
                                        "name": "path",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 5303,
                                        "src": "35587:4:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                          "typeString": "address[] calldata"
                                        }
                                      },
                                      "id": 5386,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "35587:11:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 5384,
                                    "name": "_dec",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6699,
                                    "src": "35582:4:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                                      "typeString": "function (uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 5387,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "35582:17:13",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "35577:23:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 5382,
                              "name": "ERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 435,
                              "src": "35571:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC20_$435_$",
                                "typeString": "type(contract ERC20)"
                              }
                            },
                            "id": 5389,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "35571:30:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$435",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 5390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 127,
                          "src": "35571:40:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 5392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "35571:44:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 5393,
                        "name": "balanceBefore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5363,
                        "src": "35618:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "35571:60:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 5395,
                      "name": "amountOutMin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5300,
                      "src": "35634:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "35571:75:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5400,
                  "nodeType": "IfStatement",
                  "src": "35567:126:13",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 5397,
                        "name": "InsufficientOutputAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3209,
                        "src": "35667:24:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 5398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "35667:26:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 5399,
                    "nodeType": "RevertStatement",
                    "src": "35660:33:13"
                  }
                }
              ]
            },
            "baseFunctions": [
              1009
            ],
            "documentation": {
              "id": 5298,
              "nodeType": "StructuredDocumentation",
              "src": "34286:578:13",
              "text": "@notice Identical to swapExactETHForTokens, but succeeds for tokens that take a fee on transfer. amountIn = msg.value\n @dev Require has been replaced with revert for gas optimization. Attempt to back-run swaps.\n @param amountOutMin Minimum amount of output tokens that must be received\n @param path Array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity\n @param to Address of receiver\n @param deadline Unix timestamp in seconds after which the transaction will revert"
            },
            "functionSelector": "b6f9de95",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
            "nameLocation": "34878:50:13",
            "parameters": {
              "id": 5308,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5300,
                  "mutability": "mutable",
                  "name": "amountOutMin",
                  "nameLocation": "34946:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5402,
                  "src": "34938:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5299,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "34938:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5303,
                  "mutability": "mutable",
                  "name": "path",
                  "nameLocation": "34987:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5402,
                  "src": "34968:23:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5301,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "34968:7:13",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 5302,
                    "nodeType": "ArrayTypeName",
                    "src": "34968:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5305,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "35009:2:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5402,
                  "src": "35001:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5304,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "35001:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5307,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "35029:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5402,
                  "src": "35021:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5306,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "35021:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "34928:115:13"
            },
            "returnParameters": {
              "id": 5309,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "35069:0:13"
            },
            "scope": 6710,
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 5520,
            "nodeType": "FunctionDefinition",
            "src": "36314:915:13",
            "body": {
              "id": 5519,
              "nodeType": "Block",
              "src": "36532:697:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5418,
                        "name": "deadline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5414,
                        "src": "36549:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5417,
                      "name": "ensure",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3318,
                      "src": "36542:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 5419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "36542:16:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5420,
                  "nodeType": "ExpressionStatement",
                  "src": "36542:16:13"
                },
                {
                  "assignments": [
                    5422
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5422,
                      "mutability": "mutable",
                      "name": "weth",
                      "nameLocation": "36576:4:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 5519,
                      "src": "36568:12:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 5421,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "36568:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5424,
                  "initialValue": {
                    "id": 5423,
                    "name": "WETH09",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3234,
                    "src": "36583:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "36568:21:13"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 5432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 5425,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5410,
                        "src": "36603:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 5430,
                      "indexExpression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 5427,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5410,
                              "src": "36613:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            "id": 5428,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "36613:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 5426,
                          "name": "_dec",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6699,
                          "src": "36608:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) pure returns (uint256)"
                          }
                        },
                        "id": 5429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "36608:17:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "36603:23:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 5431,
                      "name": "weth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5422,
                      "src": "36630:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "36603:31:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5436,
                  "nodeType": "IfStatement",
                  "src": "36599:57:13",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 5433,
                        "name": "InvalidPath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3191,
                        "src": "36643:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 5434,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "36643:13:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 5435,
                    "nodeType": "RevertStatement",
                    "src": "36636:20:13"
                  }
                },
                {
                  "assignments": [
                    5438
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5438,
                      "mutability": "mutable",
                      "name": "factory",
                      "nameLocation": "36674:7:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 5519,
                      "src": "36666:15:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 5437,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "36666:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5441,
                  "initialValue": {
                    "expression": {
                      "id": 5439,
                      "name": "OpenMevLibrary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3158,
                      "src": "36684:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                        "typeString": "type(library OpenMevLibrary)"
                      }
                    },
                    "id": 5440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "SUSHI_FACTORY",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1799,
                    "src": "36684:28:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "36666:46:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5448,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "36754:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "36754:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 5452,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5438,
                            "src": "36789:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "baseExpression": {
                              "id": 5453,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5410,
                              "src": "36798:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            "id": 5455,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 5454,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "36803:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "36798:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "baseExpression": {
                              "id": 5456,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5410,
                              "src": "36807:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            "id": 5458,
                            "indexExpression": {
                              "hexValue": "31",
                              "id": 5457,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "36812:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "36807:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 5450,
                            "name": "OpenMevLibrary",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3158,
                            "src": "36766:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                              "typeString": "type(library OpenMevLibrary)"
                            }
                          },
                          "id": 5451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "pairFor",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1906,
                          "src": "36766:22:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_address_$",
                            "typeString": "function (address,address,address) pure returns (address)"
                          }
                        },
                        "id": 5459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "36766:49:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5460,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5405,
                        "src": "36817:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 5443,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5410,
                              "src": "36728:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            "id": 5445,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 5444,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "36733:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "36728:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5442,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 435,
                          "src": "36722:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$435_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 5446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "36722:14:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$435",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 5447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7577,
                      "src": "36722:31:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$435_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$435_$",
                        "typeString": "function (contract ERC20,address,address,uint256)"
                      }
                    },
                    "id": 5461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "36722:104:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5462,
                  "nodeType": "ExpressionStatement",
                  "src": "36722:104:13"
                },
                {
                  "assignments": [
                    5464
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5464,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "36844:13:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 5519,
                      "src": "36836:21:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5463,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "36836:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5474,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 5471,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "36890:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OpenMevRouter_$6710",
                              "typeString": "contract OpenMevRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OpenMevRouter_$6710",
                              "typeString": "contract OpenMevRouter"
                            }
                          ],
                          "id": 5470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "36882:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5469,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "36882:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "36882:13:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 5466,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5422,
                            "src": "36866:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5465,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 435,
                          "src": "36860:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$435_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 5467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "36860:11:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$435",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 5468,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 127,
                      "src": "36860:21:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 5473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "36860:36:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "36836:60:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5476,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5410,
                        "src": "36941:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 5479,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "36955:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OpenMevRouter_$6710",
                              "typeString": "contract OpenMevRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OpenMevRouter_$6710",
                              "typeString": "contract OpenMevRouter"
                            }
                          ],
                          "id": 5478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "36947:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5477,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "36947:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "36947:13:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5481,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5438,
                        "src": "36962:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5475,
                      "name": "_swapSupportingFeeOnTransferTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5212,
                      "src": "36906:34:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address[] memory,address,address)"
                      }
                    },
                    "id": 5482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "36906:64:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5483,
                  "nodeType": "ExpressionStatement",
                  "src": "36906:64:13"
                },
                {
                  "assignments": [
                    5485
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5485,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "36988:9:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 5519,
                      "src": "36980:17:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5484,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "36980:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5497,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 5492,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "37030:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OpenMevRouter_$6710",
                                "typeString": "contract OpenMevRouter"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_OpenMevRouter_$6710",
                                "typeString": "contract OpenMevRouter"
                              }
                            ],
                            "id": 5491,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "37022:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5490,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "37022:7:13",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "37022:13:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 5487,
                              "name": "weth",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5422,
                              "src": "37006:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 5486,
                            "name": "ERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 435,
                            "src": "37000:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC20_$435_$",
                              "typeString": "type(contract ERC20)"
                            }
                          },
                          "id": 5488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "37000:11:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$435",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 5489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 127,
                        "src": "37000:21:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 5494,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "37000:36:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 5495,
                      "name": "balanceBefore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5464,
                      "src": "37039:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "37000:52:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "36980:72:13"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5498,
                      "name": "amountOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5485,
                      "src": "37066:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 5499,
                      "name": "amountOutMin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5407,
                      "src": "37078:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "37066:24:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5504,
                  "nodeType": "IfStatement",
                  "src": "37062:63:13",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 5501,
                        "name": "InsufficientOutputAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3209,
                        "src": "37099:24:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 5502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "37099:26:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 5503,
                    "nodeType": "RevertStatement",
                    "src": "37092:33:13"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5509,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5485,
                        "src": "37156:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 5506,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5422,
                            "src": "37141:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5505,
                          "name": "IWETH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1763,
                          "src": "37135:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IWETH_$1763_$",
                            "typeString": "type(contract IWETH)"
                          }
                        },
                        "id": 5507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "37135:11:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IWETH_$1763",
                          "typeString": "contract IWETH"
                        }
                      },
                      "id": 5508,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1762,
                      "src": "37135:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 5510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "37135:31:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5511,
                  "nodeType": "ExpressionStatement",
                  "src": "37135:31:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5515,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5412,
                        "src": "37208:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5516,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5485,
                        "src": "37212:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5512,
                        "name": "SafeTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7618,
                        "src": "37176:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeTransferLib_$7618_$",
                          "typeString": "type(library SafeTransferLib)"
                        }
                      },
                      "id": 5514,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7555,
                      "src": "37176:31:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 5517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "37176:46:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5518,
                  "nodeType": "ExpressionStatement",
                  "src": "37176:46:13"
                }
              ]
            },
            "baseFunctions": [
              1023
            ],
            "documentation": {
              "id": 5403,
              "nodeType": "StructuredDocumentation",
              "src": "35706:603:13",
              "text": "@notice Identical to swapExactTokensForETH, but succeeds for tokens that take a fee on transfer.\n @dev Require has been replaced with revert for gas optimization. Attempt to back-run swaps.\n @param amountIn Amount of input tokens to send.\n @param amountOutMin Minimum amount of ETH that must be received\n @param path Array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity\n @param to Address of receiver\n @param deadline Unix timestamp in seconds after which the transaction will revert"
            },
            "functionSelector": "791ac947",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
            "nameLocation": "36323:50:13",
            "parameters": {
              "id": 5415,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5405,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "36391:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5520,
                  "src": "36383:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5404,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "36383:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5407,
                  "mutability": "mutable",
                  "name": "amountOutMin",
                  "nameLocation": "36417:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5520,
                  "src": "36409:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5406,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "36409:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5410,
                  "mutability": "mutable",
                  "name": "path",
                  "nameLocation": "36458:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5520,
                  "src": "36439:23:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5408,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "36439:7:13",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 5409,
                    "nodeType": "ArrayTypeName",
                    "src": "36439:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5412,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "36480:2:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5520,
                  "src": "36472:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5411,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "36472:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5414,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "36500:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5520,
                  "src": "36492:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5413,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "36492:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "36373:141:13"
            },
            "returnParameters": {
              "id": 5416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "36532:0:13"
            },
            "scope": 6710,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 5539,
            "nodeType": "FunctionDefinition",
            "src": "37235:219:13",
            "body": {
              "id": 5538,
              "nodeType": "Block",
              "src": "37381:73:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5533,
                        "name": "amountA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5522,
                        "src": "37419:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 5534,
                        "name": "reserveA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5524,
                        "src": "37428:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 5535,
                        "name": "reserveB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5526,
                        "src": "37438:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5531,
                        "name": "OpenMevLibrary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3158,
                        "src": "37398:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                          "typeString": "type(library OpenMevLibrary)"
                        }
                      },
                      "id": 5532,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "quote",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2021,
                      "src": "37398:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 5536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "37398:49:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5530,
                  "id": 5537,
                  "nodeType": "Return",
                  "src": "37391:56:13"
                }
              ]
            },
            "baseFunctions": [
              897
            ],
            "functionSelector": "ad615dec",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "quote",
            "nameLocation": "37244:5:13",
            "parameters": {
              "id": 5527,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5522,
                  "mutability": "mutable",
                  "name": "amountA",
                  "nameLocation": "37267:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5539,
                  "src": "37259:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5521,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "37259:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5524,
                  "mutability": "mutable",
                  "name": "reserveA",
                  "nameLocation": "37292:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5539,
                  "src": "37284:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5523,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "37284:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5526,
                  "mutability": "mutable",
                  "name": "reserveB",
                  "nameLocation": "37318:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5539,
                  "src": "37310:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5525,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "37310:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "37249:83:13"
            },
            "returnParameters": {
              "id": 5530,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5529,
                  "mutability": "mutable",
                  "name": "amountB",
                  "nameLocation": "37372:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5539,
                  "src": "37364:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5528,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "37364:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "37363:17:13"
            },
            "scope": 6710,
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 5558,
            "nodeType": "FunctionDefinition",
            "src": "37460:243:13",
            "body": {
              "id": 5557,
              "nodeType": "Block",
              "src": "37619:84:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5552,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5541,
                        "src": "37664:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 5553,
                        "name": "reserveIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5543,
                        "src": "37674:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 5554,
                        "name": "reserveOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5545,
                        "src": "37685:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5550,
                        "name": "OpenMevLibrary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3158,
                        "src": "37636:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                          "typeString": "type(library OpenMevLibrary)"
                        }
                      },
                      "id": 5551,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getAmountOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2095,
                      "src": "37636:27:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 5555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "37636:60:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5549,
                  "id": 5556,
                  "nodeType": "Return",
                  "src": "37629:67:13"
                }
              ]
            },
            "baseFunctions": [
              908
            ],
            "functionSelector": "054d50d4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAmountOut",
            "nameLocation": "37469:12:13",
            "parameters": {
              "id": 5546,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5541,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "37499:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5558,
                  "src": "37491:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5540,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "37491:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5543,
                  "mutability": "mutable",
                  "name": "reserveIn",
                  "nameLocation": "37525:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5558,
                  "src": "37517:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5542,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "37517:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5545,
                  "mutability": "mutable",
                  "name": "reserveOut",
                  "nameLocation": "37552:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5558,
                  "src": "37544:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5544,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "37544:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "37481:87:13"
            },
            "returnParameters": {
              "id": 5549,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5548,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nameLocation": "37608:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5558,
                  "src": "37600:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5547,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "37600:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "37599:19:13"
            },
            "scope": 6710,
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 5577,
            "nodeType": "FunctionDefinition",
            "src": "37709:242:13",
            "body": {
              "id": 5576,
              "nodeType": "Block",
              "src": "37867:84:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5571,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5560,
                        "src": "37911:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 5572,
                        "name": "reserveIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5562,
                        "src": "37922:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 5573,
                        "name": "reserveOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5564,
                        "src": "37933:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5569,
                        "name": "OpenMevLibrary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3158,
                        "src": "37884:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                          "typeString": "type(library OpenMevLibrary)"
                        }
                      },
                      "id": 5570,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getAmountIn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2178,
                      "src": "37884:26:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 5574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "37884:60:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5568,
                  "id": 5575,
                  "nodeType": "Return",
                  "src": "37877:67:13"
                }
              ]
            },
            "baseFunctions": [
              919
            ],
            "functionSelector": "85f8c259",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAmountIn",
            "nameLocation": "37718:11:13",
            "parameters": {
              "id": 5565,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5560,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nameLocation": "37747:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5577,
                  "src": "37739:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5559,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "37739:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5562,
                  "mutability": "mutable",
                  "name": "reserveIn",
                  "nameLocation": "37774:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5577,
                  "src": "37766:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5561,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "37766:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5564,
                  "mutability": "mutable",
                  "name": "reserveOut",
                  "nameLocation": "37801:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5577,
                  "src": "37793:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5563,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "37793:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "37729:88:13"
            },
            "returnParameters": {
              "id": 5568,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5567,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "37857:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5577,
                  "src": "37849:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5566,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "37849:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "37848:18:13"
            },
            "scope": 6710,
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 5597,
            "nodeType": "FunctionDefinition",
            "src": "37957:257:13",
            "body": {
              "id": 5596,
              "nodeType": "Block",
              "src": "38116:98:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5590,
                          "name": "OpenMevLibrary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3158,
                          "src": "38162:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                            "typeString": "type(library OpenMevLibrary)"
                          }
                        },
                        "id": 5591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "SUSHI_FACTORY",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1799,
                        "src": "38162:28:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5592,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5579,
                        "src": "38192:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 5593,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5582,
                        "src": "38202:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      ],
                      "expression": {
                        "id": 5588,
                        "name": "OpenMevLibrary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3158,
                        "src": "38133:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                          "typeString": "type(library OpenMevLibrary)"
                        }
                      },
                      "id": 5589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getAmountsOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2265,
                      "src": "38133:28:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (address,uint256,address[] memory) view returns (uint256[] memory)"
                      }
                    },
                    "id": 5594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "38133:74:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 5587,
                  "id": 5595,
                  "nodeType": "Return",
                  "src": "38126:81:13"
                }
              ]
            },
            "baseFunctions": [
              930
            ],
            "functionSelector": "d06ca61f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAmountsOut",
            "nameLocation": "37966:13:13",
            "parameters": {
              "id": 5583,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5579,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "37988:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5597,
                  "src": "37980:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5578,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "37980:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5582,
                  "mutability": "mutable",
                  "name": "path",
                  "nameLocation": "38017:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5597,
                  "src": "37998:23:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5580,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "37998:7:13",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 5581,
                    "nodeType": "ArrayTypeName",
                    "src": "37998:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "37979:43:13"
            },
            "returnParameters": {
              "id": 5587,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5586,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "38103:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5597,
                  "src": "38086:24:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5584,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "38086:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 5585,
                    "nodeType": "ArrayTypeName",
                    "src": "38086:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "38085:26:13"
            },
            "scope": 6710,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 5617,
            "nodeType": "FunctionDefinition",
            "src": "38220:257:13",
            "body": {
              "id": 5616,
              "nodeType": "Block",
              "src": "38379:98:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5610,
                          "name": "OpenMevLibrary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3158,
                          "src": "38424:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                            "typeString": "type(library OpenMevLibrary)"
                          }
                        },
                        "id": 5611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "SUSHI_FACTORY",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1799,
                        "src": "38424:28:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5612,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5599,
                        "src": "38454:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 5613,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5602,
                        "src": "38465:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      ],
                      "expression": {
                        "id": 5608,
                        "name": "OpenMevLibrary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3158,
                        "src": "38396:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                          "typeString": "type(library OpenMevLibrary)"
                        }
                      },
                      "id": 5609,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getAmountsIn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2564,
                      "src": "38396:27:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (address,uint256,address[] memory) view returns (uint256[] memory)"
                      }
                    },
                    "id": 5614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "38396:74:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 5607,
                  "id": 5615,
                  "nodeType": "Return",
                  "src": "38389:81:13"
                }
              ]
            },
            "baseFunctions": [
              941
            ],
            "functionSelector": "1f00ca74",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAmountsIn",
            "nameLocation": "38229:12:13",
            "parameters": {
              "id": 5603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5599,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nameLocation": "38250:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5617,
                  "src": "38242:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5598,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "38242:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5602,
                  "mutability": "mutable",
                  "name": "path",
                  "nameLocation": "38280:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5617,
                  "src": "38261:23:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5600,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "38261:7:13",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 5601,
                    "nodeType": "ArrayTypeName",
                    "src": "38261:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "38241:44:13"
            },
            "returnParameters": {
              "id": 5607,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5606,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "38366:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5617,
                  "src": "38349:24:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5604,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "38349:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 5605,
                    "nodeType": "ArrayTypeName",
                    "src": "38349:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "38348:26:13"
            },
            "scope": 6710,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 5854,
            "nodeType": "FunctionDefinition",
            "src": "38698:3378:13",
            "body": {
              "id": 5853,
              "nodeType": "Block",
              "src": "38783:3293:13",
              "statements": [
                {
                  "assignments": [
                    5628
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5628,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "38801:6:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 5853,
                      "src": "38793:14:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5627,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "38793:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5631,
                  "initialValue": {
                    "expression": {
                      "id": 5629,
                      "name": "swaps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5624,
                      "src": "38810:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                      }
                    },
                    "id": 5630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "38810:12:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "38793:29:13"
                },
                {
                  "body": {
                    "id": 5851,
                    "nodeType": "Block",
                    "src": "38873:3197:13",
                    "statements": [
                      {
                        "condition": {
                          "expression": {
                            "baseExpression": {
                              "id": 5644,
                              "name": "swaps",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5624,
                              "src": "38891:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                              }
                            },
                            "id": 5646,
                            "indexExpression": {
                              "id": 5645,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5633,
                              "src": "38897:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "38891:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Swap_$1796_memory_ptr",
                              "typeString": "struct OpenMevLibrary.Swap memory"
                            }
                          },
                          "id": 5647,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isBackrunnable",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1785,
                          "src": "38891:23:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 5850,
                        "nodeType": "IfStatement",
                        "src": "38887:3173:13",
                        "trueBody": {
                          "id": 5849,
                          "nodeType": "Block",
                          "src": "38916:3144:13",
                          "statements": [
                            {
                              "assignments": [
                                5649,
                                5651
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 5649,
                                  "mutability": "mutable",
                                  "name": "input",
                                  "nameLocation": "38943:5:13",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 5849,
                                  "src": "38935:13:13",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 5648,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "38935:7:13",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                {
                                  "constant": false,
                                  "id": 5651,
                                  "mutability": "mutable",
                                  "name": "output",
                                  "nameLocation": "38958:6:13",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 5849,
                                  "src": "38950:14:13",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 5650,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "38950:7:13",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 5661,
                              "initialValue": {
                                "components": [
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 5652,
                                        "name": "swaps",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 5624,
                                        "src": "38969:5:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                                          "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                                        }
                                      },
                                      "id": 5654,
                                      "indexExpression": {
                                        "id": 5653,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 5633,
                                        "src": "38975:1:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "38969:8:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Swap_$1796_memory_ptr",
                                        "typeString": "struct OpenMevLibrary.Swap memory"
                                      }
                                    },
                                    "id": 5655,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenIn",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1787,
                                    "src": "38969:16:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 5656,
                                        "name": "swaps",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 5624,
                                        "src": "38987:5:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                                          "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                                        }
                                      },
                                      "id": 5658,
                                      "indexExpression": {
                                        "id": 5657,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 5633,
                                        "src": "38993:1:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "38987:8:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Swap_$1796_memory_ptr",
                                        "typeString": "struct OpenMevLibrary.Swap memory"
                                      }
                                    },
                                    "id": 5659,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenOut",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1789,
                                    "src": "38987:17:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "id": 5660,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "38968:37:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                                  "typeString": "tuple(address,address)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "38934:71:13"
                            },
                            {
                              "assignments": [
                                5663
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 5663,
                                  "mutability": "mutable",
                                  "name": "isAaveAsset",
                                  "nameLocation": "39028:11:13",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 5849,
                                  "src": "39023:16:13",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "typeName": {
                                    "id": 5662,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "39023:4:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 5667,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 5664,
                                  "name": "IS_AAVE_ASSET",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3256,
                                  "src": "39042:13:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 5666,
                                "indexExpression": {
                                  "id": 5665,
                                  "name": "output",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5651,
                                  "src": "39056:6:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "39042:21:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "39023:40:13"
                            },
                            {
                              "assignments": [
                                5669
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 5669,
                                  "mutability": "mutable",
                                  "name": "contractAssetBalance",
                                  "nameLocation": "39089:20:13",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 5849,
                                  "src": "39081:28:13",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 5668,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "39081:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 5679,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 5676,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "39144:4:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_OpenMevRouter_$6710",
                                          "typeString": "contract OpenMevRouter"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_OpenMevRouter_$6710",
                                          "typeString": "contract OpenMevRouter"
                                        }
                                      ],
                                      "id": 5675,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "39136:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 5674,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "39136:7:13",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 5677,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "39136:13:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 5671,
                                        "name": "output",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 5651,
                                        "src": "39118:6:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 5670,
                                      "name": "ERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 435,
                                      "src": "39112:5:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ERC20_$435_$",
                                        "typeString": "type(contract ERC20)"
                                      }
                                    },
                                    "id": 5672,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "39112:13:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20_$435",
                                      "typeString": "contract ERC20"
                                    }
                                  },
                                  "id": 5673,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 127,
                                  "src": "39112:23:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 5678,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "39112:38:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "39081:69:13"
                            },
                            {
                              "assignments": [
                                5681
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 5681,
                                  "mutability": "mutable",
                                  "name": "bentoBalance",
                                  "nameLocation": "39176:12:13",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 5849,
                                  "src": "39168:20:13",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 5680,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "39168:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 5688,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 5686,
                                    "name": "BENTO",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3243,
                                    "src": "39215:5:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 5683,
                                        "name": "output",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 5651,
                                        "src": "39197:6:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 5682,
                                      "name": "ERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 435,
                                      "src": "39191:5:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ERC20_$435_$",
                                        "typeString": "type(contract ERC20)"
                                      }
                                    },
                                    "id": 5684,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "39191:13:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20_$435",
                                      "typeString": "contract ERC20"
                                    }
                                  },
                                  "id": 5685,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 127,
                                  "src": "39191:23:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 5687,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "39191:30:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "39168:53:13"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 5697,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 5693,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [
                                      {
                                        "id": 5690,
                                        "name": "contractAssetBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 5669,
                                        "src": "39254:20:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 5689,
                                      "name": "_isNonZero",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6671,
                                      "src": "39243:10:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_bool_$",
                                        "typeString": "function (uint256) pure returns (bool)"
                                      }
                                    },
                                    "id": 5691,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "39243:32:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "||",
                                  "rightExpression": {
                                    "id": 5692,
                                    "name": "isAaveAsset",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5663,
                                    "src": "39279:11:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "39243:47:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "id": 5695,
                                      "name": "bentoBalance",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5681,
                                      "src": "39305:12:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 5694,
                                    "name": "_isNonZero",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6671,
                                    "src": "39294:10:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function (uint256) pure returns (bool)"
                                    }
                                  },
                                  "id": 5696,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "39294:24:13",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "39243:75:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 5848,
                              "nodeType": "IfStatement",
                              "src": "39239:2807:13",
                              "trueBody": {
                                "id": 5847,
                                "nodeType": "Block",
                                "src": "39320:2726:13",
                                "statements": [
                                  {
                                    "assignments": [
                                      5699
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 5699,
                                        "mutability": "mutable",
                                        "name": "factory1",
                                        "nameLocation": "39350:8:13",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 5847,
                                        "src": "39342:16:13",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        "typeName": {
                                          "id": 5698,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "39342:7:13",
                                          "stateMutability": "nonpayable",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 5708,
                                    "initialValue": {
                                      "condition": {
                                        "commonType": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        "id": 5703,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 5700,
                                          "name": "factory",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 5620,
                                          "src": "39361:7:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "expression": {
                                            "id": 5701,
                                            "name": "OpenMevLibrary",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3158,
                                            "src": "39372:14:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                                              "typeString": "type(library OpenMevLibrary)"
                                            }
                                          },
                                          "id": 5702,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "SUSHI_FACTORY",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1799,
                                          "src": "39372:28:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "src": "39361:39:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "falseExpression": {
                                        "expression": {
                                          "id": 5705,
                                          "name": "OpenMevLibrary",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3158,
                                          "src": "39468:14:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                                            "typeString": "type(library OpenMevLibrary)"
                                          }
                                        },
                                        "id": 5706,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "SUSHI_FACTORY",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1799,
                                        "src": "39468:28:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "id": 5707,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "Conditional",
                                      "src": "39361:135:13",
                                      "trueExpression": {
                                        "id": 5704,
                                        "name": "BACKUP_FACTORY",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3237,
                                        "src": "39427:14:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "39342:154:13"
                                  },
                                  {
                                    "assignments": [
                                      5710
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 5710,
                                        "mutability": "mutable",
                                        "name": "pair1",
                                        "nameLocation": "39526:5:13",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 5847,
                                        "src": "39518:13:13",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        "typeName": {
                                          "id": 5709,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "39518:7:13",
                                          "stateMutability": "nonpayable",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 5721,
                                    "initialValue": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 5717,
                                              "name": "input",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 5649,
                                              "src": "39578:5:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            {
                                              "id": 5718,
                                              "name": "output",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 5651,
                                              "src": "39585:6:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "expression": {
                                              "arguments": [
                                                {
                                                  "id": 5714,
                                                  "name": "factory1",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 5699,
                                                  "src": "39560:8:13",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                ],
                                                "id": 5713,
                                                "name": "IUniswapV2Factory",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1108,
                                                "src": "39542:17:13",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_contract$_IUniswapV2Factory_$1108_$",
                                                  "typeString": "type(contract IUniswapV2Factory)"
                                                }
                                              },
                                              "id": 5715,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "39542:27:13",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IUniswapV2Factory_$1108",
                                                "typeString": "contract IUniswapV2Factory"
                                              }
                                            },
                                            "id": 5716,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "getPair",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1076,
                                            "src": "39542:35:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_address_$",
                                              "typeString": "function (address,address) view external returns (address)"
                                            }
                                          },
                                          "id": 5719,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "39542:50:13",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 5712,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "39534:7:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 5711,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "39534:7:13",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 5720,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "39534:59:13",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "39518:75:13"
                                  },
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      "id": 5727,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 5722,
                                        "name": "pair1",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 5710,
                                        "src": "39619:5:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "!=",
                                      "rightExpression": {
                                        "arguments": [
                                          {
                                            "hexValue": "30",
                                            "id": 5725,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "39636:1:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            }
                                          ],
                                          "id": 5724,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "39628:7:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 5723,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "39628:7:13",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 5726,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "39628:10:13",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "src": "39619:19:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 5846,
                                    "nodeType": "IfStatement",
                                    "src": "39615:2413:13",
                                    "trueBody": {
                                      "id": 5845,
                                      "nodeType": "Block",
                                      "src": "39640:2388:13",
                                      "statements": [
                                        {
                                          "assignments": [
                                            5729,
                                            5731
                                          ],
                                          "declarations": [
                                            {
                                              "constant": false,
                                              "id": 5729,
                                              "mutability": "mutable",
                                              "name": "optimalAmount",
                                              "nameLocation": "39675:13:13",
                                              "nodeType": "VariableDeclaration",
                                              "scope": 5845,
                                              "src": "39667:21:13",
                                              "stateVariable": false,
                                              "storageLocation": "default",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "typeName": {
                                                "id": 5728,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "39667:7:13",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "visibility": "internal"
                                            },
                                            {
                                              "constant": false,
                                              "id": 5731,
                                              "mutability": "mutable",
                                              "name": "optimalReturns",
                                              "nameLocation": "39698:14:13",
                                              "nodeType": "VariableDeclaration",
                                              "scope": 5845,
                                              "src": "39690:22:13",
                                              "stateVariable": false,
                                              "storageLocation": "default",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "typeName": {
                                                "id": 5730,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "39690:7:13",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "visibility": "internal"
                                            }
                                          ],
                                          "id": 5747,
                                          "initialValue": {
                                            "arguments": [
                                              {
                                                "expression": {
                                                  "baseExpression": {
                                                    "id": 5734,
                                                    "name": "swaps",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 5624,
                                                    "src": "39778:5:13",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                                                      "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                                                    }
                                                  },
                                                  "id": 5736,
                                                  "indexExpression": {
                                                    "id": 5735,
                                                    "name": "i",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 5633,
                                                    "src": "39784:1:13",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "39778:8:13",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Swap_$1796_memory_ptr",
                                                    "typeString": "struct OpenMevLibrary.Swap memory"
                                                  }
                                                },
                                                "id": 5737,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "pair",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 1791,
                                                "src": "39778:13:13",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              {
                                                "id": 5738,
                                                "name": "pair1",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 5710,
                                                "src": "39821:5:13",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              {
                                                "expression": {
                                                  "baseExpression": {
                                                    "id": 5739,
                                                    "name": "swaps",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 5624,
                                                    "src": "39856:5:13",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                                                      "typeString": "struct OpenMevLibrary.Swap memory[] memory"
                                                    }
                                                  },
                                                  "id": 5741,
                                                  "indexExpression": {
                                                    "id": 5740,
                                                    "name": "i",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 5633,
                                                    "src": "39862:1:13",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "39856:8:13",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Swap_$1796_memory_ptr",
                                                    "typeString": "struct OpenMevLibrary.Swap memory"
                                                  }
                                                },
                                                "id": 5742,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "isReverse",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 1783,
                                                "src": "39856:18:13",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              {
                                                "id": 5743,
                                                "name": "isAaveAsset",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 5663,
                                                "src": "39904:11:13",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              {
                                                "id": 5744,
                                                "name": "contractAssetBalance",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 5669,
                                                "src": "39945:20:13",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              {
                                                "id": 5745,
                                                "name": "bentoBalance",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 5681,
                                                "src": "39995:12:13",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                },
                                                {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "expression": {
                                                "id": 5732,
                                                "name": "OpenMevLibrary",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3158,
                                                "src": "39716:14:13",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                                                  "typeString": "type(library OpenMevLibrary)"
                                                }
                                              },
                                              "id": 5733,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "getOptimalAmounts",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 3109,
                                              "src": "39716:32:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_bool_$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                                                "typeString": "function (address,address,bool,bool,uint256,uint256) view returns (uint256,uint256)"
                                              }
                                            },
                                            "id": 5746,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "39716:317:13",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                                              "typeString": "tuple(uint256,uint256)"
                                            }
                                          },
                                          "nodeType": "VariableDeclarationStatement",
                                          "src": "39666:367:13"
                                        },
                                        {
                                          "condition": {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 5753,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 5748,
                                              "name": "optimalReturns",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 5731,
                                              "src": "40063:14:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": ">",
                                            "rightExpression": {
                                              "arguments": [
                                                {
                                                  "hexValue": "30",
                                                  "id": 5751,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "40088:1:13",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_0_by_1",
                                                    "typeString": "int_const 0"
                                                  },
                                                  "value": "0"
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_rational_0_by_1",
                                                    "typeString": "int_const 0"
                                                  }
                                                ],
                                                "id": 5750,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "40080:7:13",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_uint256_$",
                                                  "typeString": "type(uint256)"
                                                },
                                                "typeName": {
                                                  "id": 5749,
                                                  "name": "uint256",
                                                  "nodeType": "ElementaryTypeName",
                                                  "src": "40080:7:13",
                                                  "typeDescriptions": {}
                                                }
                                              },
                                              "id": 5752,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "40080:10:13",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "40063:27:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "id": 5844,
                                          "nodeType": "IfStatement",
                                          "src": "40059:1947:13",
                                          "trueBody": {
                                            "id": 5843,
                                            "nodeType": "Block",
                                            "src": "40092:1914:13",
                                            "statements": [
                                              {
                                                "condition": {
                                                  "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  },
                                                  "id": 5756,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "id": 5754,
                                                    "name": "contractAssetBalance",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 5669,
                                                    "src": "40126:20:13",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": ">=",
                                                  "rightExpression": {
                                                    "id": 5755,
                                                    "name": "optimalAmount",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 5729,
                                                    "src": "40150:13:13",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "src": "40126:37:13",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  }
                                                },
                                                "falseBody": {
                                                  "id": 5841,
                                                  "nodeType": "Block",
                                                  "src": "40854:1126:13",
                                                  "statements": [
                                                    {
                                                      "condition": {
                                                        "commonType": {
                                                          "typeIdentifier": "t_bool",
                                                          "typeString": "bool"
                                                        },
                                                        "id": 5799,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                          "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          },
                                                          "id": 5795,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "leftExpression": {
                                                            "id": 5787,
                                                            "name": "optimalReturns",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 5731,
                                                            "src": "41022:14:13",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_uint256",
                                                              "typeString": "uint256"
                                                            }
                                                          },
                                                          "nodeType": "BinaryOperation",
                                                          "operator": ">",
                                                          "rightExpression": {
                                                            "components": [
                                                              {
                                                                "commonType": {
                                                                  "typeIdentifier": "t_uint256",
                                                                  "typeString": "uint256"
                                                                },
                                                                "id": 5793,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "leftExpression": {
                                                                  "components": [
                                                                    {
                                                                      "commonType": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                      },
                                                                      "id": 5790,
                                                                      "isConstant": false,
                                                                      "isLValue": false,
                                                                      "isPure": false,
                                                                      "lValueRequested": false,
                                                                      "leftExpression": {
                                                                        "id": 5788,
                                                                        "name": "optimalAmount",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 5729,
                                                                        "src": "41041:13:13",
                                                                        "typeDescriptions": {
                                                                          "typeIdentifier": "t_uint256",
                                                                          "typeString": "uint256"
                                                                        }
                                                                      },
                                                                      "nodeType": "BinaryOperation",
                                                                      "operator": "*",
                                                                      "rightExpression": {
                                                                        "hexValue": "35",
                                                                        "id": 5789,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": true,
                                                                        "kind": "number",
                                                                        "lValueRequested": false,
                                                                        "nodeType": "Literal",
                                                                        "src": "41057:1:13",
                                                                        "typeDescriptions": {
                                                                          "typeIdentifier": "t_rational_5_by_1",
                                                                          "typeString": "int_const 5"
                                                                        },
                                                                        "value": "5"
                                                                      },
                                                                      "src": "41041:17:13",
                                                                      "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                      }
                                                                    }
                                                                  ],
                                                                  "id": 5791,
                                                                  "isConstant": false,
                                                                  "isInlineArray": false,
                                                                  "isLValue": false,
                                                                  "isPure": false,
                                                                  "lValueRequested": false,
                                                                  "nodeType": "TupleExpression",
                                                                  "src": "41040:19:13",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                  }
                                                                },
                                                                "nodeType": "BinaryOperation",
                                                                "operator": "/",
                                                                "rightExpression": {
                                                                  "hexValue": "3130303030",
                                                                  "id": 5792,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": true,
                                                                  "kind": "number",
                                                                  "lValueRequested": false,
                                                                  "nodeType": "Literal",
                                                                  "src": "41062:5:13",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_rational_10000_by_1",
                                                                    "typeString": "int_const 10000"
                                                                  },
                                                                  "value": "10000"
                                                                },
                                                                "src": "41040:27:13",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_uint256",
                                                                  "typeString": "uint256"
                                                                }
                                                              }
                                                            ],
                                                            "id": 5794,
                                                            "isConstant": false,
                                                            "isInlineArray": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "nodeType": "TupleExpression",
                                                            "src": "41039:29:13",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_uint256",
                                                              "typeString": "uint256"
                                                            }
                                                          },
                                                          "src": "41022:46:13",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                          }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "&&",
                                                        "rightExpression": {
                                                          "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          },
                                                          "id": 5798,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "leftExpression": {
                                                            "id": 5796,
                                                            "name": "bentoBalance",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 5681,
                                                            "src": "41072:12:13",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_uint256",
                                                              "typeString": "uint256"
                                                            }
                                                          },
                                                          "nodeType": "BinaryOperation",
                                                          "operator": ">=",
                                                          "rightExpression": {
                                                            "id": 5797,
                                                            "name": "optimalAmount",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 5729,
                                                            "src": "41088:13:13",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_uint256",
                                                              "typeString": "uint256"
                                                            }
                                                          },
                                                          "src": "41072:29:13",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                          }
                                                        },
                                                        "src": "41022:79:13",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_bool",
                                                          "typeString": "bool"
                                                        }
                                                      },
                                                      "falseBody": {
                                                        "condition": {
                                                          "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          },
                                                          "id": 5818,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "leftExpression": {
                                                            "id": 5810,
                                                            "name": "optimalReturns",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 5731,
                                                            "src": "41266:14:13",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_uint256",
                                                              "typeString": "uint256"
                                                            }
                                                          },
                                                          "nodeType": "BinaryOperation",
                                                          "operator": ">",
                                                          "rightExpression": {
                                                            "components": [
                                                              {
                                                                "commonType": {
                                                                  "typeIdentifier": "t_uint256",
                                                                  "typeString": "uint256"
                                                                },
                                                                "id": 5816,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "leftExpression": {
                                                                  "components": [
                                                                    {
                                                                      "commonType": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                      },
                                                                      "id": 5813,
                                                                      "isConstant": false,
                                                                      "isLValue": false,
                                                                      "isPure": false,
                                                                      "lValueRequested": false,
                                                                      "leftExpression": {
                                                                        "id": 5811,
                                                                        "name": "optimalAmount",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 5729,
                                                                        "src": "41285:13:13",
                                                                        "typeDescriptions": {
                                                                          "typeIdentifier": "t_uint256",
                                                                          "typeString": "uint256"
                                                                        }
                                                                      },
                                                                      "nodeType": "BinaryOperation",
                                                                      "operator": "*",
                                                                      "rightExpression": {
                                                                        "hexValue": "39",
                                                                        "id": 5812,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": true,
                                                                        "kind": "number",
                                                                        "lValueRequested": false,
                                                                        "nodeType": "Literal",
                                                                        "src": "41301:1:13",
                                                                        "typeDescriptions": {
                                                                          "typeIdentifier": "t_rational_9_by_1",
                                                                          "typeString": "int_const 9"
                                                                        },
                                                                        "value": "9"
                                                                      },
                                                                      "src": "41285:17:13",
                                                                      "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                      }
                                                                    }
                                                                  ],
                                                                  "id": 5814,
                                                                  "isConstant": false,
                                                                  "isInlineArray": false,
                                                                  "isLValue": false,
                                                                  "isPure": false,
                                                                  "lValueRequested": false,
                                                                  "nodeType": "TupleExpression",
                                                                  "src": "41284:19:13",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                  }
                                                                },
                                                                "nodeType": "BinaryOperation",
                                                                "operator": "/",
                                                                "rightExpression": {
                                                                  "hexValue": "3130303030",
                                                                  "id": 5815,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": true,
                                                                  "kind": "number",
                                                                  "lValueRequested": false,
                                                                  "nodeType": "Literal",
                                                                  "src": "41306:5:13",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_rational_10000_by_1",
                                                                    "typeString": "int_const 10000"
                                                                  },
                                                                  "value": "10000"
                                                                },
                                                                "src": "41284:27:13",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_uint256",
                                                                  "typeString": "uint256"
                                                                }
                                                              }
                                                            ],
                                                            "id": 5817,
                                                            "isConstant": false,
                                                            "isInlineArray": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "nodeType": "TupleExpression",
                                                            "src": "41283:29:13",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_uint256",
                                                              "typeString": "uint256"
                                                            }
                                                          },
                                                          "src": "41266:46:13",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                          }
                                                        },
                                                        "id": 5839,
                                                        "nodeType": "IfStatement",
                                                        "src": "41262:688:13",
                                                        "trueBody": {
                                                          "id": 5838,
                                                          "nodeType": "Block",
                                                          "src": "41314:636:13",
                                                          "statements": [
                                                            {
                                                              "condition": {
                                                                "commonType": {
                                                                  "typeIdentifier": "t_uint256",
                                                                  "typeString": "uint256"
                                                                },
                                                                "id": 5826,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "leftExpression": {
                                                                  "arguments": [
                                                                    {
                                                                      "id": 5823,
                                                                      "name": "output",
                                                                      "nodeType": "Identifier",
                                                                      "overloadedDeclarations": [],
                                                                      "referencedDeclaration": 5651,
                                                                      "src": "41698:6:13",
                                                                      "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                      }
                                                                    }
                                                                  ],
                                                                  "expression": {
                                                                    "argumentTypes": [
                                                                      {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                      }
                                                                    ],
                                                                    "expression": {
                                                                      "arguments": [
                                                                        {
                                                                          "id": 5820,
                                                                          "name": "AAVE_DATA_PROVIDER",
                                                                          "nodeType": "Identifier",
                                                                          "overloadedDeclarations": [],
                                                                          "referencedDeclaration": 3246,
                                                                          "src": "41663:18:13",
                                                                          "typeDescriptions": {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                          }
                                                                        }
                                                                      ],
                                                                      "expression": {
                                                                        "argumentTypes": [
                                                                          {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                          }
                                                                        ],
                                                                        "id": 5819,
                                                                        "name": "IProtocolDataProvider",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 1045,
                                                                        "src": "41641:21:13",
                                                                        "typeDescriptions": {
                                                                          "typeIdentifier": "t_type$_t_contract$_IProtocolDataProvider_$1045_$",
                                                                          "typeString": "type(contract IProtocolDataProvider)"
                                                                        }
                                                                      },
                                                                      "id": 5821,
                                                                      "isConstant": false,
                                                                      "isLValue": false,
                                                                      "isPure": true,
                                                                      "kind": "typeConversion",
                                                                      "lValueRequested": false,
                                                                      "names": [],
                                                                      "nodeType": "FunctionCall",
                                                                      "src": "41641:41:13",
                                                                      "tryCall": false,
                                                                      "typeDescriptions": {
                                                                        "typeIdentifier": "t_contract$_IProtocolDataProvider_$1045",
                                                                        "typeString": "contract IProtocolDataProvider"
                                                                      }
                                                                    },
                                                                    "id": 5822,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberName": "getReserveData",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": 1044,
                                                                    "src": "41641:56:13",
                                                                    "typeDescriptions": {
                                                                      "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                                                      "typeString": "function (address) view external returns (uint256)"
                                                                    }
                                                                  },
                                                                  "id": 5824,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": false,
                                                                  "kind": "functionCall",
                                                                  "lValueRequested": false,
                                                                  "names": [],
                                                                  "nodeType": "FunctionCall",
                                                                  "src": "41641:64:13",
                                                                  "tryCall": false,
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                  }
                                                                },
                                                                "nodeType": "BinaryOperation",
                                                                "operator": ">",
                                                                "rightExpression": {
                                                                  "id": 5825,
                                                                  "name": "optimalAmount",
                                                                  "nodeType": "Identifier",
                                                                  "overloadedDeclarations": [],
                                                                  "referencedDeclaration": 5729,
                                                                  "src": "41708:13:13",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                  }
                                                                },
                                                                "src": "41641:80:13",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_bool",
                                                                  "typeString": "bool"
                                                                }
                                                              },
                                                              "id": 5837,
                                                              "nodeType": "IfStatement",
                                                              "src": "41596:320:13",
                                                              "trueBody": {
                                                                "id": 5836,
                                                                "nodeType": "Block",
                                                                "src": "41760:156:13",
                                                                "statements": [
                                                                  {
                                                                    "expression": {
                                                                      "arguments": [
                                                                        {
                                                                          "id": 5828,
                                                                          "name": "factory",
                                                                          "nodeType": "Identifier",
                                                                          "overloadedDeclarations": [],
                                                                          "referencedDeclaration": 5620,
                                                                          "src": "41813:7:13",
                                                                          "typeDescriptions": {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                          }
                                                                        },
                                                                        {
                                                                          "id": 5829,
                                                                          "name": "factory1",
                                                                          "nodeType": "Identifier",
                                                                          "overloadedDeclarations": [],
                                                                          "referencedDeclaration": 5699,
                                                                          "src": "41822:8:13",
                                                                          "typeDescriptions": {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                          }
                                                                        },
                                                                        {
                                                                          "id": 5830,
                                                                          "name": "input",
                                                                          "nodeType": "Identifier",
                                                                          "overloadedDeclarations": [],
                                                                          "referencedDeclaration": 5649,
                                                                          "src": "41832:5:13",
                                                                          "typeDescriptions": {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                          }
                                                                        },
                                                                        {
                                                                          "id": 5831,
                                                                          "name": "output",
                                                                          "nodeType": "Identifier",
                                                                          "overloadedDeclarations": [],
                                                                          "referencedDeclaration": 5651,
                                                                          "src": "41839:6:13",
                                                                          "typeDescriptions": {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                          }
                                                                        },
                                                                        {
                                                                          "id": 5832,
                                                                          "name": "optimalAmount",
                                                                          "nodeType": "Identifier",
                                                                          "overloadedDeclarations": [],
                                                                          "referencedDeclaration": 5729,
                                                                          "src": "41847:13:13",
                                                                          "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                          }
                                                                        },
                                                                        {
                                                                          "id": 5833,
                                                                          "name": "optimalReturns",
                                                                          "nodeType": "Identifier",
                                                                          "overloadedDeclarations": [],
                                                                          "referencedDeclaration": 5731,
                                                                          "src": "41862:14:13",
                                                                          "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                          }
                                                                        }
                                                                      ],
                                                                      "expression": {
                                                                        "argumentTypes": [
                                                                          {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                          },
                                                                          {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                          },
                                                                          {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                          },
                                                                          {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                          },
                                                                          {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                          },
                                                                          {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                          }
                                                                        ],
                                                                        "id": 5827,
                                                                        "name": "_flashSwap",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 6112,
                                                                        "src": "41802:10:13",
                                                                        "typeDescriptions": {
                                                                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                                                                          "typeString": "function (address,address,address,address,uint256,uint256)"
                                                                        }
                                                                      },
                                                                      "id": 5834,
                                                                      "isConstant": false,
                                                                      "isLValue": false,
                                                                      "isPure": false,
                                                                      "kind": "functionCall",
                                                                      "lValueRequested": false,
                                                                      "names": [],
                                                                      "nodeType": "FunctionCall",
                                                                      "src": "41802:75:13",
                                                                      "tryCall": false,
                                                                      "typeDescriptions": {
                                                                        "typeIdentifier": "t_tuple$__$",
                                                                        "typeString": "tuple()"
                                                                      }
                                                                    },
                                                                    "id": 5835,
                                                                    "nodeType": "ExpressionStatement",
                                                                    "src": "41802:75:13"
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      },
                                                      "id": 5840,
                                                      "nodeType": "IfStatement",
                                                      "src": "41018:932:13",
                                                      "trueBody": {
                                                        "id": 5809,
                                                        "nodeType": "Block",
                                                        "src": "41103:153:13",
                                                        "statements": [
                                                          {
                                                            "expression": {
                                                              "arguments": [
                                                                {
                                                                  "id": 5801,
                                                                  "name": "factory",
                                                                  "nodeType": "Identifier",
                                                                  "overloadedDeclarations": [],
                                                                  "referencedDeclaration": 5620,
                                                                  "src": "41157:7:13",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                  }
                                                                },
                                                                {
                                                                  "id": 5802,
                                                                  "name": "factory1",
                                                                  "nodeType": "Identifier",
                                                                  "overloadedDeclarations": [],
                                                                  "referencedDeclaration": 5699,
                                                                  "src": "41166:8:13",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                  }
                                                                },
                                                                {
                                                                  "id": 5803,
                                                                  "name": "input",
                                                                  "nodeType": "Identifier",
                                                                  "overloadedDeclarations": [],
                                                                  "referencedDeclaration": 5649,
                                                                  "src": "41176:5:13",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                  }
                                                                },
                                                                {
                                                                  "id": 5804,
                                                                  "name": "output",
                                                                  "nodeType": "Identifier",
                                                                  "overloadedDeclarations": [],
                                                                  "referencedDeclaration": 5651,
                                                                  "src": "41183:6:13",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                  }
                                                                },
                                                                {
                                                                  "id": 5805,
                                                                  "name": "optimalAmount",
                                                                  "nodeType": "Identifier",
                                                                  "overloadedDeclarations": [],
                                                                  "referencedDeclaration": 5729,
                                                                  "src": "41191:13:13",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                  }
                                                                },
                                                                {
                                                                  "id": 5806,
                                                                  "name": "optimalReturns",
                                                                  "nodeType": "Identifier",
                                                                  "overloadedDeclarations": [],
                                                                  "referencedDeclaration": 5731,
                                                                  "src": "41206:14:13",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                  }
                                                                }
                                                              ],
                                                              "expression": {
                                                                "argumentTypes": [
                                                                  {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                  },
                                                                  {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                  },
                                                                  {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                  },
                                                                  {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                  },
                                                                  {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                  },
                                                                  {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                  }
                                                                ],
                                                                "id": 5800,
                                                                "name": "_flashSwapKashi",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 5920,
                                                                "src": "41141:15:13",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                                                                  "typeString": "function (address,address,address,address,uint256,uint256)"
                                                                }
                                                              },
                                                              "id": 5807,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": false,
                                                              "kind": "functionCall",
                                                              "lValueRequested": false,
                                                              "names": [],
                                                              "nodeType": "FunctionCall",
                                                              "src": "41141:80:13",
                                                              "tryCall": false,
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_tuple$__$",
                                                                "typeString": "tuple()"
                                                              }
                                                            },
                                                            "id": 5808,
                                                            "nodeType": "ExpressionStatement",
                                                            "src": "41141:80:13"
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  ]
                                                },
                                                "id": 5842,
                                                "nodeType": "IfStatement",
                                                "src": "40122:1858:13",
                                                "trueBody": {
                                                  "id": 5786,
                                                  "nodeType": "Block",
                                                  "src": "40165:683:13",
                                                  "statements": [
                                                    {
                                                      "id": 5778,
                                                      "nodeType": "Block",
                                                      "src": "40199:541:13",
                                                      "statements": [
                                                        {
                                                          "assignments": [
                                                            5758
                                                          ],
                                                          "declarations": [
                                                            {
                                                              "constant": false,
                                                              "id": 5758,
                                                              "mutability": "mutable",
                                                              "name": "amountOut",
                                                              "nameLocation": "40245:9:13",
                                                              "nodeType": "VariableDeclaration",
                                                              "scope": 5778,
                                                              "src": "40237:17:13",
                                                              "stateVariable": false,
                                                              "storageLocation": "default",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                              },
                                                              "typeName": {
                                                                "id": 5757,
                                                                "name": "uint256",
                                                                "nodeType": "ElementaryTypeName",
                                                                "src": "40237:7:13",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_uint256",
                                                                  "typeString": "uint256"
                                                                }
                                                              },
                                                              "visibility": "internal"
                                                            }
                                                          ],
                                                          "id": 5770,
                                                          "initialValue": {
                                                            "arguments": [
                                                              {
                                                                "id": 5760,
                                                                "name": "factory",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 5620,
                                                                "src": "40303:7:13",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_address",
                                                                  "typeString": "address"
                                                                }
                                                              },
                                                              {
                                                                "id": 5761,
                                                                "name": "factory1",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 5699,
                                                                "src": "40352:8:13",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_address",
                                                                  "typeString": "address"
                                                                }
                                                              },
                                                              {
                                                                "id": 5762,
                                                                "name": "input",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 5649,
                                                                "src": "40402:5:13",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_address",
                                                                  "typeString": "address"
                                                                }
                                                              },
                                                              {
                                                                "id": 5763,
                                                                "name": "output",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 5651,
                                                                "src": "40449:6:13",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_address",
                                                                  "typeString": "address"
                                                                }
                                                              },
                                                              {
                                                                "arguments": [
                                                                  {
                                                                    "id": 5766,
                                                                    "name": "this",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": -28,
                                                                    "src": "40505:4:13",
                                                                    "typeDescriptions": {
                                                                      "typeIdentifier": "t_contract$_OpenMevRouter_$6710",
                                                                      "typeString": "contract OpenMevRouter"
                                                                    }
                                                                  }
                                                                ],
                                                                "expression": {
                                                                  "argumentTypes": [
                                                                    {
                                                                      "typeIdentifier": "t_contract$_OpenMevRouter_$6710",
                                                                      "typeString": "contract OpenMevRouter"
                                                                    }
                                                                  ],
                                                                  "id": 5765,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": true,
                                                                  "lValueRequested": false,
                                                                  "nodeType": "ElementaryTypeNameExpression",
                                                                  "src": "40497:7:13",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_address_$",
                                                                    "typeString": "type(address)"
                                                                  },
                                                                  "typeName": {
                                                                    "id": 5764,
                                                                    "name": "address",
                                                                    "nodeType": "ElementaryTypeName",
                                                                    "src": "40497:7:13",
                                                                    "typeDescriptions": {}
                                                                  }
                                                                },
                                                                "id": 5767,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "typeConversion",
                                                                "lValueRequested": false,
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "40497:13:13",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_address",
                                                                  "typeString": "address"
                                                                }
                                                              },
                                                              {
                                                                "id": 5768,
                                                                "name": "optimalAmount",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 5729,
                                                                "src": "40552:13:13",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_uint256",
                                                                  "typeString": "uint256"
                                                                }
                                                              }
                                                            ],
                                                            "expression": {
                                                              "argumentTypes": [
                                                                {
                                                                  "typeIdentifier": "t_address",
                                                                  "typeString": "address"
                                                                },
                                                                {
                                                                  "typeIdentifier": "t_address",
                                                                  "typeString": "address"
                                                                },
                                                                {
                                                                  "typeIdentifier": "t_address",
                                                                  "typeString": "address"
                                                                },
                                                                {
                                                                  "typeIdentifier": "t_address",
                                                                  "typeString": "address"
                                                                },
                                                                {
                                                                  "typeIdentifier": "t_address",
                                                                  "typeString": "address"
                                                                },
                                                                {
                                                                  "typeIdentifier": "t_uint256",
                                                                  "typeString": "uint256"
                                                                }
                                                              ],
                                                              "id": 5759,
                                                              "name": "_arb",
                                                              "nodeType": "Identifier",
                                                              "overloadedDeclarations": [],
                                                              "referencedDeclaration": 6426,
                                                              "src": "40257:4:13",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                                                "typeString": "function (address,address,address,address,address,uint256) returns (uint256)"
                                                              }
                                                            },
                                                            "id": 5769,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "40257:346:13",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_uint256",
                                                              "typeString": "uint256"
                                                            }
                                                          },
                                                          "nodeType": "VariableDeclarationStatement",
                                                          "src": "40237:366:13"
                                                        },
                                                        {
                                                          "condition": {
                                                            "commonType": {
                                                              "typeIdentifier": "t_uint256",
                                                              "typeString": "uint256"
                                                            },
                                                            "id": 5773,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                              "id": 5771,
                                                              "name": "amountOut",
                                                              "nodeType": "Identifier",
                                                              "overloadedDeclarations": [],
                                                              "referencedDeclaration": 5758,
                                                              "src": "40645:9:13",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                              }
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "<",
                                                            "rightExpression": {
                                                              "id": 5772,
                                                              "name": "optimalAmount",
                                                              "nodeType": "Identifier",
                                                              "overloadedDeclarations": [],
                                                              "referencedDeclaration": 5729,
                                                              "src": "40657:13:13",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                              }
                                                            },
                                                            "src": "40645:25:13",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_bool",
                                                              "typeString": "bool"
                                                            }
                                                          },
                                                          "id": 5777,
                                                          "nodeType": "IfStatement",
                                                          "src": "40641:64:13",
                                                          "trueBody": {
                                                            "errorCall": {
                                                              "arguments": [],
                                                              "expression": {
                                                                "argumentTypes": [],
                                                                "id": 5774,
                                                                "name": "InsufficientOutputAmount",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 3209,
                                                                "src": "40679:24:13",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                                                  "typeString": "function () pure"
                                                                }
                                                              },
                                                              "id": 5775,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": false,
                                                              "kind": "functionCall",
                                                              "lValueRequested": false,
                                                              "names": [],
                                                              "nodeType": "FunctionCall",
                                                              "src": "40679:26:13",
                                                              "tryCall": false,
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_tuple$__$",
                                                                "typeString": "tuple()"
                                                              }
                                                            },
                                                            "id": 5776,
                                                            "nodeType": "RevertStatement",
                                                            "src": "40672:33:13"
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "eventCall": {
                                                        "arguments": [
                                                          {
                                                            "expression": {
                                                              "id": 5780,
                                                              "name": "msg",
                                                              "nodeType": "Identifier",
                                                              "overloadedDeclarations": [],
                                                              "referencedDeclaration": -15,
                                                              "src": "40782:3:13",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_message",
                                                                "typeString": "msg"
                                                              }
                                                            },
                                                            "id": 5781,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "sender",
                                                            "nodeType": "MemberAccess",
                                                            "src": "40782:10:13",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_address",
                                                              "typeString": "address"
                                                            }
                                                          },
                                                          {
                                                            "id": 5782,
                                                            "name": "output",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 5651,
                                                            "src": "40794:6:13",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_address",
                                                              "typeString": "address"
                                                            }
                                                          },
                                                          {
                                                            "id": 5783,
                                                            "name": "optimalReturns",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 5731,
                                                            "src": "40802:14:13",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_uint256",
                                                              "typeString": "uint256"
                                                            }
                                                          }
                                                        ],
                                                        "expression": {
                                                          "argumentTypes": [
                                                            {
                                                              "typeIdentifier": "t_address",
                                                              "typeString": "address"
                                                            },
                                                            {
                                                              "typeIdentifier": "t_address",
                                                              "typeString": "address"
                                                            },
                                                            {
                                                              "typeIdentifier": "t_uint256",
                                                              "typeString": "uint256"
                                                            }
                                                          ],
                                                          "id": 5779,
                                                          "name": "MEV",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 3217,
                                                          "src": "40778:3:13",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                            "typeString": "function (address,address,uint256)"
                                                          }
                                                        },
                                                        "id": 5784,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "40778:39:13",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_tuple$__$",
                                                          "typeString": "tuple()"
                                                        }
                                                      },
                                                      "id": 5785,
                                                      "nodeType": "EmitStatement",
                                                      "src": "40773:44:13"
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5635,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5633,
                      "src": "38848:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 5636,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5628,
                      "src": "38852:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "38848:10:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5852,
                  "initializationExpression": {
                    "assignments": [
                      5633
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 5633,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "38845:1:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 5852,
                        "src": "38837:9:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 5632,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "38837:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 5634,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "38837:9:13"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 5642,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 5638,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5633,
                        "src": "38860:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "id": 5640,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5633,
                            "src": "38869:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 5639,
                          "name": "_inc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6685,
                          "src": "38864:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) pure returns (uint256)"
                          }
                        },
                        "id": 5641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "38864:7:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "38860:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 5643,
                    "nodeType": "ExpressionStatement",
                    "src": "38860:11:13"
                  },
                  "nodeType": "ForStatement",
                  "src": "38832:3238:13"
                }
              ]
            },
            "documentation": {
              "id": 5618,
              "nodeType": "StructuredDocumentation",
              "src": "38483:210:13",
              "text": "@notice Internal call to back-run swaps i.e. extract natural MEV at source.\n @dev Executes after user swaps.\n @param factory Factory address of dex\n @param swaps Array of user swap data"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_backrunSwaps",
            "nameLocation": "38707:13:13",
            "parameters": {
              "id": 5625,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5620,
                  "mutability": "mutable",
                  "name": "factory",
                  "nameLocation": "38729:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5854,
                  "src": "38721:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5619,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "38721:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5624,
                  "mutability": "mutable",
                  "name": "swaps",
                  "nameLocation": "38767:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5854,
                  "src": "38738:34:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Swap_$1796_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct OpenMevLibrary.Swap[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5622,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 5621,
                        "name": "OpenMevLibrary.Swap",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1796,
                        "src": "38738:19:13"
                      },
                      "referencedDeclaration": 1796,
                      "src": "38738:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$1796_storage_ptr",
                        "typeString": "struct OpenMevLibrary.Swap"
                      }
                    },
                    "id": 5623,
                    "nodeType": "ArrayTypeName",
                    "src": "38738:21:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Swap_$1796_storage_$dyn_storage_ptr",
                      "typeString": "struct OpenMevLibrary.Swap[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "38720:53:13"
            },
            "returnParameters": {
              "id": 5626,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "38783:0:13"
            },
            "scope": 6710,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 5920,
            "nodeType": "FunctionDefinition",
            "src": "42510:671:13",
            "body": {
              "id": 5919,
              "nodeType": "Block",
              "src": "42706:475:13",
              "statements": [
                {
                  "assignments": [
                    5871
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5871,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "42729:6:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 5919,
                      "src": "42716:19:13",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 5870,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "42716:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5877,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 5873,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5857,
                        "src": "42746:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5874,
                        "name": "factory1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5859,
                        "src": "42755:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5875,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5861,
                        "src": "42765:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5872,
                      "name": "_encode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6637,
                      "src": "42738:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,address,address) pure returns (bytes memory)"
                      }
                    },
                    "id": 5876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "42738:33:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "42716:55:13"
                },
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 5909,
                        "nodeType": "Block",
                        "src": "42962:119:13",
                        "statements": [
                          {
                            "eventCall": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 5895,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "43008:3:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 5896,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "43008:10:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 5897,
                                  "name": "output",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5863,
                                  "src": "43020:6:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 5906,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 5898,
                                    "name": "optimalReturns",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5867,
                                    "src": "43028:14:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 5904,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 5901,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 5899,
                                                "name": "amountIn",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 5865,
                                                "src": "43047:8:13",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "*",
                                              "rightExpression": {
                                                "hexValue": "35",
                                                "id": 5900,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "43058:1:13",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_5_by_1",
                                                  "typeString": "int_const 5"
                                                },
                                                "value": "5"
                                              },
                                              "src": "43047:12:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 5902,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "43046:14:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "hexValue": "3130303030",
                                          "id": 5903,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "43063:5:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_10000_by_1",
                                            "typeString": "int_const 10000"
                                          },
                                          "value": "10000"
                                        },
                                        "src": "43046:22:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 5905,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "43045:24:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "43028:41:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 5894,
                                "name": "MEV",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3217,
                                "src": "43004:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,address,uint256)"
                                }
                              },
                              "id": 5907,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "43004:66:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 5908,
                            "nodeType": "EmitStatement",
                            "src": "42999:71:13"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 5910,
                      "nodeType": "TryCatchClause",
                      "src": "42962:119:13"
                    },
                    {
                      "block": {
                        "id": 5916,
                        "nodeType": "Block",
                        "src": "43088:87:13",
                        "statements": [
                          {
                            "eventCall": {
                              "arguments": [
                                {
                                  "id": 5912,
                                  "name": "output",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5863,
                                  "src": "43147:6:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 5913,
                                  "name": "amountIn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5865,
                                  "src": "43155:8:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 5911,
                                "name": "LoanError",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3223,
                                "src": "43137:9:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,uint256)"
                                }
                              },
                              "id": 5914,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "43137:27:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 5915,
                            "nodeType": "EmitStatement",
                            "src": "43132:32:13"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 5917,
                      "nodeType": "TryCatchClause",
                      "src": "43082:93:13"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 5883,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "42913:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OpenMevRouter_$6710",
                                  "typeString": "contract OpenMevRouter"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_OpenMevRouter_$6710",
                                  "typeString": "contract OpenMevRouter"
                                }
                              ],
                              "id": 5882,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "42905:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 5881,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "42905:7:13",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 5884,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "42905:13:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5880,
                          "name": "IFlashBorrower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 452,
                          "src": "42890:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IFlashBorrower_$452_$",
                            "typeString": "type(contract IFlashBorrower)"
                          }
                        },
                        "id": 5885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "42890:29:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFlashBorrower_$452",
                          "typeString": "contract IFlashBorrower"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 5888,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "42929:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OpenMevRouter_$6710",
                              "typeString": "contract OpenMevRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OpenMevRouter_$6710",
                              "typeString": "contract OpenMevRouter"
                            }
                          ],
                          "id": 5887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "42921:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5886,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "42921:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "42921:13:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5890,
                        "name": "output",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5863,
                        "src": "42936:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5891,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5865,
                        "src": "42944:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 5892,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5871,
                        "src": "42954:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IFlashBorrower_$452",
                          "typeString": "contract IFlashBorrower"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 5878,
                        "name": "bento",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3252,
                        "src": "42874:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBentoBoxV1_$477",
                          "typeString": "contract IBentoBoxV1"
                        }
                      },
                      "id": 5879,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "flashLoan",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 467,
                      "src": "42874:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IFlashBorrower_$452_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (contract IFlashBorrower,address,address,uint256,bytes memory) external"
                      }
                    },
                    "id": 5893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "42874:87:13",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5918,
                  "nodeType": "TryStatement",
                  "src": "42870:305:13"
                }
              ]
            },
            "documentation": {
              "id": 5855,
              "nodeType": "StructuredDocumentation",
              "src": "42082:423:13",
              "text": "@notice Internal call to perform multiple swaps across multiple dexes with a BentoBox flashloan.\n @param factory Factory address for user swap\n @param factory1 Factory alternate address\n @param input Input address of token for user swap\n @param output Output address of token for user swap\n @param amountIn Optimal amount in for arbitrage\n @param optimalReturns Expected return"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_flashSwapKashi",
            "nameLocation": "42519:15:13",
            "parameters": {
              "id": 5868,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5857,
                  "mutability": "mutable",
                  "name": "factory",
                  "nameLocation": "42552:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5920,
                  "src": "42544:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5856,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "42544:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5859,
                  "mutability": "mutable",
                  "name": "factory1",
                  "nameLocation": "42577:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5920,
                  "src": "42569:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5858,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "42569:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5861,
                  "mutability": "mutable",
                  "name": "input",
                  "nameLocation": "42603:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5920,
                  "src": "42595:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5860,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "42595:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5863,
                  "mutability": "mutable",
                  "name": "output",
                  "nameLocation": "42626:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5920,
                  "src": "42618:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5862,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "42618:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5865,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "42650:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5920,
                  "src": "42642:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5864,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "42642:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5867,
                  "mutability": "mutable",
                  "name": "optimalReturns",
                  "nameLocation": "42676:14:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5920,
                  "src": "42668:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5866,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "42668:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "42534:162:13"
            },
            "returnParameters": {
              "id": 5869,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "42706:0:13"
            },
            "scope": 6710,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 5989,
            "nodeType": "FunctionDefinition",
            "src": "43550:609:13",
            "body": {
              "id": 5988,
              "nodeType": "Block",
              "src": "43707:452:13",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 5937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 5934,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "43721:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 5935,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "43721:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 5936,
                      "name": "BENTO",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3243,
                      "src": "43735:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "43721:19:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5941,
                  "nodeType": "IfStatement",
                  "src": "43717:54:13",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 5938,
                        "name": "ExecuteNotAuthorized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3203,
                        "src": "43749:20:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 5939,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "43749:22:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 5940,
                    "nodeType": "RevertStatement",
                    "src": "43742:29:13"
                  }
                },
                {
                  "assignments": [
                    5943
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5943,
                      "mutability": "mutable",
                      "name": "amountOver",
                      "nameLocation": "43789:10:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 5988,
                      "src": "43781:18:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5942,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "43781:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5944,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "43781:18:13"
                },
                {
                  "id": 5966,
                  "nodeType": "Block",
                  "src": "43809:171:13",
                  "statements": [
                    {
                      "assignments": [
                        5946,
                        5948,
                        5950
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 5946,
                          "mutability": "mutable",
                          "name": "factory",
                          "nameLocation": "43832:7:13",
                          "nodeType": "VariableDeclaration",
                          "scope": 5966,
                          "src": "43824:15:13",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 5945,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "43824:7:13",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 5948,
                          "mutability": "mutable",
                          "name": "factory1",
                          "nameLocation": "43849:8:13",
                          "nodeType": "VariableDeclaration",
                          "scope": 5966,
                          "src": "43841:16:13",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 5947,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "43841:7:13",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 5950,
                          "mutability": "mutable",
                          "name": "input",
                          "nameLocation": "43867:5:13",
                          "nodeType": "VariableDeclaration",
                          "scope": 5966,
                          "src": "43859:13:13",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 5949,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "43859:7:13",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 5954,
                      "initialValue": {
                        "arguments": [
                          {
                            "id": 5952,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5931,
                            "src": "43884:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          ],
                          "id": 5951,
                          "name": "_decode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6651,
                          "src": "43876:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_address_$_t_address_$_t_address_$",
                            "typeString": "function (bytes memory) pure returns (address,address,address)"
                          }
                        },
                        "id": 5953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "43876:13:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_address_$",
                          "typeString": "tuple(address,address,address)"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "43823:66:13"
                    },
                    {
                      "expression": {
                        "id": 5964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 5955,
                          "name": "amountOver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5943,
                          "src": "43903:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 5957,
                              "name": "factory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5946,
                              "src": "43921:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 5958,
                              "name": "factory1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5948,
                              "src": "43930:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 5959,
                              "name": "input",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5950,
                              "src": "43940:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 5960,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5925,
                              "src": "43947:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 5961,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5923,
                              "src": "43954:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 5962,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5927,
                              "src": "43962:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 5956,
                            "name": "_arb",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6426,
                            "src": "43916:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,address,address,address,address,uint256) returns (uint256)"
                            }
                          },
                          "id": 5963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "43916:53:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "43903:66:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 5965,
                      "nodeType": "ExpressionStatement",
                      "src": "43903:66:13"
                    }
                  ]
                },
                {
                  "assignments": [
                    5968
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5968,
                      "mutability": "mutable",
                      "name": "amountOwing",
                      "nameLocation": "43997:11:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 5988,
                      "src": "43989:19:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5967,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "43989:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5972,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5969,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5927,
                      "src": "44011:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 5970,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5929,
                      "src": "44020:3:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "44011:12:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "43989:34:13"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5973,
                      "name": "amountOver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5943,
                      "src": "44037:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 5974,
                      "name": "amountOwing",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5968,
                      "src": "44051:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "44037:25:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5979,
                  "nodeType": "IfStatement",
                  "src": "44033:64:13",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 5976,
                        "name": "InsufficientOutputAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3209,
                        "src": "44071:24:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 5977,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "44071:26:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 5978,
                    "nodeType": "RevertStatement",
                    "src": "44064:33:13"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5984,
                        "name": "BENTO",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3243,
                        "src": "44133:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5985,
                        "name": "amountOwing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5968,
                        "src": "44140:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 5981,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5925,
                            "src": "44113:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5980,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 435,
                          "src": "44107:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$435_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 5982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "44107:12:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$435",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 5983,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7597,
                      "src": "44107:25:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$435_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$435_$",
                        "typeString": "function (contract ERC20,address,uint256)"
                      }
                    },
                    "id": 5986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "44107:45:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5987,
                  "nodeType": "ExpressionStatement",
                  "src": "44107:45:13"
                }
              ]
            },
            "baseFunctions": [
              451
            ],
            "documentation": {
              "id": 5921,
              "nodeType": "StructuredDocumentation",
              "src": "43187:358:13",
              "text": "@notice Called from BentoBox Lending pool after contract has received the flash loaned amount\n @dev Reverts if not profitable.\n @param sender Address of flashloan initiator\n @param token Token to loan\n @param amount Amount to loan\n @param fee Fee to repay on loan amount\n @param data Encoded factories and tokens"
            },
            "functionSelector": "23e30c8b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onFlashLoan",
            "nameLocation": "43559:11:13",
            "parameters": {
              "id": 5932,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5923,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "43588:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5989,
                  "src": "43580:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5922,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "43580:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5925,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "43612:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5989,
                  "src": "43604:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5924,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "43604:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5927,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "43635:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5989,
                  "src": "43627:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5926,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "43627:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5929,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "43659:3:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5989,
                  "src": "43651:11:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5928,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "43651:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5931,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "43687:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 5989,
                  "src": "43672:19:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5930,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "43672:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "43570:127:13"
            },
            "returnParameters": {
              "id": 5933,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "43707:0:13"
            },
            "scope": 6710,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6112,
            "nodeType": "FunctionDefinition",
            "src": "44590:1369:13",
            "body": {
              "id": 6111,
              "nodeType": "Block",
              "src": "44781:1178:13",
              "statements": [
                {
                  "assignments": [
                    6006
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6006,
                      "mutability": "mutable",
                      "name": "receiverAddress",
                      "nameLocation": "44854:15:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 6111,
                      "src": "44846:23:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 6005,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "44846:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6011,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 6009,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "44880:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OpenMevRouter_$6710",
                          "typeString": "contract OpenMevRouter"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_OpenMevRouter_$6710",
                          "typeString": "contract OpenMevRouter"
                        }
                      ],
                      "id": 6008,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "44872:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 6007,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "44872:7:13",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 6010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "44872:13:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "44846:39:13"
                },
                {
                  "assignments": [
                    6016
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6016,
                      "mutability": "mutable",
                      "name": "assets",
                      "nameLocation": "44962:6:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 6111,
                      "src": "44945:23:13",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 6014,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "44945:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 6015,
                        "nodeType": "ArrayTypeName",
                        "src": "44945:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6022,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 6020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "44985:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 6019,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "44971:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 6017,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "44975:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 6018,
                        "nodeType": "ArrayTypeName",
                        "src": "44975:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 6021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "44971:16:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "44945:42:13"
                },
                {
                  "expression": {
                    "id": 6027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 6023,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6016,
                        "src": "44997:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 6025,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 6024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "45004:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "44997:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6026,
                      "name": "output",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5998,
                      "src": "45009:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "44997:18:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6028,
                  "nodeType": "ExpressionStatement",
                  "src": "44997:18:13"
                },
                {
                  "assignments": [
                    6033
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6033,
                      "mutability": "mutable",
                      "name": "amounts",
                      "nameLocation": "45085:7:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 6111,
                      "src": "45068:24:13",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 6031,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "45068:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6032,
                        "nodeType": "ArrayTypeName",
                        "src": "45068:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6039,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 6037,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "45109:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 6036,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "45095:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 6034,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "45099:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6035,
                        "nodeType": "ArrayTypeName",
                        "src": "45099:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 6038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "45095:16:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "45068:43:13"
                },
                {
                  "expression": {
                    "id": 6044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 6040,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6033,
                        "src": "45121:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 6042,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 6041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "45129:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "45121:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6043,
                      "name": "amountIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6000,
                      "src": "45134:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "45121:21:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6045,
                  "nodeType": "ExpressionStatement",
                  "src": "45121:21:13"
                },
                {
                  "assignments": [
                    6050
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6050,
                      "mutability": "mutable",
                      "name": "modes",
                      "nameLocation": "45232:5:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 6111,
                      "src": "45215:22:13",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 6048,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "45215:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6049,
                        "nodeType": "ArrayTypeName",
                        "src": "45215:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6056,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 6054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "45254:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 6053,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "45240:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 6051,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "45244:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6052,
                        "nodeType": "ArrayTypeName",
                        "src": "45244:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 6055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "45240:16:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "45215:41:13"
                },
                {
                  "expression": {
                    "id": 6061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 6057,
                        "name": "modes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6050,
                        "src": "45266:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 6059,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 6058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "45272:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "45266:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 6060,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "45277:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "45266:12:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6062,
                  "nodeType": "ExpressionStatement",
                  "src": "45266:12:13"
                },
                {
                  "assignments": [
                    6064
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6064,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "45337:6:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 6111,
                      "src": "45324:19:13",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 6063,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "45324:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6070,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 6066,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5992,
                        "src": "45354:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6067,
                        "name": "factory1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5994,
                        "src": "45363:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6068,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5996,
                        "src": "45373:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6065,
                      "name": "_encode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6637,
                      "src": "45346:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,address,address) pure returns (bytes memory)"
                      }
                    },
                    "id": 6069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "45346:33:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "45324:55:13"
                },
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 6101,
                        "nodeType": "Block",
                        "src": "45750:119:13",
                        "statements": [
                          {
                            "eventCall": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 6087,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "45796:3:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 6088,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "45796:10:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 6089,
                                  "name": "output",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5998,
                                  "src": "45808:6:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 6098,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 6090,
                                    "name": "optimalReturns",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6002,
                                    "src": "45816:14:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 6096,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 6093,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 6091,
                                                "name": "amountIn",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 6000,
                                                "src": "45835:8:13",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "*",
                                              "rightExpression": {
                                                "hexValue": "39",
                                                "id": 6092,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "45846:1:13",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_9_by_1",
                                                  "typeString": "int_const 9"
                                                },
                                                "value": "9"
                                              },
                                              "src": "45835:12:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 6094,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "45834:14:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "hexValue": "3130303030",
                                          "id": 6095,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "45851:5:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_10000_by_1",
                                            "typeString": "int_const 10000"
                                          },
                                          "value": "10000"
                                        },
                                        "src": "45834:22:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 6097,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "45833:24:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "45816:41:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 6086,
                                "name": "MEV",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3217,
                                "src": "45792:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,address,uint256)"
                                }
                              },
                              "id": 6099,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "45792:66:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 6100,
                            "nodeType": "EmitStatement",
                            "src": "45787:71:13"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 6102,
                      "nodeType": "TryCatchClause",
                      "src": "45750:119:13"
                    },
                    {
                      "block": {
                        "id": 6108,
                        "nodeType": "Block",
                        "src": "45876:77:13",
                        "statements": [
                          {
                            "eventCall": {
                              "arguments": [
                                {
                                  "id": 6104,
                                  "name": "output",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5998,
                                  "src": "45925:6:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 6105,
                                  "name": "amountIn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6000,
                                  "src": "45933:8:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 6103,
                                "name": "LoanError",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3223,
                                "src": "45915:9:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,uint256)"
                                }
                              },
                              "id": 6106,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "45915:27:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 6107,
                            "nodeType": "EmitStatement",
                            "src": "45910:32:13"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 6109,
                      "nodeType": "TryCatchClause",
                      "src": "45870:83:13"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "id": 6075,
                        "name": "receiverAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6006,
                        "src": "45556:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6076,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6016,
                        "src": "45589:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 6077,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6033,
                        "src": "45613:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 6078,
                        "name": "modes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6050,
                        "src": "45638:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 6079,
                        "name": "receiverAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6006,
                        "src": "45661:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6080,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6064,
                        "src": "45694:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 6083,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "45725:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 6082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "45718:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint16_$",
                            "typeString": "type(uint16)"
                          },
                          "typeName": {
                            "id": 6081,
                            "name": "uint16",
                            "nodeType": "ElementaryTypeName",
                            "src": "45718:6:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "45718:9:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 6072,
                            "name": "LENDING_POOL_ADDRESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3240,
                            "src": "45507:20:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 6071,
                          "name": "ILendingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 507,
                          "src": "45494:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ILendingPool_$507_$",
                            "typeString": "type(contract ILendingPool)"
                          }
                        },
                        "id": 6073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "45494:34:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILendingPool_$507",
                          "typeString": "contract ILendingPool"
                        }
                      },
                      "id": 6074,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "flashLoan",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 500,
                      "src": "45494:44:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$_t_uint16_$returns$__$",
                        "typeString": "function (address,address[] memory,uint256[] memory,uint256[] memory,address,bytes memory,uint16) external"
                      }
                    },
                    "id": 6085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "45494:247:13",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6110,
                  "nodeType": "TryStatement",
                  "src": "45478:475:13"
                }
              ]
            },
            "documentation": {
              "id": 5990,
              "nodeType": "StructuredDocumentation",
              "src": "44165:420:13",
              "text": "@notice Internal call to perform multiple swaps across multiple dexes with an Aave flashloan.\n @param factory Factory address for user swap\n @param factory1 Factory alternate address\n @param input Input address of token for user swap\n @param output Output address of token for user swap\n @param amountIn Optimal amount in for arbitrage\n @param optimalReturns Expected return"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_flashSwap",
            "nameLocation": "44599:10:13",
            "parameters": {
              "id": 6003,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5992,
                  "mutability": "mutable",
                  "name": "factory",
                  "nameLocation": "44627:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 6112,
                  "src": "44619:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5991,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "44619:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5994,
                  "mutability": "mutable",
                  "name": "factory1",
                  "nameLocation": "44652:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 6112,
                  "src": "44644:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5993,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "44644:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5996,
                  "mutability": "mutable",
                  "name": "input",
                  "nameLocation": "44678:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 6112,
                  "src": "44670:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5995,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "44670:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5998,
                  "mutability": "mutable",
                  "name": "output",
                  "nameLocation": "44701:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 6112,
                  "src": "44693:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5997,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "44693:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6000,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "44725:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 6112,
                  "src": "44717:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5999,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "44717:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6002,
                  "mutability": "mutable",
                  "name": "optimalReturns",
                  "nameLocation": "44751:14:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 6112,
                  "src": "44743:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6001,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "44743:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "44609:162:13"
            },
            "returnParameters": {
              "id": 6004,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "44781:0:13"
            },
            "scope": 6710,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 6204,
            "nodeType": "FunctionDefinition",
            "src": "46474:821:13",
            "body": {
              "id": 6203,
              "nodeType": "Block",
              "src": "46696:599:13",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 6134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 6131,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "46710:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 6132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "46710:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 6133,
                      "name": "LENDING_POOL_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3240,
                      "src": "46724:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "46710:34:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6138,
                  "nodeType": "IfStatement",
                  "src": "46706:69:13",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 6135,
                        "name": "ExecuteNotAuthorized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3203,
                        "src": "46753:20:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 6136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "46753:22:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 6137,
                    "nodeType": "RevertStatement",
                    "src": "46746:29:13"
                  }
                },
                {
                  "assignments": [
                    6140
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6140,
                      "mutability": "mutable",
                      "name": "asset",
                      "nameLocation": "46793:5:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 6203,
                      "src": "46785:13:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 6139,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "46785:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6144,
                  "initialValue": {
                    "baseExpression": {
                      "id": 6141,
                      "name": "assets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6116,
                      "src": "46801:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                        "typeString": "address[] calldata"
                      }
                    },
                    "id": 6143,
                    "indexExpression": {
                      "hexValue": "30",
                      "id": 6142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "46808:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "46801:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "46785:25:13"
                },
                {
                  "assignments": [
                    6146
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6146,
                      "mutability": "mutable",
                      "name": "amountOver",
                      "nameLocation": "46828:10:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 6203,
                      "src": "46820:18:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6145,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "46820:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6147,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "46820:18:13"
                },
                {
                  "id": 6175,
                  "nodeType": "Block",
                  "src": "46848:221:13",
                  "statements": [
                    {
                      "assignments": [
                        6149
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 6149,
                          "mutability": "mutable",
                          "name": "amountIn",
                          "nameLocation": "46870:8:13",
                          "nodeType": "VariableDeclaration",
                          "scope": 6175,
                          "src": "46862:16:13",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 6148,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "46862:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 6153,
                      "initialValue": {
                        "baseExpression": {
                          "id": 6150,
                          "name": "amounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6119,
                          "src": "46881:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                            "typeString": "uint256[] calldata"
                          }
                        },
                        "id": 6152,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 6151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "46889:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "46881:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "46862:29:13"
                    },
                    {
                      "assignments": [
                        6155,
                        6157,
                        6159
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 6155,
                          "mutability": "mutable",
                          "name": "factory",
                          "nameLocation": "46914:7:13",
                          "nodeType": "VariableDeclaration",
                          "scope": 6175,
                          "src": "46906:15:13",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 6154,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "46906:7:13",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 6157,
                          "mutability": "mutable",
                          "name": "factory1",
                          "nameLocation": "46931:8:13",
                          "nodeType": "VariableDeclaration",
                          "scope": 6175,
                          "src": "46923:16:13",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 6156,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "46923:7:13",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 6159,
                          "mutability": "mutable",
                          "name": "input",
                          "nameLocation": "46949:5:13",
                          "nodeType": "VariableDeclaration",
                          "scope": 6175,
                          "src": "46941:13:13",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 6158,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "46941:7:13",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 6163,
                      "initialValue": {
                        "arguments": [
                          {
                            "id": 6161,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6126,
                            "src": "46966:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          ],
                          "id": 6160,
                          "name": "_decode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6651,
                          "src": "46958:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_address_$_t_address_$_t_address_$",
                            "typeString": "function (bytes memory) pure returns (address,address,address)"
                          }
                        },
                        "id": 6162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "46958:15:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_address_$",
                          "typeString": "tuple(address,address,address)"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "46905:68:13"
                    },
                    {
                      "expression": {
                        "id": 6173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 6164,
                          "name": "amountOver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6146,
                          "src": "46987:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 6166,
                              "name": "factory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6155,
                              "src": "47005:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 6167,
                              "name": "factory1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6157,
                              "src": "47014:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 6168,
                              "name": "input",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6159,
                              "src": "47024:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 6169,
                              "name": "asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6140,
                              "src": "47031:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 6170,
                              "name": "initiator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6124,
                              "src": "47038:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 6171,
                              "name": "amountIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6149,
                              "src": "47049:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 6165,
                            "name": "_arb",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6426,
                            "src": "47000:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,address,address,address,address,uint256) returns (uint256)"
                            }
                          },
                          "id": 6172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "47000:58:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "46987:71:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 6174,
                      "nodeType": "ExpressionStatement",
                      "src": "46987:71:13"
                    }
                  ]
                },
                {
                  "assignments": [
                    6177
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6177,
                      "mutability": "mutable",
                      "name": "amountOwing",
                      "nameLocation": "47086:11:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 6203,
                      "src": "47078:19:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6176,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "47078:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6185,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 6178,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6119,
                        "src": "47100:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      "id": 6180,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 6179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "47108:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "47100:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 6181,
                        "name": "premiums",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6122,
                        "src": "47113:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      "id": 6183,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 6182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "47122:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "47113:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "47100:24:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "47078:46:13"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6186,
                      "name": "amountOver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6146,
                      "src": "47138:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 6187,
                      "name": "amountOwing",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6177,
                      "src": "47152:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "47138:25:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6192,
                  "nodeType": "IfStatement",
                  "src": "47134:64:13",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 6189,
                        "name": "InsufficientOutputAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3209,
                        "src": "47172:24:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 6190,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "47172:26:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 6191,
                    "nodeType": "RevertStatement",
                    "src": "47165:33:13"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6197,
                        "name": "LENDING_POOL_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3240,
                        "src": "47233:20:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6198,
                        "name": "amountOwing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6177,
                        "src": "47255:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 6194,
                            "name": "asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6140,
                            "src": "47214:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 6193,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 435,
                          "src": "47208:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$435_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 6195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "47208:12:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$435",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 6196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7617,
                      "src": "47208:24:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$435_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$435_$",
                        "typeString": "function (contract ERC20,address,uint256)"
                      }
                    },
                    "id": 6199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "47208:59:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6200,
                  "nodeType": "ExpressionStatement",
                  "src": "47208:59:13"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 6201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "47284:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 6130,
                  "id": 6202,
                  "nodeType": "Return",
                  "src": "47277:11:13"
                }
              ]
            },
            "documentation": {
              "id": 6113,
              "nodeType": "StructuredDocumentation",
              "src": "45965:504:13",
              "text": "@notice Called from Aave Lending pool after contract has received the flash loaned amount (https://docs.aave.com/developers/v/2.0/guides/flash-loans)\n @dev Reverts if not profitable.\n @param assets Array of tokens to loan\n @param amounts Array of amounts to loan\n @param premiums Array of premiums to repay on loan amounts\n @param initiator Address of flashloan initiator\n @param params Encoded factories and tokens\n @return success indicating success"
            },
            "functionSelector": "920f5c84",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "executeOperation",
            "nameLocation": "46483:16:13",
            "parameters": {
              "id": 6127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6116,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "46528:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 6204,
                  "src": "46509:25:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6114,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "46509:7:13",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 6115,
                    "nodeType": "ArrayTypeName",
                    "src": "46509:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6119,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "46563:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 6204,
                  "src": "46544:26:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6117,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "46544:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6118,
                    "nodeType": "ArrayTypeName",
                    "src": "46544:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6122,
                  "mutability": "mutable",
                  "name": "premiums",
                  "nameLocation": "46599:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 6204,
                  "src": "46580:27:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6120,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "46580:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6121,
                    "nodeType": "ArrayTypeName",
                    "src": "46580:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6124,
                  "mutability": "mutable",
                  "name": "initiator",
                  "nameLocation": "46625:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 6204,
                  "src": "46617:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6123,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "46617:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6126,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "46659:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 6204,
                  "src": "46644:21:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 6125,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "46644:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "46499:172:13"
            },
            "returnParameters": {
              "id": 6130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6129,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6204,
                  "src": "46690:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6128,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "46690:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "46689:6:13"
            },
            "scope": 6710,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6222,
            "nodeType": "FunctionDefinition",
            "src": "47549:960:13",
            "body": {
              "id": 6221,
              "nodeType": "Block",
              "src": "47680:829:13",
              "statements": [
                {
                  "assignments": [
                    6217
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6217,
                      "mutability": "mutable",
                      "name": "selector",
                      "nameLocation": "47697:8:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 6221,
                      "src": "47690:15:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 6216,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "47690:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6219,
                  "initialValue": {
                    "id": 6218,
                    "name": "SWAP_SELECTOR",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3231,
                    "src": "47708:13:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "47690:31:13"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "47740:763:13",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "47754:22:13",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "47771:4:13",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "47765:5:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "47765:11:13"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "47758:3:13",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "47823:3:13"
                            },
                            {
                              "name": "selector",
                              "nodeType": "YulIdentifier",
                              "src": "47828:8:13"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "47816:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "47816:21:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "47816:21:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "47887:3:13"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "47892:4:13",
                                  "type": "",
                                  "value": "0x04"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "47883:3:13"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "47883:14:13"
                            },
                            {
                              "name": "amount0Out",
                              "nodeType": "YulIdentifier",
                              "src": "47899:10:13"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "47876:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "47876:34:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "47876:34:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "47955:3:13"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "47960:4:13",
                                  "type": "",
                                  "value": "0x24"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "47951:3:13"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "47951:14:13"
                            },
                            {
                              "name": "amount1Out",
                              "nodeType": "YulIdentifier",
                              "src": "47967:10:13"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "47944:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "47944:34:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "47944:34:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "48023:3:13"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "48028:4:13",
                                  "type": "",
                                  "value": "0x44"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "48019:3:13"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "48019:14:13"
                            },
                            {
                              "name": "to",
                              "nodeType": "YulIdentifier",
                              "src": "48035:2:13"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "48012:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "48012:26:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "48012:26:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "48075:3:13"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "48080:4:13",
                                  "type": "",
                                  "value": "0x64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "48071:3:13"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "48071:14:13"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "48087:4:13",
                              "type": "",
                              "value": "0x80"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "48064:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "48064:28:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "48064:28:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "48148:3:13"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "48153:4:13",
                                  "type": "",
                                  "value": "0x84"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "48144:3:13"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "48144:14:13"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "48160:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "48137:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "48137:25:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "48137:25:13"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "48198:295:13",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "gas",
                                "nodeType": "YulIdentifier",
                                "src": "48235:3:13"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "48235:5:13"
                            },
                            {
                              "name": "pair",
                              "nodeType": "YulIdentifier",
                              "src": "48275:4:13"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "48320:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "48350:3:13"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "48387:4:13",
                              "type": "",
                              "value": "0xA4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "48425:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "48461:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "call",
                            "nodeType": "YulIdentifier",
                            "src": "48213:4:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "48213:280:13"
                        },
                        "variables": [
                          {
                            "name": "success",
                            "nodeType": "YulTypedName",
                            "src": "48202:7:13",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 6209,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "47899:10:13",
                      "valueSize": 1
                    },
                    {
                      "declaration": 6211,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "47967:10:13",
                      "valueSize": 1
                    },
                    {
                      "declaration": 6207,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "48275:4:13",
                      "valueSize": 1
                    },
                    {
                      "declaration": 6217,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "47828:8:13",
                      "valueSize": 1
                    },
                    {
                      "declaration": 6213,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "48035:2:13",
                      "valueSize": 1
                    }
                  ],
                  "id": 6220,
                  "nodeType": "InlineAssembly",
                  "src": "47731:772:13"
                }
              ]
            },
            "documentation": {
              "id": 6205,
              "nodeType": "StructuredDocumentation",
              "src": "47301:243:13",
              "text": "@notice Internal call to perform single swap\n @param pair Address of pair to swap in\n @param amount0Out AmountOut for token0 of pair\n @param amount1Out AmountOut for token1 of pair\n @param to Address of receiver"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_asmSwap",
            "nameLocation": "47558:8:13",
            "parameters": {
              "id": 6214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6207,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "47584:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 6222,
                  "src": "47576:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6206,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "47576:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6209,
                  "mutability": "mutable",
                  "name": "amount0Out",
                  "nameLocation": "47606:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 6222,
                  "src": "47598:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6208,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "47598:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6211,
                  "mutability": "mutable",
                  "name": "amount1Out",
                  "nameLocation": "47634:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 6222,
                  "src": "47626:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6210,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "47626:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6213,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "47662:2:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 6222,
                  "src": "47654:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6212,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "47654:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "47566:104:13"
            },
            "returnParameters": {
              "id": 6215,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "47680:0:13"
            },
            "scope": 6710,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 6426,
            "nodeType": "FunctionDefinition",
            "src": "48962:1745:13",
            "body": {
              "id": 6425,
              "nodeType": "Block",
              "src": "49163:1544:13",
              "statements": [
                {
                  "assignments": [
                    6241
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6241,
                      "mutability": "mutable",
                      "name": "pair",
                      "nameLocation": "49229:4:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 6425,
                      "src": "49221:12:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 6240,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "49221:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6242,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "49221:12:13"
                },
                {
                  "assignments": [
                    6244
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6244,
                      "mutability": "mutable",
                      "name": "isReverse",
                      "nameLocation": "49248:9:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 6425,
                      "src": "49243:14:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 6243,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "49243:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6245,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "49243:14:13"
                },
                {
                  "id": 6271,
                  "nodeType": "Block",
                  "src": "49267:214:13",
                  "statements": [
                    {
                      "assignments": [
                        6247,
                        6249
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 6247,
                          "mutability": "mutable",
                          "name": "token0",
                          "nameLocation": "49290:6:13",
                          "nodeType": "VariableDeclaration",
                          "scope": 6271,
                          "src": "49282:14:13",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 6246,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "49282:7:13",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 6249,
                          "mutability": "mutable",
                          "name": "token1",
                          "nameLocation": "49306:6:13",
                          "nodeType": "VariableDeclaration",
                          "scope": 6271,
                          "src": "49298:14:13",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 6248,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "49298:7:13",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 6255,
                      "initialValue": {
                        "arguments": [
                          {
                            "id": 6252,
                            "name": "output",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6231,
                            "src": "49342:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 6253,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6229,
                            "src": "49350:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 6250,
                            "name": "OpenMevLibrary",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3158,
                            "src": "49316:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                              "typeString": "type(library OpenMevLibrary)"
                            }
                          },
                          "id": 6251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sortTokens",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1876,
                          "src": "49316:25:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$returns$_t_address_$_t_address_$",
                            "typeString": "function (address,address) pure returns (address,address)"
                          }
                        },
                        "id": 6254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "49316:40:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                          "typeString": "tuple(address,address)"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "49281:75:13"
                    },
                    {
                      "expression": {
                        "id": 6263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 6256,
                          "name": "pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6241,
                          "src": "49370:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 6259,
                              "name": "factory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6225,
                              "src": "49404:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 6260,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6247,
                              "src": "49413:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 6261,
                              "name": "token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6249,
                              "src": "49421:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 6257,
                              "name": "OpenMevLibrary",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3158,
                              "src": "49377:14:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                                "typeString": "type(library OpenMevLibrary)"
                              }
                            },
                            "id": 6258,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_asmPairFor",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1928,
                            "src": "49377:26:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_address_$",
                              "typeString": "function (address,address,address) pure returns (address)"
                            }
                          },
                          "id": 6262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "49377:51:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "49370:58:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 6264,
                      "nodeType": "ExpressionStatement",
                      "src": "49370:58:13"
                    },
                    {
                      "expression": {
                        "id": 6269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 6265,
                          "name": "isReverse",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6244,
                          "src": "49442:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 6268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 6266,
                            "name": "output",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6231,
                            "src": "49454:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 6267,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6247,
                            "src": "49464:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "49454:16:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "49442:28:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 6270,
                      "nodeType": "ExpressionStatement",
                      "src": "49442:28:13"
                    }
                  ]
                },
                {
                  "id": 6304,
                  "nodeType": "Block",
                  "src": "49491:297:13",
                  "statements": [
                    {
                      "assignments": [
                        6273,
                        6275,
                        null
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 6273,
                          "mutability": "mutable",
                          "name": "reserve0",
                          "nameLocation": "49514:8:13",
                          "nodeType": "VariableDeclaration",
                          "scope": 6304,
                          "src": "49506:16:13",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          },
                          "typeName": {
                            "id": 6272,
                            "name": "uint112",
                            "nodeType": "ElementaryTypeName",
                            "src": "49506:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 6275,
                          "mutability": "mutable",
                          "name": "reserve1",
                          "nameLocation": "49532:8:13",
                          "nodeType": "VariableDeclaration",
                          "scope": 6304,
                          "src": "49524:16:13",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          },
                          "typeName": {
                            "id": 6274,
                            "name": "uint112",
                            "nodeType": "ElementaryTypeName",
                            "src": "49524:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "visibility": "internal"
                        },
                        null
                      ],
                      "id": 6281,
                      "initialValue": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 6277,
                                "name": "pair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6241,
                                "src": "49561:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 6276,
                              "name": "IUniswapV2Pair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1350,
                              "src": "49546:14:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$1350_$",
                                "typeString": "type(contract IUniswapV2Pair)"
                              }
                            },
                            "id": 6278,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "49546:20:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV2Pair_$1350",
                              "typeString": "contract IUniswapV2Pair"
                            }
                          },
                          "id": 6279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getReserves",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1292,
                          "src": "49546:32:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                            "typeString": "function () view external returns (uint112,uint112,uint32)"
                          }
                        },
                        "id": 6280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "49546:34:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                          "typeString": "tuple(uint112,uint112,uint32)"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "49505:75:13"
                    },
                    {
                      "assignments": [
                        6283,
                        6285
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 6283,
                          "mutability": "mutable",
                          "name": "reserveIn",
                          "nameLocation": "49603:9:13",
                          "nodeType": "VariableDeclaration",
                          "scope": 6304,
                          "src": "49595:17:13",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          },
                          "typeName": {
                            "id": 6282,
                            "name": "uint112",
                            "nodeType": "ElementaryTypeName",
                            "src": "49595:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 6285,
                          "mutability": "mutable",
                          "name": "reserveOut",
                          "nameLocation": "49622:10:13",
                          "nodeType": "VariableDeclaration",
                          "scope": 6304,
                          "src": "49614:18:13",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          },
                          "typeName": {
                            "id": 6284,
                            "name": "uint112",
                            "nodeType": "ElementaryTypeName",
                            "src": "49614:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 6294,
                      "initialValue": {
                        "condition": {
                          "id": 6286,
                          "name": "isReverse",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6244,
                          "src": "49636:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "components": [
                            {
                              "id": 6290,
                              "name": "reserve1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6275,
                              "src": "49672:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            {
                              "id": 6291,
                              "name": "reserve0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6273,
                              "src": "49682:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            }
                          ],
                          "id": 6292,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "49671:20:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$",
                            "typeString": "tuple(uint112,uint112)"
                          }
                        },
                        "id": 6293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "49636:55:13",
                        "trueExpression": {
                          "components": [
                            {
                              "id": 6287,
                              "name": "reserve0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6273,
                              "src": "49649:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            {
                              "id": 6288,
                              "name": "reserve1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6275,
                              "src": "49659:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            }
                          ],
                          "id": 6289,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "49648:20:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$",
                            "typeString": "tuple(uint112,uint112)"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$",
                          "typeString": "tuple(uint112,uint112)"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "49594:97:13"
                    },
                    {
                      "expression": {
                        "id": 6302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 6295,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6238,
                          "src": "49705:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 6298,
                              "name": "amountIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6235,
                              "src": "49745:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 6299,
                              "name": "reserveIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6283,
                              "src": "49755:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            {
                              "id": 6300,
                              "name": "reserveOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6285,
                              "src": "49766:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              },
                              {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            ],
                            "expression": {
                              "id": 6296,
                              "name": "OpenMevLibrary",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3158,
                              "src": "49717:14:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                                "typeString": "type(library OpenMevLibrary)"
                              }
                            },
                            "id": 6297,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getAmountOut",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2095,
                            "src": "49717:27:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 6301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "49717:60:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "49705:72:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 6303,
                      "nodeType": "ExpressionStatement",
                      "src": "49705:72:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6309,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6241,
                        "src": "49824:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6310,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6235,
                        "src": "49830:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 6306,
                            "name": "output",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6231,
                            "src": "49803:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 6305,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 435,
                          "src": "49797:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$435_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 6307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "49797:13:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$435",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 6308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7597,
                      "src": "49797:26:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$435_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$435_$",
                        "typeString": "function (contract ERC20,address,uint256)"
                      }
                    },
                    "id": 6311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "49797:42:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6312,
                  "nodeType": "ExpressionStatement",
                  "src": "49797:42:13"
                },
                {
                  "assignments": [
                    6314,
                    6316
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6314,
                      "mutability": "mutable",
                      "name": "amount0Out",
                      "nameLocation": "49858:10:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 6425,
                      "src": "49850:18:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6313,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "49850:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 6316,
                      "mutability": "mutable",
                      "name": "amount1Out",
                      "nameLocation": "49878:10:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 6425,
                      "src": "49870:18:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6315,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "49870:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6331,
                  "initialValue": {
                    "condition": {
                      "id": 6317,
                      "name": "isReverse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6244,
                      "src": "49892:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "id": 6324,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6238,
                          "src": "49931:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 6327,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "49950:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 6326,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "49942:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 6325,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "49942:7:13",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "49942:10:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 6329,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "49930:23:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "id": 6330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "49892:61:13",
                    "trueExpression": {
                      "components": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 6320,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "49913:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 6319,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "49905:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 6318,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "49905:7:13",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "49905:10:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 6322,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6238,
                          "src": "49917:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 6323,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "49904:23:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "49849:104:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6333,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6241,
                        "src": "49972:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6334,
                        "name": "amount0Out",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6314,
                        "src": "49978:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6335,
                        "name": "amount1Out",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6316,
                        "src": "49990:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6336,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6233,
                        "src": "50002:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6332,
                      "name": "_asmSwap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6222,
                      "src": "49963:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,uint256,address)"
                      }
                    },
                    "id": 6337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "49963:42:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6338,
                  "nodeType": "ExpressionStatement",
                  "src": "49963:42:13"
                },
                {
                  "expression": {
                    "id": 6341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6339,
                      "name": "amountIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6235,
                      "src": "50063:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6340,
                      "name": "amountOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6238,
                      "src": "50074:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "50063:20:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6342,
                  "nodeType": "ExpressionStatement",
                  "src": "50063:20:13"
                },
                {
                  "expression": {
                    "id": 6356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6343,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6241,
                      "src": "50093:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 6346,
                          "name": "factory1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6227,
                          "src": "50127:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "condition": {
                            "id": 6347,
                            "name": "isReverse",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6244,
                            "src": "50137:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "id": 6349,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6229,
                            "src": "50158:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 6350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "50137:26:13",
                          "trueExpression": {
                            "id": 6348,
                            "name": "output",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6231,
                            "src": "50149:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "condition": {
                            "id": 6351,
                            "name": "isReverse",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6244,
                            "src": "50165:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "id": 6353,
                            "name": "output",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6231,
                            "src": "50185:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 6354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "50165:26:13",
                          "trueExpression": {
                            "id": 6352,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6229,
                            "src": "50177:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 6344,
                          "name": "OpenMevLibrary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3158,
                          "src": "50100:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                            "typeString": "type(library OpenMevLibrary)"
                          }
                        },
                        "id": 6345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_asmPairFor",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1928,
                        "src": "50100:26:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_address_$",
                          "typeString": "function (address,address,address) pure returns (address)"
                        }
                      },
                      "id": 6355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "50100:92:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "50093:99:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6357,
                  "nodeType": "ExpressionStatement",
                  "src": "50093:99:13"
                },
                {
                  "id": 6390,
                  "nodeType": "Block",
                  "src": "50202:297:13",
                  "statements": [
                    {
                      "assignments": [
                        6359,
                        6361,
                        null
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 6359,
                          "mutability": "mutable",
                          "name": "reserve0",
                          "nameLocation": "50225:8:13",
                          "nodeType": "VariableDeclaration",
                          "scope": 6390,
                          "src": "50217:16:13",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          },
                          "typeName": {
                            "id": 6358,
                            "name": "uint112",
                            "nodeType": "ElementaryTypeName",
                            "src": "50217:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 6361,
                          "mutability": "mutable",
                          "name": "reserve1",
                          "nameLocation": "50243:8:13",
                          "nodeType": "VariableDeclaration",
                          "scope": 6390,
                          "src": "50235:16:13",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          },
                          "typeName": {
                            "id": 6360,
                            "name": "uint112",
                            "nodeType": "ElementaryTypeName",
                            "src": "50235:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "visibility": "internal"
                        },
                        null
                      ],
                      "id": 6367,
                      "initialValue": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 6363,
                                "name": "pair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6241,
                                "src": "50272:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 6362,
                              "name": "IUniswapV2Pair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1350,
                              "src": "50257:14:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$1350_$",
                                "typeString": "type(contract IUniswapV2Pair)"
                              }
                            },
                            "id": 6364,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "50257:20:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV2Pair_$1350",
                              "typeString": "contract IUniswapV2Pair"
                            }
                          },
                          "id": 6365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getReserves",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1292,
                          "src": "50257:32:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                            "typeString": "function () view external returns (uint112,uint112,uint32)"
                          }
                        },
                        "id": 6366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "50257:34:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                          "typeString": "tuple(uint112,uint112,uint32)"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "50216:75:13"
                    },
                    {
                      "assignments": [
                        6369,
                        6371
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 6369,
                          "mutability": "mutable",
                          "name": "reserveIn",
                          "nameLocation": "50314:9:13",
                          "nodeType": "VariableDeclaration",
                          "scope": 6390,
                          "src": "50306:17:13",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          },
                          "typeName": {
                            "id": 6368,
                            "name": "uint112",
                            "nodeType": "ElementaryTypeName",
                            "src": "50306:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 6371,
                          "mutability": "mutable",
                          "name": "reserveOut",
                          "nameLocation": "50333:10:13",
                          "nodeType": "VariableDeclaration",
                          "scope": 6390,
                          "src": "50325:18:13",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          },
                          "typeName": {
                            "id": 6370,
                            "name": "uint112",
                            "nodeType": "ElementaryTypeName",
                            "src": "50325:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 6380,
                      "initialValue": {
                        "condition": {
                          "id": 6372,
                          "name": "isReverse",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6244,
                          "src": "50347:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "components": [
                            {
                              "id": 6376,
                              "name": "reserve0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6359,
                              "src": "50383:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            {
                              "id": 6377,
                              "name": "reserve1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6361,
                              "src": "50393:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            }
                          ],
                          "id": 6378,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "50382:20:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$",
                            "typeString": "tuple(uint112,uint112)"
                          }
                        },
                        "id": 6379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "50347:55:13",
                        "trueExpression": {
                          "components": [
                            {
                              "id": 6373,
                              "name": "reserve1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6361,
                              "src": "50360:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            {
                              "id": 6374,
                              "name": "reserve0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6359,
                              "src": "50370:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            }
                          ],
                          "id": 6375,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "50359:20:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$",
                            "typeString": "tuple(uint112,uint112)"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$",
                          "typeString": "tuple(uint112,uint112)"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "50305:97:13"
                    },
                    {
                      "expression": {
                        "id": 6388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 6381,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6238,
                          "src": "50416:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 6384,
                              "name": "amountIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6235,
                              "src": "50456:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 6385,
                              "name": "reserveIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6369,
                              "src": "50466:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            {
                              "id": 6386,
                              "name": "reserveOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6371,
                              "src": "50477:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              },
                              {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            ],
                            "expression": {
                              "id": 6382,
                              "name": "OpenMevLibrary",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3158,
                              "src": "50428:14:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_OpenMevLibrary_$3158_$",
                                "typeString": "type(library OpenMevLibrary)"
                              }
                            },
                            "id": 6383,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getAmountOut",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2095,
                            "src": "50428:27:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 6387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "50428:60:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "50416:72:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 6389,
                      "nodeType": "ExpressionStatement",
                      "src": "50416:72:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6395,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6241,
                        "src": "50535:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6396,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6235,
                        "src": "50541:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 6392,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6229,
                            "src": "50515:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 6391,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 435,
                          "src": "50509:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$435_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 6393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "50509:12:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$435",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 6394,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7597,
                      "src": "50509:25:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$435_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$435_$",
                        "typeString": "function (contract ERC20,address,uint256)"
                      }
                    },
                    "id": 6397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "50509:41:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6398,
                  "nodeType": "ExpressionStatement",
                  "src": "50509:41:13"
                },
                {
                  "expression": {
                    "id": 6416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 6399,
                          "name": "amount0Out",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6314,
                          "src": "50561:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 6400,
                          "name": "amount1Out",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6316,
                          "src": "50573:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 6401,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "50560:24:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "id": 6402,
                        "name": "isReverse",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6244,
                        "src": "50587:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "components": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 6411,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "50634:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 6410,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "50626:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 6409,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "50626:7:13",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 6412,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "50626:10:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 6413,
                            "name": "amountOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6238,
                            "src": "50638:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 6414,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "50625:23:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                          "typeString": "tuple(uint256,uint256)"
                        }
                      },
                      "id": 6415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "50587:61:13",
                      "trueExpression": {
                        "components": [
                          {
                            "id": 6403,
                            "name": "amountOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6238,
                            "src": "50600:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 6406,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "50619:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 6405,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "50611:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 6404,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "50611:7:13",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 6407,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "50611:10:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 6408,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "50599:23:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                          "typeString": "tuple(uint256,uint256)"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "50560:88:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6417,
                  "nodeType": "ExpressionStatement",
                  "src": "50560:88:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6419,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6241,
                        "src": "50667:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6420,
                        "name": "amount0Out",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6314,
                        "src": "50673:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6421,
                        "name": "amount1Out",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6316,
                        "src": "50685:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6422,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6233,
                        "src": "50697:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6418,
                      "name": "_asmSwap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6222,
                      "src": "50658:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,uint256,address)"
                      }
                    },
                    "id": 6423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "50658:42:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6424,
                  "nodeType": "ExpressionStatement",
                  "src": "50658:42:13"
                }
              ]
            },
            "documentation": {
              "id": 6223,
              "nodeType": "StructuredDocumentation",
              "src": "48515:442:13",
              "text": "@notice Internal call to perform single cross-dex state arbitrage\n @param factory Factory address for user swap\n @param factory1 Factory alternate address\n @param input Input address of token for user swap\n @param output Output address of token for user swap\n @param amountIn Optimal amount in for arbitrage\n @param to Address of receiver\n @return amountOut Amount of output token received"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_arb",
            "nameLocation": "48971:4:13",
            "parameters": {
              "id": 6236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6225,
                  "mutability": "mutable",
                  "name": "factory",
                  "nameLocation": "48993:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 6426,
                  "src": "48985:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6224,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "48985:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6227,
                  "mutability": "mutable",
                  "name": "factory1",
                  "nameLocation": "49018:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 6426,
                  "src": "49010:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6226,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "49010:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6229,
                  "mutability": "mutable",
                  "name": "input",
                  "nameLocation": "49044:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 6426,
                  "src": "49036:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6228,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "49036:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6231,
                  "mutability": "mutable",
                  "name": "output",
                  "nameLocation": "49067:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 6426,
                  "src": "49059:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6230,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "49059:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6233,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "49091:2:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 6426,
                  "src": "49083:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6232,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "49083:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6235,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "49111:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 6426,
                  "src": "49103:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6234,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "49103:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "48975:150:13"
            },
            "returnParameters": {
              "id": 6239,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6238,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nameLocation": "49152:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 6426,
                  "src": "49144:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6237,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "49144:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "49143:19:13"
            },
            "scope": 6710,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 6548,
            "nodeType": "FunctionDefinition",
            "src": "51025:913:13",
            "body": {
              "id": 6547,
              "nodeType": "Block",
              "src": "51176:762:13",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 6446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 6442,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 6440,
                        "name": "percentage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6429,
                        "src": "51190:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "313030",
                        "id": 6441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "51203:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      "src": "51190:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 6444,
                          "name": "percentage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6429,
                          "src": "51218:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 6443,
                        "name": "_isZero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6661,
                        "src": "51210:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) pure returns (bool)"
                        }
                      },
                      "id": 6445,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "51210:19:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "51190:39:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6450,
                  "nodeType": "IfStatement",
                  "src": "51186:64:13",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 6447,
                        "name": "NotPercent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3187,
                        "src": "51238:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 6448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "51238:12:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 6449,
                    "nodeType": "RevertStatement",
                    "src": "51231:19:13"
                  }
                },
                {
                  "assignments": [
                    6452
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6452,
                      "mutability": "mutable",
                      "name": "numReceivers",
                      "nameLocation": "51268:12:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 6547,
                      "src": "51260:20:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6451,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "51260:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6455,
                  "initialValue": {
                    "expression": {
                      "id": 6453,
                      "name": "receivers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6435,
                      "src": "51283:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                        "typeString": "address[] calldata"
                      }
                    },
                    "id": 6454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "51283:16:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "51260:39:13"
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 6457,
                        "name": "numReceivers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6452,
                        "src": "51321:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6456,
                      "name": "_isZero",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6661,
                      "src": "51313:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) pure returns (bool)"
                      }
                    },
                    "id": 6458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "51313:21:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6462,
                  "nodeType": "IfStatement",
                  "src": "51309:47:13",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 6459,
                        "name": "NoReceivers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3189,
                        "src": "51343:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 6460,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "51343:13:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 6461,
                    "nodeType": "RevertStatement",
                    "src": "51336:20:13"
                  }
                },
                {
                  "assignments": [
                    6464
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6464,
                      "mutability": "mutable",
                      "name": "numTokens",
                      "nameLocation": "51374:9:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 6547,
                      "src": "51366:17:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6463,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "51366:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6467,
                  "initialValue": {
                    "expression": {
                      "id": 6465,
                      "name": "tokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6432,
                      "src": "51386:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                        "typeString": "address[] calldata"
                      }
                    },
                    "id": 6466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "51386:13:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "51366:33:13"
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 6469,
                        "name": "numTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6464,
                        "src": "51421:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6468,
                      "name": "_isZero",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6661,
                      "src": "51413:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) pure returns (bool)"
                      }
                    },
                    "id": 6470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "51413:18:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6474,
                  "nodeType": "IfStatement",
                  "src": "51409:41:13",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 6471,
                        "name": "NoTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3185,
                        "src": "51440:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 6472,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "51440:10:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 6473,
                    "nodeType": "RevertStatement",
                    "src": "51433:17:13"
                  }
                },
                {
                  "assignments": [
                    6476
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6476,
                      "mutability": "mutable",
                      "name": "balanceToDistribute",
                      "nameLocation": "51468:19:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 6547,
                      "src": "51460:27:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6475,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "51460:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6477,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "51460:27:13"
                },
                {
                  "body": {
                    "id": 6545,
                    "nodeType": "Block",
                    "src": "51541:391:13",
                    "statements": [
                      {
                        "assignments": [
                          6491
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 6491,
                            "mutability": "mutable",
                            "name": "token",
                            "nameLocation": "51563:5:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 6545,
                            "src": "51555:13:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 6490,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "51555:7:13",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 6495,
                        "initialValue": {
                          "baseExpression": {
                            "id": 6492,
                            "name": "tokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6432,
                            "src": "51571:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                              "typeString": "address[] calldata"
                            }
                          },
                          "id": 6494,
                          "indexExpression": {
                            "id": 6493,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6479,
                            "src": "51578:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "51571:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "51555:25:13"
                      },
                      {
                        "expression": {
                          "id": 6514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 6496,
                            "name": "balanceToDistribute",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6476,
                            "src": "51594:19:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 6513,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 6507,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "id": 6503,
                                            "name": "this",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -28,
                                            "src": "51648:4:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_OpenMevRouter_$6710",
                                              "typeString": "contract OpenMevRouter"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_OpenMevRouter_$6710",
                                              "typeString": "contract OpenMevRouter"
                                            }
                                          ],
                                          "id": 6502,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "51640:7:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 6501,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "51640:7:13",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 6504,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "51640:13:13",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 6498,
                                            "name": "token",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 6491,
                                            "src": "51623:5:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 6497,
                                          "name": "ERC20",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 435,
                                          "src": "51617:5:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_ERC20_$435_$",
                                            "typeString": "type(contract ERC20)"
                                          }
                                        },
                                        "id": 6499,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "51617:12:13",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ERC20_$435",
                                          "typeString": "contract ERC20"
                                        }
                                      },
                                      "id": 6500,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "balanceOf",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 127,
                                      "src": "51617:22:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                        "typeString": "function (address) view external returns (uint256)"
                                      }
                                    },
                                    "id": 6505,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "51617:37:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 6506,
                                    "name": "percentage",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6429,
                                    "src": "51657:10:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "51617:50:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 6508,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "51616:52:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 6511,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "313030",
                                    "id": 6509,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "51672:3:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_100_by_1",
                                      "typeString": "int_const 100"
                                    },
                                    "value": "100"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 6510,
                                    "name": "numReceivers",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6452,
                                    "src": "51678:12:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "51672:18:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 6512,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "51671:20:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "51616:75:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "51594:97:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6515,
                        "nodeType": "ExpressionStatement",
                        "src": "51594:97:13"
                      },
                      {
                        "condition": {
                          "arguments": [
                            {
                              "id": 6517,
                              "name": "balanceToDistribute",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6476,
                              "src": "51720:19:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 6516,
                            "name": "_isNonZero",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6671,
                            "src": "51709:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) pure returns (bool)"
                            }
                          },
                          "id": 6518,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "51709:31:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 6544,
                        "nodeType": "IfStatement",
                        "src": "51705:217:13",
                        "trueBody": {
                          "id": 6543,
                          "nodeType": "Block",
                          "src": "51742:180:13",
                          "statements": [
                            {
                              "body": {
                                "id": 6541,
                                "nodeType": "Block",
                                "src": "51807:101:13",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 6535,
                                            "name": "receivers",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 6435,
                                            "src": "51855:9:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                              "typeString": "address[] calldata"
                                            }
                                          },
                                          "id": 6537,
                                          "indexExpression": {
                                            "id": 6536,
                                            "name": "j",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 6520,
                                            "src": "51865:1:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "51855:12:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 6538,
                                          "name": "balanceToDistribute",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 6476,
                                          "src": "51869:19:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "arguments": [
                                            {
                                              "id": 6532,
                                              "name": "token",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 6491,
                                              "src": "51835:5:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 6531,
                                            "name": "ERC20",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 435,
                                            "src": "51829:5:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_ERC20_$435_$",
                                              "typeString": "type(contract ERC20)"
                                            }
                                          },
                                          "id": 6533,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "51829:12:13",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_ERC20_$435",
                                            "typeString": "contract ERC20"
                                          }
                                        },
                                        "id": 6534,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "safeTransfer",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 7597,
                                        "src": "51829:25:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$435_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$435_$",
                                          "typeString": "function (contract ERC20,address,uint256)"
                                        }
                                      },
                                      "id": 6539,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "51829:60:13",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 6540,
                                    "nodeType": "ExpressionStatement",
                                    "src": "51829:60:13"
                                  }
                                ]
                              },
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 6524,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 6522,
                                  "name": "j",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6520,
                                  "src": "51776:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 6523,
                                  "name": "numReceivers",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6452,
                                  "src": "51780:12:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "51776:16:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 6542,
                              "initializationExpression": {
                                "assignments": [
                                  6520
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 6520,
                                    "mutability": "mutable",
                                    "name": "j",
                                    "nameLocation": "51773:1:13",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 6542,
                                    "src": "51765:9:13",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 6519,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "51765:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 6521,
                                "nodeType": "VariableDeclarationStatement",
                                "src": "51765:9:13"
                              },
                              "loopExpression": {
                                "expression": {
                                  "id": 6529,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 6525,
                                    "name": "j",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6520,
                                    "src": "51794:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "arguments": [
                                      {
                                        "id": 6527,
                                        "name": "j",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 6520,
                                        "src": "51803:1:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 6526,
                                      "name": "_inc",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6685,
                                      "src": "51798:4:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                                        "typeString": "function (uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 6528,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "51798:7:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "51794:11:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 6530,
                                "nodeType": "ExpressionStatement",
                                "src": "51794:11:13"
                              },
                              "nodeType": "ForStatement",
                              "src": "51760:148:13"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6481,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6479,
                      "src": "51513:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 6482,
                      "name": "numTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6464,
                      "src": "51517:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "51513:13:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6546,
                  "initializationExpression": {
                    "assignments": [
                      6479
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 6479,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "51510:1:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 6546,
                        "src": "51502:9:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 6478,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "51502:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 6480,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "51502:9:13"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 6488,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 6484,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6479,
                        "src": "51528:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "id": 6486,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6479,
                            "src": "51537:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 6485,
                          "name": "_inc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6685,
                          "src": "51532:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) pure returns (uint256)"
                          }
                        },
                        "id": 6487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "51532:7:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "51528:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6489,
                    "nodeType": "ExpressionStatement",
                    "src": "51528:11:13"
                  },
                  "nodeType": "ForStatement",
                  "src": "51497:435:13"
                }
              ]
            },
            "baseFunctions": [
              1034
            ],
            "documentation": {
              "id": 6427,
              "nodeType": "StructuredDocumentation",
              "src": "50713:307:13",
              "text": "@notice Multi-sig consensus call to distribute a given percentage of specified tokens to specified receivers.\n @param percentage Percentage of balance to distribute\n @param tokens Array of token addresses to distribute\n @param receivers Array of addresses for receiving distribution"
            },
            "functionSelector": "b4b0ce68",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 6438,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6437,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7681,
                  "src": "51166:9:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "51166:9:13"
              }
            ],
            "name": "harvest",
            "nameLocation": "51034:7:13",
            "parameters": {
              "id": 6436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6429,
                  "mutability": "mutable",
                  "name": "percentage",
                  "nameLocation": "51059:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 6548,
                  "src": "51051:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6428,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "51051:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6432,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "51098:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 6548,
                  "src": "51079:25:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6430,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "51079:7:13",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 6431,
                    "nodeType": "ArrayTypeName",
                    "src": "51079:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6435,
                  "mutability": "mutable",
                  "name": "receivers",
                  "nameLocation": "51133:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 6548,
                  "src": "51114:28:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6433,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "51114:7:13",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 6434,
                    "nodeType": "ArrayTypeName",
                    "src": "51114:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "51041:107:13"
            },
            "returnParameters": {
              "id": 6439,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "51176:0:13"
            },
            "scope": 6710,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6565,
            "nodeType": "FunctionDefinition",
            "src": "52116:130:13",
            "body": {
              "id": 6564,
              "nodeType": "Block",
              "src": "52198:48:13",
              "statements": [
                {
                  "expression": {
                    "id": 6562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 6558,
                        "name": "IS_AAVE_ASSET",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3256,
                        "src": "52208:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 6560,
                      "indexExpression": {
                        "id": 6559,
                        "name": "asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6553,
                        "src": "52222:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "52208:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6561,
                      "name": "isActive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6551,
                      "src": "52231:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "52208:31:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6563,
                  "nodeType": "ExpressionStatement",
                  "src": "52208:31:13"
                }
              ]
            },
            "documentation": {
              "id": 6549,
              "nodeType": "StructuredDocumentation",
              "src": "51944:167:13",
              "text": "@notice Update internal Aave asset flag\n @param isActive Boolean flagging whether to use the asset for Aave flashloans\n @param asset Address of asset"
            },
            "functionSelector": "dc1efb41",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 6556,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6555,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7681,
                  "src": "52188:9:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "52188:9:13"
              }
            ],
            "name": "updateAaveAsset",
            "nameLocation": "52125:15:13",
            "parameters": {
              "id": 6554,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6551,
                  "mutability": "mutable",
                  "name": "isActive",
                  "nameLocation": "52146:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 6565,
                  "src": "52141:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6550,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "52141:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6553,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "52164:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 6565,
                  "src": "52156:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6552,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "52156:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "52140:30:13"
            },
            "returnParameters": {
              "id": 6557,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "52198:0:13"
            },
            "scope": 6710,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6614,
            "nodeType": "FunctionDefinition",
            "src": "52300:346:13",
            "body": {
              "id": 6613,
              "nodeType": "Block",
              "src": "52358:288:13",
              "statements": [
                {
                  "assignments": [
                    6575
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6575,
                      "mutability": "mutable",
                      "name": "aaveAssets",
                      "nameLocation": "52385:10:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 6613,
                      "src": "52368:27:13",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 6573,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "52368:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 6574,
                        "nodeType": "ArrayTypeName",
                        "src": "52368:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6581,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 6577,
                            "name": "LENDING_POOL_ADDRESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3240,
                            "src": "52411:20:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 6576,
                          "name": "ILendingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 507,
                          "src": "52398:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ILendingPool_$507_$",
                            "typeString": "type(contract ILendingPool)"
                          }
                        },
                        "id": 6578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "52398:34:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILendingPool_$507",
                          "typeString": "contract ILendingPool"
                        }
                      },
                      "id": 6579,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getReservesList",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 506,
                      "src": "52398:50:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function () view external returns (address[] memory)"
                      }
                    },
                    "id": 6580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "52398:52:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "52368:82:13"
                },
                {
                  "assignments": [
                    6583
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6583,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "52468:6:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 6613,
                      "src": "52460:14:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6582,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "52460:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6586,
                  "initialValue": {
                    "expression": {
                      "id": 6584,
                      "name": "aaveAssets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6575,
                      "src": "52477:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "id": 6585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "52477:17:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "52460:34:13"
                },
                {
                  "body": {
                    "id": 6611,
                    "nodeType": "Block",
                    "src": "52545:95:13",
                    "statements": [
                      {
                        "assignments": [
                          6600
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 6600,
                            "mutability": "mutable",
                            "name": "asset",
                            "nameLocation": "52567:5:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 6611,
                            "src": "52559:13:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 6599,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "52559:7:13",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 6604,
                        "initialValue": {
                          "baseExpression": {
                            "id": 6601,
                            "name": "aaveAssets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6575,
                            "src": "52575:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 6603,
                          "indexExpression": {
                            "id": 6602,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6588,
                            "src": "52586:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "52575:13:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "52559:29:13"
                      },
                      {
                        "expression": {
                          "id": 6609,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 6605,
                              "name": "IS_AAVE_ASSET",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3256,
                              "src": "52602:13:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 6607,
                            "indexExpression": {
                              "id": 6606,
                              "name": "asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6600,
                              "src": "52616:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "52602:20:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 6608,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "52625:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "52602:27:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 6610,
                        "nodeType": "ExpressionStatement",
                        "src": "52602:27:13"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6590,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6588,
                      "src": "52520:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 6591,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6583,
                      "src": "52524:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "52520:10:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6612,
                  "initializationExpression": {
                    "assignments": [
                      6588
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 6588,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "52517:1:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 6612,
                        "src": "52509:9:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 6587,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "52509:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 6589,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "52509:9:13"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 6597,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 6593,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6588,
                        "src": "52532:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "id": 6595,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6588,
                            "src": "52541:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 6594,
                          "name": "_inc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6685,
                          "src": "52536:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) pure returns (uint256)"
                          }
                        },
                        "id": 6596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "52536:7:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "52532:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6598,
                    "nodeType": "ExpressionStatement",
                    "src": "52532:11:13"
                  },
                  "nodeType": "ForStatement",
                  "src": "52504:136:13"
                }
              ]
            },
            "documentation": {
              "id": 6566,
              "nodeType": "StructuredDocumentation",
              "src": "52252:43:13",
              "text": "@notice Update all internal Aave assets"
            },
            "functionSelector": "31e63459",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 6569,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6568,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7681,
                  "src": "52348:9:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "52348:9:13"
              }
            ],
            "name": "updateAllAaveAssets",
            "nameLocation": "52309:19:13",
            "parameters": {
              "id": 6567,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "52328:2:13"
            },
            "returnParameters": {
              "id": 6570,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "52358:0:13"
            },
            "scope": 6710,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6637,
            "nodeType": "FunctionDefinition",
            "src": "52884:355:13",
            "body": {
              "id": 6636,
              "nodeType": "Block",
              "src": "53001:238:13",
              "statements": [
                {
                  "assignments": [
                    6627
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6627,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "53024:4:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 6636,
                      "src": "53011:17:13",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 6626,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "53011:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6632,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "3630",
                        "id": 6630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "53041:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_60_by_1",
                          "typeString": "int_const 60"
                        },
                        "value": "60"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_60_by_1",
                          "typeString": "int_const 60"
                        }
                      ],
                      "id": 6629,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "53031:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes memory)"
                      },
                      "typeName": {
                        "id": 6628,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "53035:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      }
                    },
                    "id": 6631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "53031:13:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "53011:33:13"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "53063:149:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "53088:4:13"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "53094:2:13",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "53084:3:13"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "53084:13:13"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "53103:2:13",
                                  "type": "",
                                  "value": "96"
                                },
                                {
                                  "name": "a",
                                  "nodeType": "YulIdentifier",
                                  "src": "53107:1:13"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "53099:3:13"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "53099:10:13"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "53077:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "53077:33:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "53077:33:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "53134:4:13"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "53140:2:13",
                                  "type": "",
                                  "value": "52"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "53130:3:13"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "53130:13:13"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "53149:2:13",
                                  "type": "",
                                  "value": "96"
                                },
                                {
                                  "name": "b",
                                  "nodeType": "YulIdentifier",
                                  "src": "53153:1:13"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "53145:3:13"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "53145:10:13"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "53123:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "53123:33:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "53123:33:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "53180:4:13"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "53186:2:13",
                                  "type": "",
                                  "value": "72"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "53176:3:13"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "53176:13:13"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "53195:2:13",
                                  "type": "",
                                  "value": "96"
                                },
                                {
                                  "name": "c",
                                  "nodeType": "YulIdentifier",
                                  "src": "53199:1:13"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "53191:3:13"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "53191:10:13"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "53169:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "53169:33:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "53169:33:13"
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 6617,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "53107:1:13",
                      "valueSize": 1
                    },
                    {
                      "declaration": 6619,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "53153:1:13",
                      "valueSize": 1
                    },
                    {
                      "declaration": 6621,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "53199:1:13",
                      "valueSize": 1
                    },
                    {
                      "declaration": 6627,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "53088:4:13",
                      "valueSize": 1
                    },
                    {
                      "declaration": 6627,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "53134:4:13",
                      "valueSize": 1
                    },
                    {
                      "declaration": 6627,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "53180:4:13",
                      "valueSize": 1
                    }
                  ],
                  "id": 6633,
                  "nodeType": "InlineAssembly",
                  "src": "53054:158:13"
                },
                {
                  "expression": {
                    "id": 6634,
                    "name": "data",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6627,
                    "src": "53228:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 6625,
                  "id": 6635,
                  "nodeType": "Return",
                  "src": "53221:11:13"
                }
              ]
            },
            "documentation": {
              "id": 6615,
              "nodeType": "StructuredDocumentation",
              "src": "52652:227:13",
              "text": "@notice Compresses 3 addresses into byte stream (len = 60)\n @param a Address of first param\n @param b Address of second param\n @param c Address of third param\n @return data Compressed byte stream"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_encode",
            "nameLocation": "52893:7:13",
            "parameters": {
              "id": 6622,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6617,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "52918:1:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 6637,
                  "src": "52910:9:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6616,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "52910:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6619,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "52937:1:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 6637,
                  "src": "52929:9:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6618,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "52929:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6621,
                  "mutability": "mutable",
                  "name": "c",
                  "nameLocation": "52956:1:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 6637,
                  "src": "52948:9:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6620,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "52948:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "52900:63:13"
            },
            "returnParameters": {
              "id": 6625,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6624,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6637,
                  "src": "52987:12:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 6623,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "52987:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "52986:14:13"
            },
            "scope": 6710,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 6651,
            "nodeType": "FunctionDefinition",
            "src": "53482:316:13",
            "body": {
              "id": 6650,
              "nodeType": "Block",
              "src": "53648:150:13",
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "53667:125:13",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "53681:25:13",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "53696:4:13"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "53702:2:13",
                                  "type": "",
                                  "value": "20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "53692:3:13"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "53692:13:13"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "53686:5:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "53686:20:13"
                        },
                        "variableNames": [
                          {
                            "name": "a",
                            "nodeType": "YulIdentifier",
                            "src": "53681:1:13"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "53719:25:13",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "53734:4:13"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "53740:2:13",
                                  "type": "",
                                  "value": "40"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "53730:3:13"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "53730:13:13"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "53724:5:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "53724:20:13"
                        },
                        "variableNames": [
                          {
                            "name": "b",
                            "nodeType": "YulIdentifier",
                            "src": "53719:1:13"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "53757:25:13",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "53772:4:13"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "53778:2:13",
                                  "type": "",
                                  "value": "60"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "53768:3:13"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "53768:13:13"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "53762:5:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "53762:20:13"
                        },
                        "variableNames": [
                          {
                            "name": "c",
                            "nodeType": "YulIdentifier",
                            "src": "53757:1:13"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 6643,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "53681:1:13",
                      "valueSize": 1
                    },
                    {
                      "declaration": 6645,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "53719:1:13",
                      "valueSize": 1
                    },
                    {
                      "declaration": 6647,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "53757:1:13",
                      "valueSize": 1
                    },
                    {
                      "declaration": 6640,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "53696:4:13",
                      "valueSize": 1
                    },
                    {
                      "declaration": 6640,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "53734:4:13",
                      "valueSize": 1
                    },
                    {
                      "declaration": 6640,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "53772:4:13",
                      "valueSize": 1
                    }
                  ],
                  "id": 6649,
                  "nodeType": "InlineAssembly",
                  "src": "53658:134:13"
                }
              ]
            },
            "documentation": {
              "id": 6638,
              "nodeType": "StructuredDocumentation",
              "src": "53245:232:13",
              "text": "@notice De-compresses 3 addresses from byte stream (len = 60)\n @param data Compressed byte stream\n @return a Address of first param\n @return b Address of second param\n @return c Address of third param"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_decode",
            "nameLocation": "53491:7:13",
            "parameters": {
              "id": 6641,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6640,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "53512:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 6651,
                  "src": "53499:17:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 6639,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "53499:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "53498:19:13"
            },
            "returnParameters": {
              "id": 6648,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6643,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "53586:1:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 6651,
                  "src": "53578:9:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6642,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "53578:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6645,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "53609:1:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 6651,
                  "src": "53601:9:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6644,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "53601:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6647,
                  "mutability": "mutable",
                  "name": "c",
                  "nameLocation": "53632:1:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 6651,
                  "src": "53624:9:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6646,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "53624:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "53564:79:13"
            },
            "scope": 6710,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 6661,
            "nodeType": "FunctionDefinition",
            "src": "53886:146:13",
            "body": {
              "id": 6660,
              "nodeType": "Block",
              "src": "53957:75:13",
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "53976:50:13",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "53990:26:13",
                        "value": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "54010:5:13"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "54003:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "54003:13:13"
                        },
                        "variableNames": [
                          {
                            "name": "boolValue",
                            "nodeType": "YulIdentifier",
                            "src": "53990:9:13"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 6657,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "53990:9:13",
                      "valueSize": 1
                    },
                    {
                      "declaration": 6654,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "54010:5:13",
                      "valueSize": 1
                    }
                  ],
                  "id": 6659,
                  "nodeType": "InlineAssembly",
                  "src": "53967:59:13"
                }
              ]
            },
            "documentation": {
              "id": 6652,
              "nodeType": "StructuredDocumentation",
              "src": "53804:77:13",
              "text": "@notice Uint256 zero check gas saver\n @param value Number to check"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isZero",
            "nameLocation": "53895:7:13",
            "parameters": {
              "id": 6655,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6654,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "53911:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 6661,
                  "src": "53903:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6653,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "53903:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "53902:15:13"
            },
            "returnParameters": {
              "id": 6658,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6657,
                  "mutability": "mutable",
                  "name": "boolValue",
                  "nameLocation": "53946:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 6661,
                  "src": "53941:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6656,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "53941:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "53940:16:13"
            },
            "scope": 6710,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 6671,
            "nodeType": "FunctionDefinition",
            "src": "54124:157:13",
            "body": {
              "id": 6670,
              "nodeType": "Block",
              "src": "54198:83:13",
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "54217:58:13",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "54231:34:13",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "54258:5:13"
                                }
                              ],
                              "functionName": {
                                "name": "iszero",
                                "nodeType": "YulIdentifier",
                                "src": "54251:6:13"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "54251:13:13"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "54244:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "54244:21:13"
                        },
                        "variableNames": [
                          {
                            "name": "boolValue",
                            "nodeType": "YulIdentifier",
                            "src": "54231:9:13"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 6667,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "54231:9:13",
                      "valueSize": 1
                    },
                    {
                      "declaration": 6664,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "54258:5:13",
                      "valueSize": 1
                    }
                  ],
                  "id": 6669,
                  "nodeType": "InlineAssembly",
                  "src": "54208:67:13"
                }
              ]
            },
            "documentation": {
              "id": 6662,
              "nodeType": "StructuredDocumentation",
              "src": "54038:81:13",
              "text": "@notice Uint256 not zero check gas saver\n @param value Number to check"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isNonZero",
            "nameLocation": "54133:10:13",
            "parameters": {
              "id": 6665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6664,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "54152:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 6671,
                  "src": "54144:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6663,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "54144:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "54143:15:13"
            },
            "returnParameters": {
              "id": 6668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6667,
                  "mutability": "mutable",
                  "name": "boolValue",
                  "nameLocation": "54187:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 6671,
                  "src": "54182:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6666,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "54182:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "54181:16:13"
            },
            "scope": 6710,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 6685,
            "nodeType": "FunctionDefinition",
            "src": "54380:120:13",
            "body": {
              "id": 6684,
              "nodeType": "Block",
              "src": "54437:63:13",
              "statements": [
                {
                  "id": 6683,
                  "nodeType": "UncheckedBlock",
                  "src": "54447:47:13",
                  "statements": [
                    {
                      "expression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6679,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6674,
                          "src": "54478:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 6680,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "54482:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "54478:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 6678,
                      "id": 6682,
                      "nodeType": "Return",
                      "src": "54471:12:13"
                    }
                  ]
                }
              ]
            },
            "documentation": {
              "id": 6672,
              "nodeType": "StructuredDocumentation",
              "src": "54287:88:13",
              "text": "@notice Unchecked increment gas saver for loops\n @param i Number to increment"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_inc",
            "nameLocation": "54389:4:13",
            "parameters": {
              "id": 6675,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6674,
                  "mutability": "mutable",
                  "name": "i",
                  "nameLocation": "54402:1:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 6685,
                  "src": "54394:9:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6673,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "54394:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "54393:11:13"
            },
            "returnParameters": {
              "id": 6678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6677,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6685,
                  "src": "54428:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6676,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "54428:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "54427:9:13"
            },
            "scope": 6710,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 6699,
            "nodeType": "FunctionDefinition",
            "src": "54599:120:13",
            "body": {
              "id": 6698,
              "nodeType": "Block",
              "src": "54656:63:13",
              "statements": [
                {
                  "id": 6697,
                  "nodeType": "UncheckedBlock",
                  "src": "54666:47:13",
                  "statements": [
                    {
                      "expression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6693,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6688,
                          "src": "54697:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 6694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "54701:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "54697:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 6692,
                      "id": 6696,
                      "nodeType": "Return",
                      "src": "54690:12:13"
                    }
                  ]
                }
              ]
            },
            "documentation": {
              "id": 6686,
              "nodeType": "StructuredDocumentation",
              "src": "54506:88:13",
              "text": "@notice Unchecked decrement gas saver for loops\n @param i Number to decrement"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_dec",
            "nameLocation": "54608:4:13",
            "parameters": {
              "id": 6689,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6688,
                  "mutability": "mutable",
                  "name": "i",
                  "nameLocation": "54621:1:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 6699,
                  "src": "54613:9:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6687,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "54613:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "54612:11:13"
            },
            "returnParameters": {
              "id": 6692,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6691,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6699,
                  "src": "54647:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6690,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "54647:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "54646:9:13"
            },
            "scope": 6710,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 6704,
            "nodeType": "FunctionDefinition",
            "src": "54791:29:13",
            "body": {
              "id": 6703,
              "nodeType": "Block",
              "src": "54818:2:13",
              "statements": []
            },
            "documentation": {
              "id": 6700,
              "nodeType": "StructuredDocumentation",
              "src": "54725:61:13",
              "text": "@notice Function to receive Ether. msg.data must be empty"
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 6701,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "54798:2:13"
            },
            "returnParameters": {
              "id": 6702,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "54818:0:13"
            },
            "scope": 6710,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6709,
            "nodeType": "FunctionDefinition",
            "src": "54897:30:13",
            "body": {
              "id": 6708,
              "nodeType": "Block",
              "src": "54925:2:13",
              "statements": []
            },
            "documentation": {
              "id": 6705,
              "nodeType": "StructuredDocumentation",
              "src": "54826:66:13",
              "text": "@notice Fallback function is called when msg.data is not empty"
            },
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 6706,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "54905:2:13"
            },
            "returnParameters": {
              "id": 6707,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "54925:0:13"
            },
            "scope": 6710,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3172,
              "name": "IFlashBorrower",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 452,
              "src": "588:14:13"
            },
            "id": 3173,
            "nodeType": "InheritanceSpecifier",
            "src": "588:14:13"
          },
          {
            "baseName": {
              "id": 3174,
              "name": "IOpenMevRouter",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1035,
              "src": "604:14:13"
            },
            "id": 3175,
            "nodeType": "InheritanceSpecifier",
            "src": "604:14:13"
          },
          {
            "baseName": {
              "id": 3176,
              "name": "TwoStepOwnable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7754,
              "src": "620:14:13"
            },
            "id": 3177,
            "nodeType": "InheritanceSpecifier",
            "src": "620:14:13"
          }
        ],
        "canonicalName": "OpenMevRouter",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3171,
          "nodeType": "StructuredDocumentation",
          "src": "362:200:13",
          "text": "@title OpenMevRouter\n @author Sandy Bradley <sandy@commoditystream.com>, Sam Bacha <sam@commoditystream.com>, ControlCandP\n @notice Optimal MEV router contract (IUniswapV2Router compatible)"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          6710,
          7754,
          1035,
          452
        ],
        "name": "OpenMevRouter",
        "nameLocation": "571:13:13",
        "scope": 6711,
        "usedErrors": [
          1771,
          1773,
          1775,
          1777,
          1779,
          1781,
          3183,
          3185,
          3187,
          3189,
          3191,
          3193,
          3195,
          3197,
          3199,
          3201,
          3203,
          3205,
          3207,
          3209,
          7623,
          7625
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 13
}