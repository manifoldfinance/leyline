/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  OpenMevZapper,
  OpenMevZapperInterface,
} from "../../contracts/OpenMevZapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "IdenticalAddresses",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientAAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientBAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientLiquidity",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientLiquidity",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientOutputAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPath",
    type: "error",
  },
  {
    inputs: [],
    name: "Overflow",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "contract IOpenMevRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBMin",
        type: "uint256",
      },
    ],
    name: "swapAndStakeLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountBMin",
        type: "uint256",
      },
    ],
    name: "swapETHAndStakeLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pairAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "withdrawAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "desiredToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "desiredTokenOutMin",
        type: "uint256",
      },
    ],
    name: "withdrawLiquidityAndSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200205f3803806200205f833981016040819052620000349162000080565b6001600160a01b0316608052620000ad565b60006001600160a01b0382165b92915050565b620000648162000046565b81146200007057600080fd5b50565b8051620000538162000059565b600060208284031215620000975762000097600080fd5b6000620000a5848462000073565b949350505050565b608051611f6d620000f26000396000818160ed015281816103eb01528181610440015281816108010152818161085601528181610c930152610e490152611f6d6000f3fe6080604052600436106100435760003560e01c806364551df314610072578063942f0c27146100a8578063ef409f90146100bb578063f887ea40146100db57600080fd5b3661006d573373c02aaa39b223fe8d0a0e5c4f27ead9083c756cc21461006b5761006b6118b9565b005b600080fd5b34801561007e57600080fd5b5061009261008d366004611913565b61011c565b60405161009f919061197f565b60405180910390f35b6100926100b636600461198d565b61058f565b3480156100c757600080fd5b506100926100d63660046119ca565b6109a4565b3480156100e757600080fd5b5061010f7f000000000000000000000000000000000000000000000000000000000000000081565b60405161009f9190611a30565b60006107d083101561015a576040517f8dc525d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815283906001600160a01b0387169063dd62ed3e906101a39033903090600401611a47565b602060405180830381865afa1580156101c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e49190611a74565b101561021c576040517f13be252b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061023d73c0aee478e3658e2610c5f7a4a2e1777ce9e4f2ac8787610f58565b9050600080826001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610280573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a49190611ad5565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff169150600080886001600160a01b03168a6001600160a01b03161015610304576102f08885610f80565b91506102fd828585610fe4565b905061031e565b61030e8884610f80565b915061031b828486610fe4565b90505b86811015610358576040517f42301c2300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040805160028082526060820183526000926020830190803683370190505090508a8160008151811061038d5761038d611b3b565b60200260200101906001600160a01b031690816001600160a01b03168152505089816001815181106103c1576103c1611b3b565b6001600160a01b0392831660209182029290920101526103e5908c1633308c6110da565b6104108b7f000000000000000000000000000000000000000000000000000000000000000085611179565b6040517f38ed17390000000000000000000000000000000000000000000000000000000081526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906338ed17399061047d9086908690869030904290600401611bae565b6000604051808303816000875af115801561049c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104c49190810190611ce3565b506104e4866104d3858c611d34565b6001600160a01b038e169190611228565b6104f86001600160a01b038b168784611228565b6040517f6a6278420000000000000000000000000000000000000000000000000000000081526001600160a01b03871690636a6278429061053d903390600401611d4b565b6020604051808303816000875af115801561055c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105809190611a74565b9b9a5050505050505050505050565b600073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc26107d03410156105e2576040517f8dc525d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061060373c0aee478e3658e2610c5f7a4a2e1777ce9e4f2ac8387610f58565b9050600080826001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610646573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066a9190611ad5565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff169150600080886001600160a01b0316866001600160a01b031610156106ca576106b63485610f80565b91506106c3828585610fe4565b90506106e4565b6106d43484610f80565b91506106e1828486610fe4565b90505b8781101561071e576040517f42301c2300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b604080516002808252606082018352600092602083019080368337019050509050868160008151811061075357610753611b3b565b60200260200101906001600160a01b031690816001600160a01b031681525050898160018151811061078757610787611b3b565b60200260200101906001600160a01b031690816001600160a01b031681525050866001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b1580156107e257600080fd5b505af11580156107f6573d6000803e3d6000fd5b5050505050610826877f000000000000000000000000000000000000000000000000000000000000000085611179565b6040517f38ed17390000000000000000000000000000000000000000000000000000000081526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906338ed1739906108939086908690869030904290600401611bae565b6000604051808303816000875af11580156108b2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108da9190810190611ce3565b506108fa866108e98534611d34565b6001600160a01b038a169190611228565b61090e6001600160a01b038b168784611228565b6040517f6a6278420000000000000000000000000000000000000000000000000000000081526001600160a01b03871690636a62784290610953903390600401611d4b565b6020604051808303816000875af1158015610972573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109969190611a74565b9a9950505050505050505050565b6000808590506000816001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109ea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0e9190611d64565b90506000826001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a749190611d64565b9050856001600160a01b0316826001600160a01b031614158015610aaa5750856001600160a01b0316816001600160a01b031614155b15610ae1576040517f20db826700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815287906001600160a01b038a169063dd62ed3e90610b2a9033903090600401611a47565b602060405180830381865afa158015610b47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6b9190611a74565b1015610ba3576040517f13be252b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610bb86001600160a01b03891633308a6110da565b610bc288306112b1565b6000866001600160a01b0316826001600160a01b031614610be35781610be5565b825b60408051600280825260608201835292935060009290916020830190803683370190505090508181600081518110610c1f57610c1f611b3b565b60200260200101906001600160a01b031690816001600160a01b0316815250508781600181518110610c5357610c53611b3b565b60200260200101906001600160a01b031690816001600160a01b031681525050610d2481600081518110610c8957610c89611b3b565b60200260200101517f0000000000000000000000000000000000000000000000000000000000000000846001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401610cde9190611d4b565b602060405180830381865afa158015610cfb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1f9190611a74565b611179565b6040517f70a082310000000000000000000000000000000000000000000000000000000081526000906001600160a01b038a16906370a0823190610d6c903090600401611d4b565b602060405180830381865afa158015610d89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dad9190611a74565b881115610e47576040517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b038a16906370a0823190610df9903090600401611d4b565b602060405180830381865afa158015610e16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3a9190611a74565b610e449089611d34565b90505b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166338ed1739846001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401610ea29190611d4b565b602060405180830381865afa158015610ebf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ee39190611a74565b838530426040518663ffffffff1660e01b8152600401610f07959493929190611bae565b6000604051808303816000875af1158015610f26573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f4e9190810190611ce3565b50610580826113ba565b6000806000610f67858561160e565b91509150610f768683836116c5565b9695505050505050565b60006107ca610f91836107cd611d85565b610fc7610fa185623cda29611d85565b610fae87623cda20611d85565b610fb89190611dc2565b610fc29086611d85565b611709565b610fd19190611d34565b610fdb9190611df0565b90505b92915050565b60008361101d576040517f1f2a200500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103e883108061102e57506103e882105b15611065576040517fbb55fd2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103e5848102908386020281818161107f5761107f611dda565b0484146110b8576040517f35278d1200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103e8850282018082816110ce576110ce611dda565b04979650505050505050565b60006040517f23b872dd0000000000000000000000000000000000000000000000000000000081528460048201528360248201528260448201526020600060648360008a5af13d15601f3d1160016000511416171691505080611172576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116990611e3b565b60405180910390fd5b5050505050565b6040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081526000906001600160a01b0385169063dd62ed3e906111c39030908790600401611a47565b602060405180830381865afa1580156111e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112049190611a74565b905081811015611222576112226001600160a01b0385168484611769565b50505050565b60006040517fa9059cbb000000000000000000000000000000000000000000000000000000008152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080611222576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116990611e7f565b61133382836001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016112e19190611d4b565b602060405180830381865afa1580156112fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113229190611a74565b6001600160a01b0385169190611228565b6040517f89afcb440000000000000000000000000000000000000000000000000000000081526001600160a01b038316906389afcb4490611378908490600401611d4b565b60408051808303816000875af1158015611396573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112229190611e8f565b8051600090815b81811015611607578381815181106113db576113db611b3b565b60200260200101516001600160a01b03166370a08231306040518263ffffffff1660e01b815260040161140e9190611d4b565b602060405180830381865afa15801561142b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061144f9190611a74565b925082156115ff5773c02aaa39b223fe8d0a0e5c4f27ead9083c756cc26001600160a01b031684828151811061148757611487611b3b565b60200260200101516001600160a01b0316036115c8576040517f2e1a7d4d00000000000000000000000000000000000000000000000000000000815273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc290632e1a7d4d906114ed90869060040161197f565b600060405180830381600087803b15801561150757600080fd5b505af115801561151b573d6000803e3d6000fd5b505060408051600080825260208201928390529350339250869161153f9190611f10565b60006040518083038185875af1925050503d806000811461157c576040519150601f19603f3d011682016040523d82523d6000602084013e611581565b606091505b50909150508015156000036115c2576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506115ff565b6115ff33848684815181106115df576115df611b3b565b60200260200101516001600160a01b03166112289092919063ffffffff16565b6001016113c1565b5050919050565b600080826001600160a01b0316846001600160a01b03160361165c576040517fbd969eb000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008360601b8560601b106000811461167a57859350849250611681565b8493508592505b5050811580156116bd576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b509250929050565b60008060006116d3866117f2565b604051606097881b81529590961b6014860152602885209585526015850195909552505050603581019190915260559020919050565b6000600382111561175a5750806000611726600183811c90611dc2565b90505b81811015611754579050806001816117418186611df0565b61174b9190611dc2565b901c9050611729565b50919050565b8115611764575060015b919050565b60006040517f095ea7b3000000000000000000000000000000000000000000000000000000008152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080611222576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116990611f50565b6000807fffffffffffffffffffffffff3f511b871c9a71d9ef3a085b5d1e8883161b0d546001600160a01b0384160161186f57507fe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c630390507fffc0aee478e3658e2610c5f7a4a2e1777ce9e4f2ac0000000000000000000000915091565b507f96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f90507fff5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f0000000000000000000000915091565b634e487b7160e01b600052600160045260246000fd5b60006001600160a01b038216610fde565b6118e9816118cf565b81146118f457600080fd5b50565b8035610fde816118e0565b806118e9565b8035610fde81611902565b6000806000806080858703121561192c5761192c600080fd5b600061193887876118f7565b9450506020611949878288016118f7565b935050604061195a87828801611908565b925050606061196b87828801611908565b91505092959194509250565b805b82525050565b60208101610fde8284611977565b600080604083850312156119a3576119a3600080fd5b60006119af85856118f7565b92505060206119c085828601611908565b9150509250929050565b600080600080608085870312156119e3576119e3600080fd5b60006119ef87876118f7565b9450506020611a0087828801611908565b935050604061195a878288016118f7565b6000610fde826118cf565b6000610fde82611a11565b61197981611a1c565b60208101610fde8284611a27565b611979816118cf565b60408101611a558285611a3e565b611a626020830184611a3e565b9392505050565b8051610fde81611902565b600060208284031215611a8957611a89600080fd5b6000611a958484611a69565b949350505050565b6dffffffffffffffffffffffffffff81166118e9565b8051610fde81611a9d565b63ffffffff81166118e9565b8051610fde81611abe565b600080600060608486031215611aed57611aed600080fd5b6000611af98686611ab3565b9350506020611b0a86828701611ab3565b9250506040611b1b86828701611aca565b9150509250925092565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000611b5d8383611a3e565b505060200190565b6000611b6f825190565b80845260209384019383018060005b83811015611ba3578151611b928882611b51565b975060208301925050600101611b7e565b509495945050505050565b60a08101611bbc8288611977565b611bc96020830187611977565b8181036040830152611bdb8186611b65565b9050611bea6060830185611a3e565b610f766080830184611977565b601f19601f830116810181811067ffffffffffffffff82111715611c1d57611c1d611b25565b6040525050565b6000611c2f60405190565b90506117648282611bf7565b600067ffffffffffffffff821115611c5557611c55611b25565b5060209081020190565b6000611c72611c6d84611c3b565b611c24565b83815290506020808201908402830185811115611c9157611c91600080fd5b835b81811015611cb55780611ca68882611a69565b84525060209283019201611c93565b5050509392505050565b600082601f830112611cd357611cd3600080fd5b8151611a95848260208601611c5f565b600060208284031215611cf857611cf8600080fd5b815167ffffffffffffffff811115611d1257611d12600080fd5b611a9584828501611cbf565b634e487b7160e01b600052601160045260246000fd5b600082821015611d4657611d46611d1e565b500390565b60208101610fde8284611a3e565b8051610fde816118e0565b600060208284031215611d7957611d79600080fd5b6000611a958484611d59565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611dbd57611dbd611d1e565b500290565b60008219821115611dd557611dd5611d1e565b500190565b634e487b7160e01b600052601260045260246000fd5b600082611dff57611dff611dda565b500490565b601481526000602082017f5452414e534645525f46524f4d5f4641494c4544000000000000000000000000815291505b5060200190565b60208082528101610fde81611e04565b600f81526000602082017f5452414e534645525f4641494c4544000000000000000000000000000000000081529150611e34565b60208082528101610fde81611e4b565b60008060408385031215611ea557611ea5600080fd5b6000611eb18585611a69565b92505060206119c085828601611a69565b60005b83811015611edd578181015183820152602001611ec5565b838111156112225750506000910152565b6000611ef8825190565b611f06818560208601611ec2565b9290920192915050565b6000611a628284611eee565b600e81526000602082017f415050524f56455f4641494c454400000000000000000000000000000000000081529150611e34565b60208082528101610fde81611f1c56fea164736f6c634300080d000a";

type OpenMevZapperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OpenMevZapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OpenMevZapper__factory extends ContractFactory {
  constructor(...args: OpenMevZapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _router: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OpenMevZapper> {
    return super.deploy(_router, overrides || {}) as Promise<OpenMevZapper>;
  }
  override getDeployTransaction(
    _router: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_router, overrides || {});
  }
  override attach(address: string): OpenMevZapper {
    return super.attach(address) as OpenMevZapper;
  }
  override connect(signer: Signer): OpenMevZapper__factory {
    return super.connect(signer) as OpenMevZapper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OpenMevZapperInterface {
    return new utils.Interface(_abi) as OpenMevZapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OpenMevZapper {
    return new Contract(address, _abi, signerOrProvider) as OpenMevZapper;
  }
}
