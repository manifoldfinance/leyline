/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "OpenMevLibrary",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OpenMevLibrary__factory>;
    getContractFactory(
      name: "OpenMevRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OpenMevRouter__factory>;
    getContractFactory(
      name: "OpenMevZapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OpenMevZapper__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IBentoBoxV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBentoBoxV1__factory>;
    getContractFactory(
      name: "IFlashBorrower",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFlashBorrower__factory>;
    getContractFactory(
      name: "ILendingPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILendingPool__factory>;
    getContractFactory(
      name: "IOpenMevRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOpenMevRouter__factory>;
    getContractFactory(
      name: "IProtocolDataProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IProtocolDataProvider__factory>;
    getContractFactory(
      name: "IUniswapV2Factory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Factory__factory>;
    getContractFactory(
      name: "IUniswapV2Pair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Pair__factory>;
    getContractFactory(
      name: "IWETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETH__factory>;
    getContractFactory(
      name: "OpenMevLibrary",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OpenMevLibrary__factory>;
    getContractFactory(
      name: "OpenMevRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OpenMevRouter__factory>;
    getContractFactory(
      name: "TwoStepOwnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TwoStepOwnable__factory>;
    getContractFactory(
      name: "DSTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DSTest__factory>;
    getContractFactory(
      name: "OpenMevRouterTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OpenMevRouterTest__factory>;
    getContractFactory(
      name: "OpenMevRouterFuzzTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OpenMevRouterFuzzTest__factory>;
    getContractFactory(
      name: "OpenMevZapperTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OpenMevZapperTest__factory>;
    getContractFactory(
      name: "RevertingToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RevertingToken__factory>;
    getContractFactory(
      name: "TestUint512",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestUint512__factory>;
    getContractFactory(
      name: "TwoStepOwnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TwoStepOwnable__factory>;
    getContractFactory(
      name: "IBentoBoxV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBentoBoxV1__factory>;
    getContractFactory(
      name: "IFlashBorrower",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFlashBorrower__factory>;
    getContractFactory(
      name: "ILendingPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILendingPool__factory>;
    getContractFactory(
      name: "IOpenMevRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOpenMevRouter__factory>;
    getContractFactory(
      name: "IProtocolDataProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IProtocolDataProvider__factory>;
    getContractFactory(
      name: "IUniswapV2Factory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Factory__factory>;
    getContractFactory(
      name: "IUniswapV2Pair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Pair__factory>;
    getContractFactory(
      name: "IUniswapV2Router01",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Router01__factory>;
    getContractFactory(
      name: "IUniswapV2Router02",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Router02__factory>;
    getContractFactory(
      name: "IWETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETH__factory>;
    getContractFactory(
      name: "Vm",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Vm__factory>;

    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "OpenMevLibrary",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OpenMevLibrary>;
    getContractAt(
      name: "OpenMevRouter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OpenMevRouter>;
    getContractAt(
      name: "OpenMevZapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OpenMevZapper>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "IBentoBoxV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBentoBoxV1>;
    getContractAt(
      name: "IFlashBorrower",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFlashBorrower>;
    getContractAt(
      name: "ILendingPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILendingPool>;
    getContractAt(
      name: "IOpenMevRouter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOpenMevRouter>;
    getContractAt(
      name: "IProtocolDataProvider",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IProtocolDataProvider>;
    getContractAt(
      name: "IUniswapV2Factory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Factory>;
    getContractAt(
      name: "IUniswapV2Pair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Pair>;
    getContractAt(
      name: "IWETH",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWETH>;
    getContractAt(
      name: "OpenMevLibrary",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OpenMevLibrary>;
    getContractAt(
      name: "OpenMevRouter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OpenMevRouter>;
    getContractAt(
      name: "TwoStepOwnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TwoStepOwnable>;
    getContractAt(
      name: "DSTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DSTest>;
    getContractAt(
      name: "OpenMevRouterTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OpenMevRouterTest>;
    getContractAt(
      name: "OpenMevRouterFuzzTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OpenMevRouterFuzzTest>;
    getContractAt(
      name: "OpenMevZapperTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OpenMevZapperTest>;
    getContractAt(
      name: "RevertingToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RevertingToken>;
    getContractAt(
      name: "TestUint512",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestUint512>;
    getContractAt(
      name: "TwoStepOwnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TwoStepOwnable>;
    getContractAt(
      name: "IBentoBoxV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBentoBoxV1>;
    getContractAt(
      name: "IFlashBorrower",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFlashBorrower>;
    getContractAt(
      name: "ILendingPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILendingPool>;
    getContractAt(
      name: "IOpenMevRouter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOpenMevRouter>;
    getContractAt(
      name: "IProtocolDataProvider",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IProtocolDataProvider>;
    getContractAt(
      name: "IUniswapV2Factory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Factory>;
    getContractAt(
      name: "IUniswapV2Pair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Pair>;
    getContractAt(
      name: "IUniswapV2Router01",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Router01>;
    getContractAt(
      name: "IUniswapV2Router02",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Router02>;
    getContractAt(
      name: "IWETH",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWETH>;
    getContractAt(
      name: "Vm",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Vm>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
